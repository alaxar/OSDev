
fonts/zap-light16.o:     file format elf32-i386


Disassembly of section .data:

00000000 <_binary_fonts_zap_ext_vga16_psf_start>:
       0:	36 04 03             	ss add $0x3,%al
       3:	10 00                	adc    %al,(%eax)
       5:	00 7e c3             	add    %bh,-0x3d(%esi)
       8:	99                   	cltd   
       9:	99                   	cltd   
       a:	f3 e7 e7             	repz out %eax,$0xe7
       d:	ff e7                	jmp    *%edi
       f:	e7 7e                	out    %eax,$0x7e
	...
      19:	7f e6                	jg     1 <_binary_fonts_zap_ext_vga16_psf_start+0x1>
      1b:	66 66 66 66 c3       	data16 data16 data16 retw 
      20:	00 00                	add    %al,(%eax)
      22:	00 00                	add    %al,(%eax)
      24:	00 00                	add    %al,(%eax)
      26:	00 06                	add    %al,(%esi)
      28:	0c fe                	or     $0xfe,%al
      2a:	18 30                	sbb    %dh,(%eax)
      2c:	fe                   	(bad)  
      2d:	60                   	pusha  
      2e:	c0 00 00             	rolb   $0x0,(%eax)
      31:	00 00                	add    %al,(%eax)
      33:	00 00                	add    %al,(%eax)
      35:	00 00                	add    %al,(%eax)
      37:	0c 18                	or     $0x18,%al
      39:	30 60 30             	xor    %ah,0x30(%eax)
      3c:	18 0c 00             	sbb    %cl,(%eax,%eax,1)
      3f:	7e 00                	jle    41 <_binary_fonts_zap_ext_vga16_psf_start+0x41>
      41:	00 00                	add    %al,(%eax)
      43:	00 00                	add    %al,(%eax)
      45:	00 00                	add    %al,(%eax)
      47:	30 18                	xor    %bl,(%eax)
      49:	0c 06                	or     $0x6,%al
      4b:	0c 18                	or     $0x18,%al
      4d:	30 00                	xor    %al,(%eax)
      4f:	7e 00                	jle    51 <_binary_fonts_zap_ext_vga16_psf_start+0x51>
      51:	00 00                	add    %al,(%eax)
      53:	00 00                	add    %al,(%eax)
      55:	00 00                	add    %al,(%eax)
      57:	00 7c 7c 7c          	add    %bh,0x7c(%esp,%edi,2)
      5b:	7c 7c                	jl     d9 <_binary_fonts_zap_ext_vga16_psf_start+0xd9>
      5d:	7c 7c                	jl     db <_binary_fonts_zap_ext_vga16_psf_start+0xdb>
	...
      67:	00 10                	add    %dl,(%eax)
      69:	38 7c fe 7c          	cmp    %bh,0x7c(%esi,%edi,8)
      6d:	38 10                	cmp    %dl,(%eax)
      6f:	00 00                	add    %al,(%eax)
      71:	00 00                	add    %al,(%eax)
      73:	00 00                	add    %al,(%eax)
      75:	60                   	pusha  
      76:	e0 62                	loopne da <_binary_fonts_zap_ext_vga16_psf_start+0xda>
      78:	66 6c                	data16 insb (%dx),%es:(%edi)
      7a:	18 30                	sbb    %dh,(%eax)
      7c:	66 ce                	data16 into 
      7e:	96                   	xchg   %eax,%esi
      7f:	3f                   	aas    
      80:	06                   	push   %es
      81:	06                   	push   %es
      82:	00 00                	add    %al,(%eax)
      84:	00 60 e0             	add    %ah,-0x20(%eax)
      87:	62 66 6c             	bound  %esp,0x6c(%esi)
      8a:	18 30                	sbb    %dh,(%eax)
      8c:	60                   	pusha  
      8d:	ce                   	into   
      8e:	9b                   	fwait
      8f:	06                   	push   %es
      90:	0c 1f                	or     $0x1f,%al
      92:	00 00                	add    %al,(%eax)
      94:	00 e0                	add    %ah,%al
      96:	30 62 36             	xor    %ah,0x36(%edx)
      99:	ec                   	in     (%dx),%al
      9a:	18 30                	sbb    %dh,(%eax)
      9c:	66 ce                	data16 into 
      9e:	96                   	xchg   %eax,%esi
      9f:	3f                   	aas    
      a0:	06                   	push   %es
      a1:	06                   	push   %es
      a2:	00 00                	add    %al,(%eax)
      a4:	00 18                	add    %bl,(%eax)
      a6:	18 18                	sbb    %bl,(%eax)
      a8:	18 18                	sbb    %bl,(%eax)
      aa:	00 00                	add    %al,(%eax)
      ac:	18 18                	sbb    %bl,(%eax)
      ae:	18 18                	sbb    %bl,(%eax)
      b0:	18 00                	sbb    %al,(%eax)
      b2:	00 00                	add    %al,(%eax)
      b4:	00 6c 6c 00          	add    %ch,0x0(%esp,%ebp,2)
	...
      d0:	0c 06                	or     $0x6,%al
      d2:	7c 00                	jl     d4 <_binary_fonts_zap_ext_vga16_psf_start+0xd4>
      d4:	00 00                	add    %al,(%eax)
      d6:	0e                   	push   %cs
      d7:	1b 18                	sbb    (%eax),%ebx
      d9:	18 18                	sbb    %bl,(%eax)
      db:	7e 18                	jle    f5 <_binary_fonts_zap_ext_vga16_psf_start+0xf5>
      dd:	18 18                	sbb    %bl,(%eax)
      df:	18 18                	sbb    %bl,(%eax)
      e1:	d8 70 00             	fdivs  0x0(%eax)
      e4:	00 00                	add    %al,(%eax)
      e6:	18 18                	sbb    %bl,(%eax)
      e8:	18 7e 18             	sbb    %bh,0x18(%esi)
      eb:	18 18                	sbb    %bl,(%eax)
      ed:	18 18                	sbb    %bl,(%eax)
      ef:	18 00                	sbb    %al,(%eax)
      f1:	00 00                	add    %al,(%eax)
      f3:	00 00                	add    %al,(%eax)
      f5:	00 18                	add    %bl,(%eax)
      f7:	18 18                	sbb    %bl,(%eax)
      f9:	7e 18                	jle    113 <_binary_fonts_zap_ext_vga16_psf_start+0x113>
      fb:	18 7e 18             	sbb    %bh,0x18(%esi)
      fe:	18 18                	sbb    %bl,(%eax)
	...
     108:	c2 c6 0c             	ret    $0xcc6
     10b:	18 30                	sbb    %dh,(%eax)
     10d:	60                   	pusha  
     10e:	db 9b 00 00 00 00    	fistpl 0x0(%ebx)
     114:	00 00                	add    %al,(%eax)
     116:	f1                   	icebp  
     117:	5b                   	pop    %ebx
     118:	55                   	push   %ebp
     119:	51                   	push   %ecx
	...
     12e:	db db                	fcmovnu %st(3),%st
	...
     138:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     13b:	30 18                	xor    %bl,(%eax)
     13d:	0c 00                	or     $0x0,%al
	...
     147:	00 00                	add    %al,(%eax)
     149:	30 18                	xor    %bl,(%eax)
     14b:	0c 18                	or     $0x18,%al
     14d:	30 00                	xor    %al,(%eax)
     14f:	00 00                	add    %al,(%eax)
     151:	00 00                	add    %al,(%eax)
     153:	00 00                	add    %al,(%eax)
     155:	66 66 66 33 00       	data16 data16 xor (%eax),%ax
	...
     162:	00 00                	add    %al,(%eax)
     164:	00 66 66             	add    %ah,0x66(%esi)
     167:	66 cc                	data16 int3 
	...
     17d:	00 66 66             	add    %ah,0x66(%esi)
     180:	66 cc                	data16 int3 
	...
     18e:	66 66 66 33 00       	data16 data16 xor (%eax),%ax
	...
     19b:	00 00                	add    %al,(%eax)
     19d:	00 18                	add    %bl,(%eax)
     19f:	18 18                	sbb    %bl,(%eax)
     1a1:	0c 00                	or     $0x0,%al
     1a3:	00 6c 38 00          	add    %ch,0x0(%eax,%edi,1)
     1a7:	3c 66                	cmp    $0x66,%al
     1a9:	c2 c0 de             	ret    $0xdec0
     1ac:	c6 c6 66             	mov    $0x66,%dh
     1af:	3a 00                	cmp    (%eax),%al
     1b1:	00 00                	add    %al,(%eax)
     1b3:	00 00                	add    %al,(%eax)
     1b5:	00 6c 38 00          	add    %ch,0x0(%eax,%edi,1)
     1b9:	76 cc                	jbe    187 <_binary_fonts_zap_ext_vga16_psf_start+0x187>
     1bb:	cc                   	int3   
     1bc:	cc                   	int3   
     1bd:	cc                   	int3   
     1be:	cc                   	int3   
     1bf:	7c 0c                	jl     1cd <_binary_fonts_zap_ext_vga16_psf_start+0x1cd>
     1c1:	cc                   	int3   
     1c2:	78 00                	js     1c4 <_binary_fonts_zap_ext_vga16_psf_start+0x1c4>
     1c4:	00 18                	add    %bl,(%eax)
     1c6:	18 00                	sbb    %al,(%eax)
     1c8:	3c 18                	cmp    $0x18,%al
     1ca:	18 18                	sbb    %bl,(%eax)
     1cc:	18 18                	sbb    %bl,(%eax)
     1ce:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
	...
     1d9:	38 18                	cmp    %bl,(%eax)
     1db:	18 18                	sbb    %bl,(%eax)
     1dd:	18 18                	sbb    %bl,(%eax)
     1df:	3c 00                	cmp    $0x0,%al
     1e1:	00 00                	add    %al,(%eax)
     1e3:	00 00                	add    %al,(%eax)
     1e5:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     1e9:	60                   	pusha  
     1ea:	38 0c 06             	cmp    %cl,(%esi,%eax,1)
     1ed:	c6 c6 7c             	mov    $0x7c,%dh
     1f0:	0c 06                	or     $0x6,%al
     1f2:	7c 00                	jl     1f4 <_binary_fonts_zap_ext_vga16_psf_start+0x1f4>
     1f4:	00 00                	add    %al,(%eax)
     1f6:	00 00                	add    %al,(%eax)
     1f8:	00 7c c6 60          	add    %bh,0x60(%esi,%eax,8)
     1fc:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
     1ff:	7c 0c                	jl     20d <_binary_fonts_zap_ext_vga16_psf_start+0x20d>
     201:	06                   	push   %es
     202:	7c 00                	jl     204 <_binary_fonts_zap_ext_vga16_psf_start+0x204>
	...
     214:	00 00                	add    %al,(%eax)
     216:	18 3c 3c             	sbb    %bh,(%esp,%edi,1)
     219:	3c 18                	cmp    $0x18,%al
     21b:	18 18                	sbb    %bl,(%eax)
     21d:	00 18                	add    %bl,(%eax)
     21f:	18 00                	sbb    %al,(%eax)
     221:	00 00                	add    %al,(%eax)
     223:	00 00                	add    %al,(%eax)
     225:	66 66 66 24 00       	data16 data16 data16 and $0x0,%al
	...
     236:	00 6c 6c fe          	add    %ch,-0x2(%esp,%ebp,2)
     23a:	6c                   	insb   (%dx),%es:(%edi)
     23b:	6c                   	insb   (%dx),%es:(%edi)
     23c:	6c                   	insb   (%dx),%es:(%edi)
     23d:	fe                   	(bad)  
     23e:	6c                   	insb   (%dx),%es:(%edi)
     23f:	6c                   	insb   (%dx),%es:(%edi)
     240:	00 00                	add    %al,(%eax)
     242:	00 00                	add    %al,(%eax)
     244:	00 10                	add    %dl,(%eax)
     246:	10 7c d6 d2          	adc    %bh,-0x2e(%esi,%edx,8)
     24a:	d0 7c 16 96          	sarb   -0x6a(%esi,%edx,1)
     24e:	d6                   	(bad)  
     24f:	7c 10                	jl     261 <_binary_fonts_zap_ext_vga16_psf_start+0x261>
     251:	10 00                	adc    %al,(%eax)
     253:	00 00                	add    %al,(%eax)
     255:	00 00                	add    %al,(%eax)
     257:	00 c2                	add    %al,%dl
     259:	c6                   	(bad)  
     25a:	0c 18                	or     $0x18,%al
     25c:	30 60 c6             	xor    %ah,-0x3a(%eax)
     25f:	86 00                	xchg   %al,(%eax)
     261:	00 00                	add    %al,(%eax)
     263:	00 00                	add    %al,(%eax)
     265:	00 38                	add    %bh,(%eax)
     267:	6c                   	insb   (%dx),%es:(%edi)
     268:	6c                   	insb   (%dx),%es:(%edi)
     269:	38 76 dc             	cmp    %dh,-0x24(%esi)
     26c:	cc                   	int3   
     26d:	cc                   	int3   
     26e:	cc                   	int3   
     26f:	76 00                	jbe    271 <_binary_fonts_zap_ext_vga16_psf_start+0x271>
     271:	00 00                	add    %al,(%eax)
     273:	00 00                	add    %al,(%eax)
     275:	18 18                	sbb    %bl,(%eax)
     277:	18 10                	sbb    %dl,(%eax)
	...
     285:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     288:	30 30                	xor    %dh,(%eax)
     28a:	30 30                	xor    %dh,(%eax)
     28c:	30 30                	xor    %dh,(%eax)
     28e:	18 0c 00             	sbb    %cl,(%eax,%eax,1)
     291:	00 00                	add    %al,(%eax)
     293:	00 00                	add    %al,(%eax)
     295:	00 30                	add    %dh,(%eax)
     297:	18 0c 0c             	sbb    %cl,(%esp,%ecx,1)
     29a:	0c 0c                	or     $0xc,%al
     29c:	0c 0c                	or     $0xc,%al
     29e:	18 30                	sbb    %dh,(%eax)
	...
     2a8:	00 6c 38 fe          	add    %ch,-0x2(%eax,%edi,1)
     2ac:	38 6c 00 00          	cmp    %ch,0x0(%eax,%eax,1)
	...
     2b8:	00 18                	add    %bl,(%eax)
     2ba:	18 7e 18             	sbb    %bh,0x18(%esi)
     2bd:	18 00                	sbb    %al,(%eax)
	...
     2cb:	00 00                	add    %al,(%eax)
     2cd:	00 18                	add    %bl,(%eax)
     2cf:	18 18                	sbb    %bl,(%eax)
     2d1:	30 00                	xor    %al,(%eax)
	...
     2db:	7e 00                	jle    2dd <_binary_fonts_zap_ext_vga16_psf_start+0x2dd>
	...
     2ed:	00 18                	add    %bl,(%eax)
     2ef:	18 00                	sbb    %al,(%eax)
     2f1:	00 00                	add    %al,(%eax)
     2f3:	00 00                	add    %al,(%eax)
     2f5:	00 00                	add    %al,(%eax)
     2f7:	00 02                	add    %al,(%edx)
     2f9:	06                   	push   %es
     2fa:	0c 18                	or     $0x18,%al
     2fc:	30 60 c0             	xor    %ah,-0x40(%eax)
     2ff:	80 00 00             	addb   $0x0,(%eax)
     302:	00 00                	add    %al,(%eax)
     304:	00 00                	add    %al,(%eax)
     306:	7c c6                	jl     2ce <_binary_fonts_zap_ext_vga16_psf_start+0x2ce>
     308:	c6 c6 d6             	mov    $0xd6,%dh
     30b:	d6                   	(bad)  
     30c:	c6 c6 c6             	mov    $0xc6,%dh
     30f:	7c 00                	jl     311 <_binary_fonts_zap_ext_vga16_psf_start+0x311>
     311:	00 00                	add    %al,(%eax)
     313:	00 00                	add    %al,(%eax)
     315:	00 18                	add    %bl,(%eax)
     317:	38 78 18             	cmp    %bh,0x18(%eax)
     31a:	18 18                	sbb    %bl,(%eax)
     31c:	18 18                	sbb    %bl,(%eax)
     31e:	18 7e 00             	sbb    %bh,0x0(%esi)
     321:	00 00                	add    %al,(%eax)
     323:	00 00                	add    %al,(%eax)
     325:	00 7c c6 06          	add    %bh,0x6(%esi,%eax,8)
     329:	0c 18                	or     $0x18,%al
     32b:	30 60 c0             	xor    %ah,-0x40(%eax)
     32e:	c6                   	(bad)  
     32f:	fe 00                	incb   (%eax)
     331:	00 00                	add    %al,(%eax)
     333:	00 00                	add    %al,(%eax)
     335:	00 7c c6 06          	add    %bh,0x6(%esi,%eax,8)
     339:	06                   	push   %es
     33a:	3c 06                	cmp    $0x6,%al
     33c:	06                   	push   %es
     33d:	06                   	push   %es
     33e:	c6                   	(bad)  
     33f:	7c 00                	jl     341 <_binary_fonts_zap_ext_vga16_psf_start+0x341>
     341:	00 00                	add    %al,(%eax)
     343:	00 00                	add    %al,(%eax)
     345:	00 0c 1c             	add    %cl,(%esp,%ebx,1)
     348:	3c 6c                	cmp    $0x6c,%al
     34a:	cc                   	int3   
     34b:	fe 0c 0c             	decb   (%esp,%ecx,1)
     34e:	0c 1e                	or     $0x1e,%al
     350:	00 00                	add    %al,(%eax)
     352:	00 00                	add    %al,(%eax)
     354:	00 00                	add    %al,(%eax)
     356:	fe c0                	inc    %al
     358:	c0 c0 fc             	rol    $0xfc,%al
     35b:	06                   	push   %es
     35c:	06                   	push   %es
     35d:	06                   	push   %es
     35e:	c6                   	(bad)  
     35f:	7c 00                	jl     361 <_binary_fonts_zap_ext_vga16_psf_start+0x361>
     361:	00 00                	add    %al,(%eax)
     363:	00 00                	add    %al,(%eax)
     365:	00 38                	add    %bh,(%eax)
     367:	60                   	pusha  
     368:	c0 c0 fc             	rol    $0xfc,%al
     36b:	c6 c6 c6             	mov    $0xc6,%dh
     36e:	c6                   	(bad)  
     36f:	7c 00                	jl     371 <_binary_fonts_zap_ext_vga16_psf_start+0x371>
     371:	00 00                	add    %al,(%eax)
     373:	00 00                	add    %al,(%eax)
     375:	00 fe                	add    %bh,%dh
     377:	c6 06 06             	movb   $0x6,(%esi)
     37a:	0c 18                	or     $0x18,%al
     37c:	30 30                	xor    %dh,(%eax)
     37e:	30 30                	xor    %dh,(%eax)
     380:	00 00                	add    %al,(%eax)
     382:	00 00                	add    %al,(%eax)
     384:	00 00                	add    %al,(%eax)
     386:	7c c6                	jl     34e <_binary_fonts_zap_ext_vga16_psf_start+0x34e>
     388:	c6 c6 7c             	mov    $0x7c,%dh
     38b:	c6 c6 c6             	mov    $0xc6,%dh
     38e:	c6                   	(bad)  
     38f:	7c 00                	jl     391 <_binary_fonts_zap_ext_vga16_psf_start+0x391>
     391:	00 00                	add    %al,(%eax)
     393:	00 00                	add    %al,(%eax)
     395:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     399:	c6                   	(bad)  
     39a:	7e 06                	jle    3a2 <_binary_fonts_zap_ext_vga16_psf_start+0x3a2>
     39c:	06                   	push   %es
     39d:	06                   	push   %es
     39e:	0c 78                	or     $0x78,%al
	...
     3a8:	00 18                	add    %bl,(%eax)
     3aa:	18 00                	sbb    %al,(%eax)
     3ac:	00 00                	add    %al,(%eax)
     3ae:	18 18                	sbb    %bl,(%eax)
	...
     3b8:	00 18                	add    %bl,(%eax)
     3ba:	18 00                	sbb    %al,(%eax)
     3bc:	00 00                	add    %al,(%eax)
     3be:	18 18                	sbb    %bl,(%eax)
     3c0:	18 30                	sbb    %dh,(%eax)
     3c2:	00 00                	add    %al,(%eax)
     3c4:	00 00                	add    %al,(%eax)
     3c6:	00 06                	add    %al,(%esi)
     3c8:	0c 18                	or     $0x18,%al
     3ca:	30 60 30             	xor    %ah,0x30(%eax)
     3cd:	18 0c 06             	sbb    %cl,(%esi,%eax,1)
	...
     3d8:	00 7e 00             	add    %bh,0x0(%esi)
     3db:	00 7e 00             	add    %bh,0x0(%esi)
	...
     3e6:	00 60 30             	add    %ah,0x30(%eax)
     3e9:	18 0c 06             	sbb    %cl,(%esi,%eax,1)
     3ec:	0c 18                	or     $0x18,%al
     3ee:	30 60 00             	xor    %ah,0x0(%eax)
     3f1:	00 00                	add    %al,(%eax)
     3f3:	00 00                	add    %al,(%eax)
     3f5:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     3f9:	0c 18                	or     $0x18,%al
     3fb:	18 18                	sbb    %bl,(%eax)
     3fd:	00 18                	add    %bl,(%eax)
     3ff:	18 00                	sbb    %al,(%eax)
     401:	00 00                	add    %al,(%eax)
     403:	00 00                	add    %al,(%eax)
     405:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     409:	c6                   	(bad)  
     40a:	de de                	(bad)  
     40c:	de dc                	(bad)  
     40e:	c0 7c 00 00 00       	sarb   $0x0,0x0(%eax,%eax,1)
     413:	00 00                	add    %al,(%eax)
     415:	00 10                	add    %dl,(%eax)
     417:	38 6c c6 c6          	cmp    %ch,-0x3a(%esi,%eax,8)
     41b:	fe c6                	inc    %dh
     41d:	c6 c6 c6             	mov    $0xc6,%dh
     420:	00 00                	add    %al,(%eax)
     422:	00 00                	add    %al,(%eax)
     424:	00 00                	add    %al,(%eax)
     426:	fc                   	cld    
     427:	66 66 66 7c 66       	data16 data16 data16 jl 492 <_binary_fonts_zap_ext_vga16_psf_start+0x492>
     42c:	66 66 66 fc          	data16 data16 data16 cld 
     430:	00 00                	add    %al,(%eax)
     432:	00 00                	add    %al,(%eax)
     434:	00 00                	add    %al,(%eax)
     436:	3c 66                	cmp    $0x66,%al
     438:	c2 c0 c0             	ret    $0xc0c0
     43b:	c0 c0 c2             	rol    $0xc2,%al
     43e:	66 3c 00             	data16 cmp $0x0,%al
     441:	00 00                	add    %al,(%eax)
     443:	00 00                	add    %al,(%eax)
     445:	00 f8                	add    %bh,%al
     447:	6c                   	insb   (%dx),%es:(%edi)
     448:	66 66 66 66 66 66 6c 	data16 data16 data16 data16 data16 data16 insb (%dx),%es:(%edi)
     44f:	f8                   	clc    
     450:	00 00                	add    %al,(%eax)
     452:	00 00                	add    %al,(%eax)
     454:	00 00                	add    %al,(%eax)
     456:	fe                   	(bad)  
     457:	66 62 68 78          	bound  %bp,0x78(%eax)
     45b:	68 60 62 66 fe       	push   $0xfe666260
     460:	00 00                	add    %al,(%eax)
     462:	00 00                	add    %al,(%eax)
     464:	00 00                	add    %al,(%eax)
     466:	fe                   	(bad)  
     467:	66 62 68 78          	bound  %bp,0x78(%eax)
     46b:	68 60 60 60 f0       	push   $0xf0606060
     470:	00 00                	add    %al,(%eax)
     472:	00 00                	add    %al,(%eax)
     474:	00 00                	add    %al,(%eax)
     476:	3c 66                	cmp    $0x66,%al
     478:	c2 c0 c0             	ret    $0xc0c0
     47b:	de c6                	faddp  %st,%st(6)
     47d:	c6                   	(bad)  
     47e:	66 3a 00             	data16 cmp (%eax),%al
     481:	00 00                	add    %al,(%eax)
     483:	00 00                	add    %al,(%eax)
     485:	00 c6                	add    %al,%dh
     487:	c6 c6 c6             	mov    $0xc6,%dh
     48a:	fe c6                	inc    %dh
     48c:	c6 c6 c6             	mov    $0xc6,%dh
     48f:	c6 00 00             	movb   $0x0,(%eax)
     492:	00 00                	add    %al,(%eax)
     494:	00 00                	add    %al,(%eax)
     496:	3c 18                	cmp    $0x18,%al
     498:	18 18                	sbb    %bl,(%eax)
     49a:	18 18                	sbb    %bl,(%eax)
     49c:	18 18                	sbb    %bl,(%eax)
     49e:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
     4a1:	00 00                	add    %al,(%eax)
     4a3:	00 00                	add    %al,(%eax)
     4a5:	00 1e                	add    %bl,(%esi)
     4a7:	0c 0c                	or     $0xc,%al
     4a9:	0c 0c                	or     $0xc,%al
     4ab:	0c cc                	or     $0xcc,%al
     4ad:	cc                   	int3   
     4ae:	cc                   	int3   
     4af:	78 00                	js     4b1 <_binary_fonts_zap_ext_vga16_psf_start+0x4b1>
     4b1:	00 00                	add    %al,(%eax)
     4b3:	00 00                	add    %al,(%eax)
     4b5:	00 e6                	add    %ah,%dh
     4b7:	66 66 6c             	data16 data16 insb (%dx),%es:(%edi)
     4ba:	78 78                	js     534 <_binary_fonts_zap_ext_vga16_psf_start+0x534>
     4bc:	6c                   	insb   (%dx),%es:(%edi)
     4bd:	66 66 e6 00          	data16 data16 out %al,$0x0
     4c1:	00 00                	add    %al,(%eax)
     4c3:	00 00                	add    %al,(%eax)
     4c5:	00 f0                	add    %dh,%al
     4c7:	60                   	pusha  
     4c8:	60                   	pusha  
     4c9:	60                   	pusha  
     4ca:	60                   	pusha  
     4cb:	60                   	pusha  
     4cc:	60                   	pusha  
     4cd:	62 66 fe             	bound  %esp,-0x2(%esi)
     4d0:	00 00                	add    %al,(%eax)
     4d2:	00 00                	add    %al,(%eax)
     4d4:	00 00                	add    %al,(%eax)
     4d6:	c3                   	ret    
     4d7:	e7 ff                	out    %eax,$0xff
     4d9:	ff                   	(bad)  
     4da:	db c3                	fcmovnb %st(3),%st
     4dc:	c3                   	ret    
     4dd:	c3                   	ret    
     4de:	c3                   	ret    
     4df:	c3                   	ret    
     4e0:	00 00                	add    %al,(%eax)
     4e2:	00 00                	add    %al,(%eax)
     4e4:	00 00                	add    %al,(%eax)
     4e6:	c6                   	(bad)  
     4e7:	e6 f6                	out    %al,$0xf6
     4e9:	fe                   	(bad)  
     4ea:	de ce                	fmulp  %st,%st(6)
     4ec:	c6 c6 c6             	mov    $0xc6,%dh
     4ef:	c6 00 00             	movb   $0x0,(%eax)
     4f2:	00 00                	add    %al,(%eax)
     4f4:	00 00                	add    %al,(%eax)
     4f6:	7c c6                	jl     4be <_binary_fonts_zap_ext_vga16_psf_start+0x4be>
     4f8:	c6 c6 c6             	mov    $0xc6,%dh
     4fb:	c6 c6 c6             	mov    $0xc6,%dh
     4fe:	c6                   	(bad)  
     4ff:	7c 00                	jl     501 <_binary_fonts_zap_ext_vga16_psf_start+0x501>
     501:	00 00                	add    %al,(%eax)
     503:	00 00                	add    %al,(%eax)
     505:	00 fc                	add    %bh,%ah
     507:	66 66 66 7c 60       	data16 data16 data16 jl 56c <_binary_fonts_zap_ext_vga16_psf_start+0x56c>
     50c:	60                   	pusha  
     50d:	60                   	pusha  
     50e:	60                   	pusha  
     50f:	f0 00 00             	lock add %al,(%eax)
     512:	00 00                	add    %al,(%eax)
     514:	00 00                	add    %al,(%eax)
     516:	7c c6                	jl     4de <_binary_fonts_zap_ext_vga16_psf_start+0x4de>
     518:	c6 c6 c6             	mov    $0xc6,%dh
     51b:	c6 c6 d6             	mov    $0xd6,%dh
     51e:	de 7c 0c 0e          	fidivrs 0xe(%esp,%ecx,1)
     522:	00 00                	add    %al,(%eax)
     524:	00 00                	add    %al,(%eax)
     526:	fc                   	cld    
     527:	66 66 66 7c 6c       	data16 data16 data16 jl 598 <_binary_fonts_zap_ext_vga16_psf_start+0x598>
     52c:	66 66 66 e6 00       	data16 data16 data16 out %al,$0x0
     531:	00 00                	add    %al,(%eax)
     533:	00 00                	add    %al,(%eax)
     535:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     539:	60                   	pusha  
     53a:	38 0c 06             	cmp    %cl,(%esi,%eax,1)
     53d:	c6 c6 7c             	mov    $0x7c,%dh
     540:	00 00                	add    %al,(%eax)
     542:	00 00                	add    %al,(%eax)
     544:	00 00                	add    %al,(%eax)
     546:	ff                   	(bad)  
     547:	db 99 18 18 18 18    	fistpl 0x18181818(%ecx)
     54d:	18 18                	sbb    %bl,(%eax)
     54f:	3c 00                	cmp    $0x0,%al
     551:	00 00                	add    %al,(%eax)
     553:	00 00                	add    %al,(%eax)
     555:	00 c6                	add    %al,%dh
     557:	c6 c6 c6             	mov    $0xc6,%dh
     55a:	c6 c6 c6             	mov    $0xc6,%dh
     55d:	c6 c6 7c             	mov    $0x7c,%dh
     560:	00 00                	add    %al,(%eax)
     562:	00 00                	add    %al,(%eax)
     564:	00 00                	add    %al,(%eax)
     566:	c3                   	ret    
     567:	c3                   	ret    
     568:	c3                   	ret    
     569:	c3                   	ret    
     56a:	c3                   	ret    
     56b:	c3                   	ret    
     56c:	c3                   	ret    
     56d:	66 3c 18             	data16 cmp $0x18,%al
     570:	00 00                	add    %al,(%eax)
     572:	00 00                	add    %al,(%eax)
     574:	00 00                	add    %al,(%eax)
     576:	c3                   	ret    
     577:	c3                   	ret    
     578:	c3                   	ret    
     579:	c3                   	ret    
     57a:	c3                   	ret    
     57b:	db db                	fcmovnu %st(3),%st
     57d:	ff 66 66             	jmp    *0x66(%esi)
     580:	00 00                	add    %al,(%eax)
     582:	00 00                	add    %al,(%eax)
     584:	00 00                	add    %al,(%eax)
     586:	c3                   	ret    
     587:	c3                   	ret    
     588:	66 3c 18             	data16 cmp $0x18,%al
     58b:	18 3c 66             	sbb    %bh,(%esi,%eiz,2)
     58e:	c3                   	ret    
     58f:	c3                   	ret    
     590:	00 00                	add    %al,(%eax)
     592:	00 00                	add    %al,(%eax)
     594:	00 00                	add    %al,(%eax)
     596:	c3                   	ret    
     597:	c3                   	ret    
     598:	c3                   	ret    
     599:	66 3c 18             	data16 cmp $0x18,%al
     59c:	18 18                	sbb    %bl,(%eax)
     59e:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
     5a1:	00 00                	add    %al,(%eax)
     5a3:	00 00                	add    %al,(%eax)
     5a5:	00 ff                	add    %bh,%bh
     5a7:	c3                   	ret    
     5a8:	86 0c 18             	xchg   %cl,(%eax,%ebx,1)
     5ab:	30 60 c1             	xor    %ah,-0x3f(%eax)
     5ae:	c3                   	ret    
     5af:	ff 00                	incl   (%eax)
     5b1:	00 00                	add    %al,(%eax)
     5b3:	00 00                	add    %al,(%eax)
     5b5:	00 3c 30             	add    %bh,(%eax,%esi,1)
     5b8:	30 30                	xor    %dh,(%eax)
     5ba:	30 30                	xor    %dh,(%eax)
     5bc:	30 30                	xor    %dh,(%eax)
     5be:	30 3c 00             	xor    %bh,(%eax,%eax,1)
     5c1:	00 00                	add    %al,(%eax)
     5c3:	00 00                	add    %al,(%eax)
     5c5:	00 00                	add    %al,(%eax)
     5c7:	00 80 c0 60 30 18    	add    %al,0x183060c0(%eax)
     5cd:	0c 06                	or     $0x6,%al
     5cf:	02 00                	add    (%eax),%al
     5d1:	00 00                	add    %al,(%eax)
     5d3:	00 00                	add    %al,(%eax)
     5d5:	00 3c 0c             	add    %bh,(%esp,%ecx,1)
     5d8:	0c 0c                	or     $0xc,%al
     5da:	0c 0c                	or     $0xc,%al
     5dc:	0c 0c                	or     $0xc,%al
     5de:	0c 3c                	or     $0x3c,%al
     5e0:	00 00                	add    %al,(%eax)
     5e2:	00 00                	add    %al,(%eax)
     5e4:	10 38                	adc    %bh,(%eax)
     5e6:	6c                   	insb   (%dx),%es:(%edi)
     5e7:	c6 00 00             	movb   $0x0,(%eax)
	...
     5fe:	00 00                	add    %al,(%eax)
     600:	00 fe                	add    %bh,%dh
     602:	00 00                	add    %al,(%eax)
     604:	00 60 30             	add    %ah,0x30(%eax)
     607:	18 0c 00             	sbb    %cl,(%eax,%eax,1)
	...
     616:	00 00                	add    %al,(%eax)
     618:	00 78 0c             	add    %bh,0xc(%eax)
     61b:	7c cc                	jl     5e9 <_binary_fonts_zap_ext_vga16_psf_start+0x5e9>
     61d:	cc                   	int3   
     61e:	cc                   	int3   
     61f:	76 00                	jbe    621 <_binary_fonts_zap_ext_vga16_psf_start+0x621>
     621:	00 00                	add    %al,(%eax)
     623:	00 00                	add    %al,(%eax)
     625:	00 e0                	add    %ah,%al
     627:	60                   	pusha  
     628:	60                   	pusha  
     629:	78 6c                	js     697 <_binary_fonts_zap_ext_vga16_psf_start+0x697>
     62b:	66 66 66 66 7c 00    	data16 data16 data16 data16 jl 631 <_binary_fonts_zap_ext_vga16_psf_start+0x631>
	...
     639:	7c c6                	jl     601 <_binary_fonts_zap_ext_vga16_psf_start+0x601>
     63b:	c0 c0 c0             	rol    $0xc0,%al
     63e:	c6                   	(bad)  
     63f:	7c 00                	jl     641 <_binary_fonts_zap_ext_vga16_psf_start+0x641>
     641:	00 00                	add    %al,(%eax)
     643:	00 00                	add    %al,(%eax)
     645:	00 1c 0c             	add    %bl,(%esp,%ecx,1)
     648:	0c 3c                	or     $0x3c,%al
     64a:	6c                   	insb   (%dx),%es:(%edi)
     64b:	cc                   	int3   
     64c:	cc                   	int3   
     64d:	cc                   	int3   
     64e:	cc                   	int3   
     64f:	76 00                	jbe    651 <_binary_fonts_zap_ext_vga16_psf_start+0x651>
	...
     659:	7c c6                	jl     621 <_binary_fonts_zap_ext_vga16_psf_start+0x621>
     65b:	fe c0                	inc    %al
     65d:	c0 c6 7c             	rol    $0x7c,%dh
     660:	00 00                	add    %al,(%eax)
     662:	00 00                	add    %al,(%eax)
     664:	00 00                	add    %al,(%eax)
     666:	38 6c 64 60          	cmp    %ch,0x60(%esp,%eiz,2)
     66a:	f0 60                	lock pusha 
     66c:	60                   	pusha  
     66d:	60                   	pusha  
     66e:	60                   	pusha  
     66f:	f0 00 00             	lock add %al,(%eax)
     672:	00 00                	add    %al,(%eax)
     674:	00 00                	add    %al,(%eax)
     676:	00 00                	add    %al,(%eax)
     678:	00 76 cc             	add    %dh,-0x34(%esi)
     67b:	cc                   	int3   
     67c:	cc                   	int3   
     67d:	cc                   	int3   
     67e:	cc                   	int3   
     67f:	7c 0c                	jl     68d <_binary_fonts_zap_ext_vga16_psf_start+0x68d>
     681:	cc                   	int3   
     682:	78 00                	js     684 <_binary_fonts_zap_ext_vga16_psf_start+0x684>
     684:	00 00                	add    %al,(%eax)
     686:	e0 60                	loopne 6e8 <_binary_fonts_zap_ext_vga16_psf_start+0x6e8>
     688:	60                   	pusha  
     689:	6c                   	insb   (%dx),%es:(%edi)
     68a:	76 66                	jbe    6f2 <_binary_fonts_zap_ext_vga16_psf_start+0x6f2>
     68c:	66 66 66 e6 00       	data16 data16 data16 out %al,$0x0
     691:	00 00                	add    %al,(%eax)
     693:	00 00                	add    %al,(%eax)
     695:	00 18                	add    %bl,(%eax)
     697:	18 00                	sbb    %al,(%eax)
     699:	38 18                	cmp    %bl,(%eax)
     69b:	18 18                	sbb    %bl,(%eax)
     69d:	18 18                	sbb    %bl,(%eax)
     69f:	3c 00                	cmp    $0x0,%al
     6a1:	00 00                	add    %al,(%eax)
     6a3:	00 00                	add    %al,(%eax)
     6a5:	00 06                	add    %al,(%esi)
     6a7:	06                   	push   %es
     6a8:	00 0e                	add    %cl,(%esi)
     6aa:	06                   	push   %es
     6ab:	06                   	push   %es
     6ac:	06                   	push   %es
     6ad:	06                   	push   %es
     6ae:	06                   	push   %es
     6af:	06                   	push   %es
     6b0:	66 66 3c 00          	data16 data16 cmp $0x0,%al
     6b4:	00 00                	add    %al,(%eax)
     6b6:	e0 60                	loopne 718 <_binary_fonts_zap_ext_vga16_psf_start+0x718>
     6b8:	60                   	pusha  
     6b9:	66 6c                	data16 insb (%dx),%es:(%edi)
     6bb:	78 78                	js     735 <_binary_fonts_zap_ext_vga16_psf_start+0x735>
     6bd:	6c                   	insb   (%dx),%es:(%edi)
     6be:	66 e6 00             	data16 out %al,$0x0
     6c1:	00 00                	add    %al,(%eax)
     6c3:	00 00                	add    %al,(%eax)
     6c5:	00 38                	add    %bh,(%eax)
     6c7:	18 18                	sbb    %bl,(%eax)
     6c9:	18 18                	sbb    %bl,(%eax)
     6cb:	18 18                	sbb    %bl,(%eax)
     6cd:	18 18                	sbb    %bl,(%eax)
     6cf:	3c 00                	cmp    $0x0,%al
	...
     6d9:	e6 ff                	out    %al,$0xff
     6db:	db db                	fcmovnu %st(3),%st
     6dd:	db db                	fcmovnu %st(3),%st
     6df:	db 00                	fildl  (%eax)
	...
     6e9:	dc 66 66             	fsubl  0x66(%esi)
     6ec:	66 66 66 66 00 00    	data16 data16 data16 data16 add %al,(%eax)
     6f2:	00 00                	add    %al,(%eax)
     6f4:	00 00                	add    %al,(%eax)
     6f6:	00 00                	add    %al,(%eax)
     6f8:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     6fc:	c6 c6 c6             	mov    $0xc6,%dh
     6ff:	7c 00                	jl     701 <_binary_fonts_zap_ext_vga16_psf_start+0x701>
	...
     709:	dc 66 66             	fsubl  0x66(%esi)
     70c:	66 66 66 7c 60       	data16 data16 data16 jl 771 <_binary_fonts_zap_ext_vga16_psf_start+0x771>
     711:	60                   	pusha  
     712:	f0 00 00             	lock add %al,(%eax)
     715:	00 00                	add    %al,(%eax)
     717:	00 00                	add    %al,(%eax)
     719:	76 cc                	jbe    6e7 <_binary_fonts_zap_ext_vga16_psf_start+0x6e7>
     71b:	cc                   	int3   
     71c:	cc                   	int3   
     71d:	cc                   	int3   
     71e:	cc                   	int3   
     71f:	7c 0c                	jl     72d <_binary_fonts_zap_ext_vga16_psf_start+0x72d>
     721:	0c 1e                	or     $0x1e,%al
     723:	00 00                	add    %al,(%eax)
     725:	00 00                	add    %al,(%eax)
     727:	00 00                	add    %al,(%eax)
     729:	dc 76 66             	fdivl  0x66(%esi)
     72c:	60                   	pusha  
     72d:	60                   	pusha  
     72e:	60                   	pusha  
     72f:	f0 00 00             	lock add %al,(%eax)
     732:	00 00                	add    %al,(%eax)
     734:	00 00                	add    %al,(%eax)
     736:	00 00                	add    %al,(%eax)
     738:	00 7c c6 60          	add    %bh,0x60(%esi,%eax,8)
     73c:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
     73f:	7c 00                	jl     741 <_binary_fonts_zap_ext_vga16_psf_start+0x741>
     741:	00 00                	add    %al,(%eax)
     743:	00 00                	add    %al,(%eax)
     745:	00 10                	add    %dl,(%eax)
     747:	30 30                	xor    %dh,(%eax)
     749:	fc                   	cld    
     74a:	30 30                	xor    %dh,(%eax)
     74c:	30 30                	xor    %dh,(%eax)
     74e:	36 1c 00             	ss sbb $0x0,%al
	...
     759:	cc                   	int3   
     75a:	cc                   	int3   
     75b:	cc                   	int3   
     75c:	cc                   	int3   
     75d:	cc                   	int3   
     75e:	cc                   	int3   
     75f:	76 00                	jbe    761 <_binary_fonts_zap_ext_vga16_psf_start+0x761>
	...
     769:	c3                   	ret    
     76a:	c3                   	ret    
     76b:	c3                   	ret    
     76c:	c3                   	ret    
     76d:	66 3c 18             	data16 cmp $0x18,%al
	...
     778:	00 c3                	add    %al,%bl
     77a:	c3                   	ret    
     77b:	c3                   	ret    
     77c:	db db                	fcmovnu %st(3),%st
     77e:	ff 66 00             	jmp    *0x0(%esi)
	...
     789:	c3                   	ret    
     78a:	66 3c 18             	data16 cmp $0x18,%al
     78d:	3c 66                	cmp    $0x66,%al
     78f:	c3                   	ret    
	...
     798:	00 c6                	add    %al,%dh
     79a:	c6 c6 c6             	mov    $0xc6,%dh
     79d:	c6 c6 7e             	mov    $0x7e,%dh
     7a0:	06                   	push   %es
     7a1:	0c f8                	or     $0xf8,%al
     7a3:	00 00                	add    %al,(%eax)
     7a5:	00 00                	add    %al,(%eax)
     7a7:	00 00                	add    %al,(%eax)
     7a9:	fe cc                	dec    %ah
     7ab:	18 30                	sbb    %dh,(%eax)
     7ad:	60                   	pusha  
     7ae:	c6                   	(bad)  
     7af:	fe 00                	incb   (%eax)
     7b1:	00 00                	add    %al,(%eax)
     7b3:	00 00                	add    %al,(%eax)
     7b5:	00 0e                	add    %cl,(%esi)
     7b7:	18 18                	sbb    %bl,(%eax)
     7b9:	18 70 18             	sbb    %dh,0x18(%eax)
     7bc:	18 18                	sbb    %bl,(%eax)
     7be:	18 0e                	sbb    %cl,(%esi)
     7c0:	00 00                	add    %al,(%eax)
     7c2:	00 00                	add    %al,(%eax)
     7c4:	00 18                	add    %bl,(%eax)
     7c6:	18 18                	sbb    %bl,(%eax)
     7c8:	18 18                	sbb    %bl,(%eax)
     7ca:	18 18                	sbb    %bl,(%eax)
     7cc:	18 18                	sbb    %bl,(%eax)
     7ce:	18 18                	sbb    %bl,(%eax)
     7d0:	18 00                	sbb    %al,(%eax)
     7d2:	00 00                	add    %al,(%eax)
     7d4:	00 00                	add    %al,(%eax)
     7d6:	70 18                	jo     7f0 <_binary_fonts_zap_ext_vga16_psf_start+0x7f0>
     7d8:	18 18                	sbb    %bl,(%eax)
     7da:	0e                   	push   %cs
     7db:	18 18                	sbb    %bl,(%eax)
     7dd:	18 18                	sbb    %bl,(%eax)
     7df:	70 00                	jo     7e1 <_binary_fonts_zap_ext_vga16_psf_start+0x7e1>
     7e1:	00 00                	add    %al,(%eax)
     7e3:	00 00                	add    %al,(%eax)
     7e5:	00 76 dc             	add    %dh,-0x24(%esi)
	...
     7f8:	00 00                	add    %al,(%eax)
     7fa:	18 3c 3c             	sbb    %bh,(%esp,%edi,1)
     7fd:	18 00                	sbb    %al,(%eax)
     7ff:	00 00                	add    %al,(%eax)
     801:	00 00                	add    %al,(%eax)
     803:	00 60 30             	add    %ah,0x30(%eax)
     806:	18 00                	sbb    %al,(%eax)
     808:	38 6c c6 c6          	cmp    %ch,-0x3a(%esi,%eax,8)
     80c:	fe c6                	inc    %dh
     80e:	c6 c6 00             	mov    $0x0,%dh
     811:	00 00                	add    %al,(%eax)
     813:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     816:	30 00                	xor    %al,(%eax)
     818:	38 6c c6 c6          	cmp    %ch,-0x3a(%esi,%eax,8)
     81c:	fe c6                	inc    %dh
     81e:	c6 c6 00             	mov    $0x0,%dh
     821:	00 00                	add    %al,(%eax)
     823:	00 10                	add    %dl,(%eax)
     825:	38 6c 00 38          	cmp    %ch,0x38(%eax,%eax,1)
     829:	6c                   	insb   (%dx),%es:(%edi)
     82a:	c6 c6 fe             	mov    $0xfe,%dh
     82d:	c6 c6 c6             	mov    $0xc6,%dh
     830:	00 00                	add    %al,(%eax)
     832:	00 00                	add    %al,(%eax)
     834:	00 76 dc             	add    %dh,-0x24(%esi)
     837:	00 38                	add    %bh,(%eax)
     839:	6c                   	insb   (%dx),%es:(%edi)
     83a:	c6 c6 fe             	mov    $0xfe,%dh
     83d:	c6 c6 c6             	mov    $0xc6,%dh
     840:	00 00                	add    %al,(%eax)
     842:	00 00                	add    %al,(%eax)
     844:	00 6c 6c 00          	add    %ch,0x0(%esp,%ebp,2)
     848:	38 6c c6 c6          	cmp    %ch,-0x3a(%esi,%eax,8)
     84c:	fe c6                	inc    %dh
     84e:	c6 c6 00             	mov    $0x0,%dh
     851:	00 00                	add    %al,(%eax)
     853:	00 38                	add    %bh,(%eax)
     855:	6c                   	insb   (%dx),%es:(%edi)
     856:	38 10                	cmp    %dl,(%eax)
     858:	38 6c c6 c6          	cmp    %ch,-0x3a(%esi,%eax,8)
     85c:	fe c6                	inc    %dh
     85e:	c6 c6 00             	mov    $0x0,%dh
     861:	00 00                	add    %al,(%eax)
     863:	00 00                	add    %al,(%eax)
     865:	00 3f                	add    %bh,(%edi)
     867:	6d                   	insl   (%dx),%es:(%edi)
     868:	cc                   	int3   
     869:	cc                   	int3   
     86a:	ff cc                	dec    %esp
     86c:	cc                   	int3   
     86d:	cc                   	int3   
     86e:	cd cf                	int    $0xcf
     870:	00 00                	add    %al,(%eax)
     872:	00 00                	add    %al,(%eax)
     874:	00 00                	add    %al,(%eax)
     876:	3c 66                	cmp    $0x66,%al
     878:	c2 c0 c0             	ret    $0xc0c0
     87b:	c0 c0 c2             	rol    $0xc2,%al
     87e:	66 3c 0c             	data16 cmp $0xc,%al
     881:	06                   	push   %es
     882:	7c 00                	jl     884 <_binary_fonts_zap_ext_vga16_psf_start+0x884>
     884:	60                   	pusha  
     885:	30 18                	xor    %bl,(%eax)
     887:	00 fe                	add    %bh,%dh
     889:	62 68 78             	bound  %ebp,0x78(%eax)
     88c:	68 60 62 fe 00       	push   $0xfe6260
     891:	00 00                	add    %al,(%eax)
     893:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     896:	30 00                	xor    %al,(%eax)
     898:	fe                   	(bad)  
     899:	62 68 78             	bound  %ebp,0x78(%eax)
     89c:	68 60 62 fe 00       	push   $0xfe6260
     8a1:	00 00                	add    %al,(%eax)
     8a3:	00 10                	add    %dl,(%eax)
     8a5:	38 6c 00 fe          	cmp    %ch,-0x2(%eax,%eax,1)
     8a9:	62 68 78             	bound  %ebp,0x78(%eax)
     8ac:	68 60 62 fe 00       	push   $0xfe6260
     8b1:	00 00                	add    %al,(%eax)
     8b3:	00 00                	add    %al,(%eax)
     8b5:	6c                   	insb   (%dx),%es:(%edi)
     8b6:	6c                   	insb   (%dx),%es:(%edi)
     8b7:	00 fe                	add    %bh,%dh
     8b9:	62 68 78             	bound  %ebp,0x78(%eax)
     8bc:	68 60 62 fe 00       	push   $0xfe6260
     8c1:	00 00                	add    %al,(%eax)
     8c3:	00 30                	add    %dh,(%eax)
     8c5:	18 0c 00             	sbb    %cl,(%eax,%eax,1)
     8c8:	3c 18                	cmp    $0x18,%al
     8ca:	18 18                	sbb    %bl,(%eax)
     8cc:	18 18                	sbb    %bl,(%eax)
     8ce:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
     8d1:	00 00                	add    %al,(%eax)
     8d3:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     8d6:	30 00                	xor    %al,(%eax)
     8d8:	3c 18                	cmp    $0x18,%al
     8da:	18 18                	sbb    %bl,(%eax)
     8dc:	18 18                	sbb    %bl,(%eax)
     8de:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
     8e1:	00 00                	add    %al,(%eax)
     8e3:	00 10                	add    %dl,(%eax)
     8e5:	38 6c 00 3c          	cmp    %ch,0x3c(%eax,%eax,1)
     8e9:	18 18                	sbb    %bl,(%eax)
     8eb:	18 18                	sbb    %bl,(%eax)
     8ed:	18 18                	sbb    %bl,(%eax)
     8ef:	3c 00                	cmp    $0x0,%al
     8f1:	00 00                	add    %al,(%eax)
     8f3:	00 00                	add    %al,(%eax)
     8f5:	66 66 00 3c 18       	data16 data16 add %bh,(%eax,%ebx,1)
     8fa:	18 18                	sbb    %bl,(%eax)
     8fc:	18 18                	sbb    %bl,(%eax)
     8fe:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
     901:	00 00                	add    %al,(%eax)
     903:	00 00                	add    %al,(%eax)
     905:	00 f8                	add    %bh,%al
     907:	6c                   	insb   (%dx),%es:(%edi)
     908:	66 66 f6 66 66       	data16 data16 mulb 0x66(%esi)
     90d:	66 6c                	data16 insb (%dx),%es:(%edi)
     90f:	f8                   	clc    
     910:	00 00                	add    %al,(%eax)
     912:	00 00                	add    %al,(%eax)
     914:	76 dc                	jbe    8f2 <_binary_fonts_zap_ext_vga16_psf_start+0x8f2>
     916:	00 c6                	add    %al,%dh
     918:	e6 f6                	out    %al,$0xf6
     91a:	fe                   	(bad)  
     91b:	de ce                	fmulp  %st,%st(6)
     91d:	c6 c6 c6             	mov    $0xc6,%dh
     920:	00 00                	add    %al,(%eax)
     922:	00 00                	add    %al,(%eax)
     924:	60                   	pusha  
     925:	30 18                	xor    %bl,(%eax)
     927:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     92b:	c6 c6 c6             	mov    $0xc6,%dh
     92e:	c6                   	(bad)  
     92f:	7c 00                	jl     931 <_binary_fonts_zap_ext_vga16_psf_start+0x931>
     931:	00 00                	add    %al,(%eax)
     933:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     936:	30 00                	xor    %al,(%eax)
     938:	7c c6                	jl     900 <_binary_fonts_zap_ext_vga16_psf_start+0x900>
     93a:	c6 c6 c6             	mov    $0xc6,%dh
     93d:	c6 c6 7c             	mov    $0x7c,%dh
     940:	00 00                	add    %al,(%eax)
     942:	00 00                	add    %al,(%eax)
     944:	10 38                	adc    %bh,(%eax)
     946:	6c                   	insb   (%dx),%es:(%edi)
     947:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     94b:	c6 c6 c6             	mov    $0xc6,%dh
     94e:	c6                   	(bad)  
     94f:	7c 00                	jl     951 <_binary_fonts_zap_ext_vga16_psf_start+0x951>
     951:	00 00                	add    %al,(%eax)
     953:	00 00                	add    %al,(%eax)
     955:	76 dc                	jbe    933 <_binary_fonts_zap_ext_vga16_psf_start+0x933>
     957:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     95b:	c6 c6 c6             	mov    $0xc6,%dh
     95e:	c6                   	(bad)  
     95f:	7c 00                	jl     961 <_binary_fonts_zap_ext_vga16_psf_start+0x961>
     961:	00 00                	add    %al,(%eax)
     963:	00 00                	add    %al,(%eax)
     965:	6c                   	insb   (%dx),%es:(%edi)
     966:	6c                   	insb   (%dx),%es:(%edi)
     967:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     96b:	c6 c6 c6             	mov    $0xc6,%dh
     96e:	c6                   	(bad)  
     96f:	7c 00                	jl     971 <_binary_fonts_zap_ext_vga16_psf_start+0x971>
	...
     979:	c6                   	(bad)  
     97a:	6c                   	insb   (%dx),%es:(%edi)
     97b:	38 6c c6 00          	cmp    %ch,0x0(%esi,%eax,8)
     97f:	00 00                	add    %al,(%eax)
     981:	00 00                	add    %al,(%eax)
     983:	00 00                	add    %al,(%eax)
     985:	00 3d 67 66 6e 7e    	add    %bh,0x7e6e6667
     98b:	76 66                	jbe    9f3 <_binary_fonts_zap_ext_vga16_psf_start+0x9f3>
     98d:	66 e6 bc             	data16 out %al,$0xbc
     990:	00 00                	add    %al,(%eax)
     992:	00 00                	add    %al,(%eax)
     994:	60                   	pusha  
     995:	30 18                	xor    %bl,(%eax)
     997:	00 c6                	add    %al,%dh
     999:	c6 c6 c6             	mov    $0xc6,%dh
     99c:	c6 c6 c6             	mov    $0xc6,%dh
     99f:	7c 00                	jl     9a1 <_binary_fonts_zap_ext_vga16_psf_start+0x9a1>
     9a1:	00 00                	add    %al,(%eax)
     9a3:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     9a6:	30 00                	xor    %al,(%eax)
     9a8:	c6 c6 c6             	mov    $0xc6,%dh
     9ab:	c6 c6 c6             	mov    $0xc6,%dh
     9ae:	c6                   	(bad)  
     9af:	7c 00                	jl     9b1 <_binary_fonts_zap_ext_vga16_psf_start+0x9b1>
     9b1:	00 00                	add    %al,(%eax)
     9b3:	00 10                	add    %dl,(%eax)
     9b5:	38 6c 00 c6          	cmp    %ch,-0x3a(%eax,%eax,1)
     9b9:	c6 c6 c6             	mov    $0xc6,%dh
     9bc:	c6 c6 c6             	mov    $0xc6,%dh
     9bf:	7c 00                	jl     9c1 <_binary_fonts_zap_ext_vga16_psf_start+0x9c1>
     9c1:	00 00                	add    %al,(%eax)
     9c3:	00 00                	add    %al,(%eax)
     9c5:	6c                   	insb   (%dx),%es:(%edi)
     9c6:	6c                   	insb   (%dx),%es:(%edi)
     9c7:	00 c6                	add    %al,%dh
     9c9:	c6 c6 c6             	mov    $0xc6,%dh
     9cc:	c6 c6 c6             	mov    $0xc6,%dh
     9cf:	7c 00                	jl     9d1 <_binary_fonts_zap_ext_vga16_psf_start+0x9d1>
     9d1:	00 00                	add    %al,(%eax)
     9d3:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     9d6:	30 00                	xor    %al,(%eax)
     9d8:	c3                   	ret    
     9d9:	c3                   	ret    
     9da:	66 3c 18             	data16 cmp $0x18,%al
     9dd:	18 18                	sbb    %bl,(%eax)
     9df:	3c 00                	cmp    $0x0,%al
     9e1:	00 00                	add    %al,(%eax)
     9e3:	00 00                	add    %al,(%eax)
     9e5:	00 f0                	add    %dh,%al
     9e7:	60                   	pusha  
     9e8:	7c 66                	jl     a50 <_binary_fonts_zap_ext_vga16_psf_start+0xa50>
     9ea:	66 66 66 7c 60       	data16 data16 data16 jl a4f <_binary_fonts_zap_ext_vga16_psf_start+0xa4f>
     9ef:	f0 00 00             	lock add %al,(%eax)
     9f2:	00 00                	add    %al,(%eax)
     9f4:	00 00                	add    %al,(%eax)
     9f6:	78 cc                	js     9c4 <_binary_fonts_zap_ext_vga16_psf_start+0x9c4>
     9f8:	cc                   	int3   
     9f9:	cc                   	int3   
     9fa:	d8 cc                	fmul   %st(4),%st
     9fc:	c6 c6 c6             	mov    $0xc6,%dh
     9ff:	cc                   	int3   
     a00:	00 00                	add    %al,(%eax)
     a02:	00 00                	add    %al,(%eax)
     a04:	aa                   	stos   %al,%es:(%edi)
     a05:	55                   	push   %ebp
     a06:	aa                   	stos   %al,%es:(%edi)
     a07:	55                   	push   %ebp
     a08:	aa                   	stos   %al,%es:(%edi)
     a09:	55                   	push   %ebp
     a0a:	aa                   	stos   %al,%es:(%edi)
     a0b:	55                   	push   %ebp
     a0c:	aa                   	stos   %al,%es:(%edi)
     a0d:	55                   	push   %ebp
     a0e:	aa                   	stos   %al,%es:(%edi)
     a0f:	55                   	push   %ebp
     a10:	aa                   	stos   %al,%es:(%edi)
     a11:	55                   	push   %ebp
     a12:	aa                   	stos   %al,%es:(%edi)
     a13:	55                   	push   %ebp
     a14:	00 00                	add    %al,(%eax)
     a16:	18 18                	sbb    %bl,(%eax)
     a18:	00 18                	add    %bl,(%eax)
     a1a:	18 18                	sbb    %bl,(%eax)
     a1c:	3c 3c                	cmp    $0x3c,%al
     a1e:	3c 18                	cmp    $0x18,%al
	...
     a28:	10 7c d6 d0          	adc    %bh,-0x30(%esi,%edx,8)
     a2c:	d0 d0                	rcl    %al
     a2e:	d6                   	(bad)  
     a2f:	7c 10                	jl     a41 <_binary_fonts_zap_ext_vga16_psf_start+0xa41>
     a31:	00 00                	add    %al,(%eax)
     a33:	00 00                	add    %al,(%eax)
     a35:	38 6c 64 60          	cmp    %ch,0x60(%esp,%eiz,2)
     a39:	60                   	pusha  
     a3a:	f0 60                	lock pusha 
     a3c:	60                   	pusha  
     a3d:	60                   	pusha  
     a3e:	66 fc                	data16 cld 
     a40:	00 00                	add    %al,(%eax)
     a42:	00 00                	add    %al,(%eax)
     a44:	00 00                	add    %al,(%eax)
     a46:	1e                   	push   %ds
     a47:	33 60 fc             	xor    -0x4(%eax),%esp
     a4a:	60                   	pusha  
     a4b:	f8                   	clc    
     a4c:	60                   	pusha  
     a4d:	60                   	pusha  
     a4e:	33 1e                	xor    (%esi),%ebx
     a50:	00 00                	add    %al,(%eax)
     a52:	00 00                	add    %al,(%eax)
     a54:	00 00                	add    %al,(%eax)
     a56:	c3                   	ret    
     a57:	c3                   	ret    
     a58:	66 3c 18             	data16 cmp $0x18,%al
     a5b:	7e 18                	jle    a75 <_binary_fonts_zap_ext_vga16_psf_start+0xa75>
     a5d:	7e 18                	jle    a77 <_binary_fonts_zap_ext_vga16_psf_start+0xa77>
     a5f:	18 00                	sbb    %al,(%eax)
     a61:	00 00                	add    %al,(%eax)
     a63:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
     a67:	7c c6                	jl     a2f <_binary_fonts_zap_ext_vga16_psf_start+0xa2f>
     a69:	c6                   	(bad)  
     a6a:	60                   	pusha  
     a6b:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
     a6e:	c6                   	(bad)  
     a6f:	7c 00                	jl     a71 <_binary_fonts_zap_ext_vga16_psf_start+0xa71>
     a71:	00 00                	add    %al,(%eax)
     a73:	00 00                	add    %al,(%eax)
     a75:	7c c6                	jl     a3d <_binary_fonts_zap_ext_vga16_psf_start+0xa3d>
     a77:	60                   	pusha  
     a78:	38 6c c6 c6          	cmp    %ch,-0x3a(%esi,%eax,8)
     a7c:	6c                   	insb   (%dx),%es:(%edi)
     a7d:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
     a80:	7c 00                	jl     a82 <_binary_fonts_zap_ext_vga16_psf_start+0xa82>
     a82:	00 00                	add    %al,(%eax)
     a84:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
     a88:	00 7c c6 60          	add    %bh,0x60(%esi,%eax,8)
     a8c:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
     a8f:	7c 00                	jl     a91 <_binary_fonts_zap_ext_vga16_psf_start+0xa91>
     a91:	00 00                	add    %al,(%eax)
     a93:	00 00                	add    %al,(%eax)
     a95:	00 3c 42             	add    %bh,(%edx,%eax,2)
     a98:	99                   	cltd   
     a99:	a5                   	movsl  %ds:(%esi),%es:(%edi)
     a9a:	a1 a1 a5 99 42       	mov    0x4299a5a1,%eax
     a9f:	3c 00                	cmp    $0x0,%al
     aa1:	00 00                	add    %al,(%eax)
     aa3:	00 00                	add    %al,(%eax)
     aa5:	3c 6c                	cmp    $0x6c,%al
     aa7:	6c                   	insb   (%dx),%es:(%edi)
     aa8:	3e 00 7e 00          	add    %bh,%ds:0x0(%esi)
	...
     ab8:	00 36                	add    %dh,(%esi)
     aba:	6c                   	insb   (%dx),%es:(%edi)
     abb:	d8 6c 36 00          	fsubrs 0x0(%esi,%esi,1)
	...
     ac7:	00 00                	add    %al,(%eax)
     ac9:	00 fe                	add    %bh,%dh
     acb:	06                   	push   %es
     acc:	06                   	push   %es
     acd:	06                   	push   %es
	...
     ad6:	00 00                	add    %al,(%eax)
     ad8:	66 3c 66             	data16 cmp $0x66,%al
     adb:	66 66 3c 66          	data16 data16 cmp $0x66,%al
     adf:	00 00                	add    %al,(%eax)
     ae1:	00 00                	add    %al,(%eax)
     ae3:	00 00                	add    %al,(%eax)
     ae5:	3c 42                	cmp    $0x42,%al
     ae7:	b9 a5 b9 a5 42       	mov    $0x42a5b9a5,%ecx
     aec:	3c 00                	cmp    $0x0,%al
	...
     af6:	7c 00                	jl     af8 <_binary_fonts_zap_ext_vga16_psf_start+0xaf8>
	...
     b04:	00 38                	add    %bh,(%eax)
     b06:	6c                   	insb   (%dx),%es:(%edi)
     b07:	6c                   	insb   (%dx),%es:(%edi)
     b08:	38 00                	cmp    %al,(%eax)
	...
     b16:	00 00                	add    %al,(%eax)
     b18:	00 18                	add    %bl,(%eax)
     b1a:	18 7e 18             	sbb    %bh,0x18(%esi)
     b1d:	18 00                	sbb    %al,(%eax)
     b1f:	7e 00                	jle    b21 <_binary_fonts_zap_ext_vga16_psf_start+0xb21>
     b21:	00 00                	add    %al,(%eax)
     b23:	00 00                	add    %al,(%eax)
     b25:	38 6c 18 30          	cmp    %ch,0x30(%eax,%ebx,1)
     b29:	7c 00                	jl     b2b <_binary_fonts_zap_ext_vga16_psf_start+0xb2b>
	...
     b33:	00 00                	add    %al,(%eax)
     b35:	78 0c                	js     b43 <_binary_fonts_zap_ext_vga16_psf_start+0xb43>
     b37:	38 0c 78             	cmp    %cl,(%eax,%edi,2)
	...
     b42:	00 00                	add    %al,(%eax)
     b44:	6c                   	insb   (%dx),%es:(%edi)
     b45:	38 10                	cmp    %dl,(%eax)
     b47:	ff c3                	inc    %ebx
     b49:	86 0c 18             	xchg   %cl,(%eax,%ebx,1)
     b4c:	30 61 c3             	xor    %ah,-0x3d(%ecx)
     b4f:	ff 00                	incl   (%eax)
	...
     b59:	66 66 66 66 66 66 7b 	data16 data16 data16 data16 data16 data16 jnp bc1 <_binary_fonts_zap_ext_vga16_psf_start+0xbc1>
     b60:	60 
     b61:	60                   	pusha  
     b62:	c0 00 00             	rolb   $0x0,(%eax)
     b65:	00 7f db             	add    %bh,-0x25(%edi)
     b68:	db db                	fcmovnu %st(3),%st
     b6a:	7b 1b                	jnp    b87 <_binary_fonts_zap_ext_vga16_psf_start+0xb87>
     b6c:	1b 1b                	sbb    (%ebx),%ebx
     b6e:	1b 1b                	sbb    (%ebx),%ebx
	...
     b78:	00 00                	add    %al,(%eax)
     b7a:	00 18                	add    %bl,(%eax)
     b7c:	18 00                	sbb    %al,(%eax)
     b7e:	00 00                	add    %al,(%eax)
     b80:	00 00                	add    %al,(%eax)
     b82:	00 00                	add    %al,(%eax)
     b84:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
     b88:	00 fe                	add    %bh,%dh
     b8a:	cc                   	int3   
     b8b:	18 30                	sbb    %dh,(%eax)
     b8d:	60                   	pusha  
     b8e:	c6                   	(bad)  
     b8f:	fe 00                	incb   (%eax)
     b91:	00 00                	add    %al,(%eax)
     b93:	00 00                	add    %al,(%eax)
     b95:	18 38                	sbb    %bh,(%eax)
     b97:	18 18                	sbb    %bl,(%eax)
     b99:	3c 00                	cmp    $0x0,%al
	...
     ba3:	00 00                	add    %al,(%eax)
     ba5:	38 6c 6c 6c          	cmp    %ch,0x6c(%esp,%ebp,2)
     ba9:	38 00                	cmp    %al,(%eax)
     bab:	7c 00                	jl     bad <_binary_fonts_zap_ext_vga16_psf_start+0xbad>
	...
     bb9:	d8 6c 36 6c          	fsubrs 0x6c(%esi,%esi,1)
     bbd:	d8 00                	fadds  (%eax)
     bbf:	00 00                	add    %al,(%eax)
     bc1:	00 00                	add    %al,(%eax)
     bc3:	00 00                	add    %al,(%eax)
     bc5:	00 7f cd             	add    %bh,-0x33(%edi)
     bc8:	cc                   	int3   
     bc9:	cc                   	int3   
     bca:	cf                   	iret   
     bcb:	cc                   	int3   
     bcc:	cc                   	int3   
     bcd:	cc                   	int3   
     bce:	cd 7f                	int    $0x7f
	...
     bd8:	00 7e db             	add    %bh,-0x25(%esi)
     bdb:	db df                	fcmovnu %st(7),%st
     bdd:	d8 db                	fcomp  %st(3)
     bdf:	7e 00                	jle    be1 <_binary_fonts_zap_ext_vga16_psf_start+0xbe1>
     be1:	00 00                	add    %al,(%eax)
     be3:	00 00                	add    %al,(%eax)
     be5:	66 66 00 c3          	data16 data16 add %al,%bl
     be9:	c3                   	ret    
     bea:	66 3c 18             	data16 cmp $0x18,%al
     bed:	18 18                	sbb    %bl,(%eax)
     bef:	3c 00                	cmp    $0x0,%al
     bf1:	00 00                	add    %al,(%eax)
     bf3:	00 00                	add    %al,(%eax)
     bf5:	00 30                	add    %dh,(%eax)
     bf7:	30 00                	xor    %al,(%eax)
     bf9:	30 30                	xor    %dh,(%eax)
     bfb:	30 60 c6             	xor    %ah,-0x3a(%eax)
     bfe:	c6                   	(bad)  
     bff:	7c 00                	jl     c01 <_binary_fonts_zap_ext_vga16_psf_start+0xc01>
	...
     c09:	00 00                	add    %al,(%eax)
     c0b:	ff 00                	incl   (%eax)
     c0d:	00 00                	add    %al,(%eax)
     c0f:	00 00                	add    %al,(%eax)
     c11:	00 00                	add    %al,(%eax)
     c13:	00 18                	add    %bl,(%eax)
     c15:	18 18                	sbb    %bl,(%eax)
     c17:	18 18                	sbb    %bl,(%eax)
     c19:	18 18                	sbb    %bl,(%eax)
     c1b:	18 18                	sbb    %bl,(%eax)
     c1d:	18 18                	sbb    %bl,(%eax)
     c1f:	18 18                	sbb    %bl,(%eax)
     c21:	18 18                	sbb    %bl,(%eax)
     c23:	18 00                	sbb    %al,(%eax)
     c25:	00 00                	add    %al,(%eax)
     c27:	00 00                	add    %al,(%eax)
     c29:	00 00                	add    %al,(%eax)
     c2b:	1f                   	pop    %ds
     c2c:	18 18                	sbb    %bl,(%eax)
     c2e:	18 18                	sbb    %bl,(%eax)
     c30:	18 18                	sbb    %bl,(%eax)
     c32:	18 18                	sbb    %bl,(%eax)
     c34:	00 00                	add    %al,(%eax)
     c36:	00 00                	add    %al,(%eax)
     c38:	00 00                	add    %al,(%eax)
     c3a:	00 f8                	add    %bh,%al
     c3c:	18 18                	sbb    %bl,(%eax)
     c3e:	18 18                	sbb    %bl,(%eax)
     c40:	18 18                	sbb    %bl,(%eax)
     c42:	18 18                	sbb    %bl,(%eax)
     c44:	18 18                	sbb    %bl,(%eax)
     c46:	18 18                	sbb    %bl,(%eax)
     c48:	18 18                	sbb    %bl,(%eax)
     c4a:	18 1f                	sbb    %bl,(%edi)
	...
     c54:	18 18                	sbb    %bl,(%eax)
     c56:	18 18                	sbb    %bl,(%eax)
     c58:	18 18                	sbb    %bl,(%eax)
     c5a:	18 f8                	sbb    %bh,%al
	...
     c64:	18 18                	sbb    %bl,(%eax)
     c66:	18 18                	sbb    %bl,(%eax)
     c68:	18 18                	sbb    %bl,(%eax)
     c6a:	18 1f                	sbb    %bl,(%edi)
     c6c:	18 18                	sbb    %bl,(%eax)
     c6e:	18 18                	sbb    %bl,(%eax)
     c70:	18 18                	sbb    %bl,(%eax)
     c72:	18 18                	sbb    %bl,(%eax)
     c74:	18 18                	sbb    %bl,(%eax)
     c76:	18 18                	sbb    %bl,(%eax)
     c78:	18 18                	sbb    %bl,(%eax)
     c7a:	18 f8                	sbb    %bh,%al
     c7c:	18 18                	sbb    %bl,(%eax)
     c7e:	18 18                	sbb    %bl,(%eax)
     c80:	18 18                	sbb    %bl,(%eax)
     c82:	18 18                	sbb    %bl,(%eax)
     c84:	00 00                	add    %al,(%eax)
     c86:	00 00                	add    %al,(%eax)
     c88:	00 00                	add    %al,(%eax)
     c8a:	00 ff                	add    %bh,%bh
     c8c:	18 18                	sbb    %bl,(%eax)
     c8e:	18 18                	sbb    %bl,(%eax)
     c90:	18 18                	sbb    %bl,(%eax)
     c92:	18 18                	sbb    %bl,(%eax)
     c94:	18 18                	sbb    %bl,(%eax)
     c96:	18 18                	sbb    %bl,(%eax)
     c98:	18 18                	sbb    %bl,(%eax)
     c9a:	18 ff                	sbb    %bh,%bh
	...
     ca4:	18 18                	sbb    %bl,(%eax)
     ca6:	18 18                	sbb    %bl,(%eax)
     ca8:	18 18                	sbb    %bl,(%eax)
     caa:	18 ff                	sbb    %bh,%bh
     cac:	18 18                	sbb    %bl,(%eax)
     cae:	18 18                	sbb    %bl,(%eax)
     cb0:	18 18                	sbb    %bl,(%eax)
     cb2:	18 18                	sbb    %bl,(%eax)
     cb4:	88 22                	mov    %ah,(%edx)
     cb6:	88 22                	mov    %ah,(%edx)
     cb8:	88 22                	mov    %ah,(%edx)
     cba:	88 22                	mov    %ah,(%edx)
     cbc:	88 22                	mov    %ah,(%edx)
     cbe:	88 22                	mov    %ah,(%edx)
     cc0:	88 22                	mov    %ah,(%edx)
     cc2:	88 22                	mov    %ah,(%edx)
     cc4:	ff 00                	incl   (%eax)
	...
     cd6:	00 00                	add    %al,(%eax)
     cd8:	ff 00                	incl   (%eax)
	...
     cee:	ff 00                	incl   (%eax)
	...
     d00:	00 00                	add    %al,(%eax)
     d02:	ff 00                	incl   (%eax)
     d04:	00 00                	add    %al,(%eax)
     d06:	00 00                	add    %al,(%eax)
     d08:	00 00                	add    %al,(%eax)
     d0a:	ff 00                	incl   (%eax)
     d0c:	ff 00                	incl   (%eax)
     d0e:	00 00                	add    %al,(%eax)
     d10:	00 00                	add    %al,(%eax)
     d12:	00 00                	add    %al,(%eax)
     d14:	36 36 36 36 36 36 36 	ss ss ss ss ss ss ss ss ss ss ss ss ss ss
     d1b:	36 36 36 36 36 36 36 
     d22:	36 36 00 00          	ss add %al,%ss:(%eax)
     d26:	00 00                	add    %al,(%eax)
     d28:	00 00                	add    %al,(%eax)
     d2a:	3f                   	aas    
     d2b:	30 37                	xor    %dh,(%edi)
     d2d:	36 36 36 36 36 36 36 	ss ss ss ss ss ss add %al,%ss:(%eax)
     d34:	00 00 
     d36:	00 00                	add    %al,(%eax)
     d38:	00 00                	add    %al,(%eax)
     d3a:	fe 06                	incb   (%esi)
     d3c:	f6 36                	divb   (%esi)
     d3e:	36 36 36 36 36 36 36 	ss ss ss ss ss ss ss ss ss ss ss ss aaa 
     d45:	36 36 36 36 36 37 
     d4b:	30 3f                	xor    %bh,(%edi)
     d4d:	00 00                	add    %al,(%eax)
     d4f:	00 00                	add    %al,(%eax)
     d51:	00 00                	add    %al,(%eax)
     d53:	00 36                	add    %dh,(%esi)
     d55:	36 36 36 36 36 f6 06 	ss ss ss ss testb $0xfe,%ss:(%esi)
     d5c:	fe 
     d5d:	00 00                	add    %al,(%eax)
     d5f:	00 00                	add    %al,(%eax)
     d61:	00 00                	add    %al,(%eax)
     d63:	00 36                	add    %dh,(%esi)
     d65:	36 36 36 36 36 37    	ss ss ss ss ss aaa 
     d6b:	30 37                	xor    %dh,(%edi)
     d6d:	36 36 36 36 36 36 36 	ss ss ss ss ss ss ss ss ss ss ss ss (bad)
     d74:	36 36 36 36 36 36 f6 
     d7b:	06 
     d7c:	f6 36                	divb   (%esi)
     d7e:	36 36 36 36 36 36 00 	ss ss ss ss ss add %al,%ss:(%eax)
     d85:	00 
     d86:	00 00                	add    %al,(%eax)
     d88:	00 00                	add    %al,(%eax)
     d8a:	ff 00                	incl   (%eax)
     d8c:	f7 36                	divl   (%esi)
     d8e:	36 36 36 36 36 36 36 	ss ss ss ss ss ss ss ss ss ss ss (bad)
     d95:	36 36 36 36 36 f7 00 
     d9c:	ff 
     d9d:	00 00                	add    %al,(%eax)
     d9f:	00 00                	add    %al,(%eax)
     da1:	00 00                	add    %al,(%eax)
     da3:	00 36                	add    %dh,(%esi)
     da5:	36 36 36 36 36 f7 00 	ss ss ss ss testl $0x363636f7,%ss:(%eax)
     dac:	f7 36 36 36 
     db0:	36 36 36 36 ff       	ss ss ss ss (bad) 
     db5:	ff                   	(bad)  
     db6:	ff                   	(bad)  
     db7:	ff                   	(bad)  
     db8:	ff                   	(bad)  
     db9:	ff                   	(bad)  
     dba:	ff                   	(bad)  
     dbb:	ff                   	(bad)  
     dbc:	ff                   	(bad)  
     dbd:	ff                   	(bad)  
     dbe:	ff                   	(bad)  
     dbf:	ff                   	(bad)  
     dc0:	ff                   	(bad)  
     dc1:	ff                   	(bad)  
     dc2:	ff                   	(bad)  
     dc3:	ff 00                	incl   (%eax)
     dc5:	00 18                	add    %bl,(%eax)
     dc7:	3c 7e                	cmp    $0x7e,%al
     dc9:	18 18                	sbb    %bl,(%eax)
     dcb:	18 18                	sbb    %bl,(%eax)
     dcd:	18 18                	sbb    %bl,(%eax)
     dcf:	18 00                	sbb    %al,(%eax)
     dd1:	00 00                	add    %al,(%eax)
     dd3:	00 00                	add    %al,(%eax)
     dd5:	00 18                	add    %bl,(%eax)
     dd7:	18 18                	sbb    %bl,(%eax)
     dd9:	18 18                	sbb    %bl,(%eax)
     ddb:	18 18                	sbb    %bl,(%eax)
     ddd:	7e 3c                	jle    e1b <_binary_fonts_zap_ext_vga16_psf_start+0xe1b>
     ddf:	18 00                	sbb    %al,(%eax)
	...
     de9:	18 30                	sbb    %dh,(%eax)
     deb:	7f 30                	jg     e1d <_binary_fonts_zap_ext_vga16_psf_start+0xe1d>
     ded:	18 00                	sbb    %al,(%eax)
	...
     df7:	00 00                	add    %al,(%eax)
     df9:	18 0c fe             	sbb    %cl,(%esi,%edi,8)
     dfc:	0c 18                	or     $0x18,%al
     dfe:	00 00                	add    %al,(%eax)
     e00:	00 00                	add    %al,(%eax)
     e02:	00 00                	add    %al,(%eax)
     e04:	00 60 30             	add    %ah,0x30(%eax)
     e07:	18 00                	sbb    %al,(%eax)
     e09:	78 0c                	js     e17 <_binary_fonts_zap_ext_vga16_psf_start+0xe17>
     e0b:	7c cc                	jl     dd9 <_binary_fonts_zap_ext_vga16_psf_start+0xdd9>
     e0d:	cc                   	int3   
     e0e:	cc                   	int3   
     e0f:	76 00                	jbe    e11 <_binary_fonts_zap_ext_vga16_psf_start+0xe11>
     e11:	00 00                	add    %al,(%eax)
     e13:	00 00                	add    %al,(%eax)
     e15:	0c 18                	or     $0x18,%al
     e17:	30 00                	xor    %al,(%eax)
     e19:	78 0c                	js     e27 <_binary_fonts_zap_ext_vga16_psf_start+0xe27>
     e1b:	7c cc                	jl     de9 <_binary_fonts_zap_ext_vga16_psf_start+0xde9>
     e1d:	cc                   	int3   
     e1e:	cc                   	int3   
     e1f:	76 00                	jbe    e21 <_binary_fonts_zap_ext_vga16_psf_start+0xe21>
     e21:	00 00                	add    %al,(%eax)
     e23:	00 00                	add    %al,(%eax)
     e25:	10 38                	adc    %bh,(%eax)
     e27:	6c                   	insb   (%dx),%es:(%edi)
     e28:	00 78 0c             	add    %bh,0xc(%eax)
     e2b:	7c cc                	jl     df9 <_binary_fonts_zap_ext_vga16_psf_start+0xdf9>
     e2d:	cc                   	int3   
     e2e:	cc                   	int3   
     e2f:	76 00                	jbe    e31 <_binary_fonts_zap_ext_vga16_psf_start+0xe31>
     e31:	00 00                	add    %al,(%eax)
     e33:	00 00                	add    %al,(%eax)
     e35:	00 76 dc             	add    %dh,-0x24(%esi)
     e38:	00 78 0c             	add    %bh,0xc(%eax)
     e3b:	7c cc                	jl     e09 <_binary_fonts_zap_ext_vga16_psf_start+0xe09>
     e3d:	cc                   	int3   
     e3e:	cc                   	int3   
     e3f:	76 00                	jbe    e41 <_binary_fonts_zap_ext_vga16_psf_start+0xe41>
     e41:	00 00                	add    %al,(%eax)
     e43:	00 00                	add    %al,(%eax)
     e45:	00 6c 6c 00          	add    %ch,0x0(%esp,%ebp,2)
     e49:	78 0c                	js     e57 <_binary_fonts_zap_ext_vga16_psf_start+0xe57>
     e4b:	7c cc                	jl     e19 <_binary_fonts_zap_ext_vga16_psf_start+0xe19>
     e4d:	cc                   	int3   
     e4e:	cc                   	int3   
     e4f:	76 00                	jbe    e51 <_binary_fonts_zap_ext_vga16_psf_start+0xe51>
     e51:	00 00                	add    %al,(%eax)
     e53:	00 00                	add    %al,(%eax)
     e55:	38 6c 38 00          	cmp    %ch,0x0(%eax,%edi,1)
     e59:	78 0c                	js     e67 <_binary_fonts_zap_ext_vga16_psf_start+0xe67>
     e5b:	7c cc                	jl     e29 <_binary_fonts_zap_ext_vga16_psf_start+0xe29>
     e5d:	cc                   	int3   
     e5e:	cc                   	int3   
     e5f:	76 00                	jbe    e61 <_binary_fonts_zap_ext_vga16_psf_start+0xe61>
	...
     e69:	76 1b                	jbe    e86 <_binary_fonts_zap_ext_vga16_psf_start+0xe86>
     e6b:	7b df                	jnp    e4c <_binary_fonts_zap_ext_vga16_psf_start+0xe4c>
     e6d:	d8 db                	fcomp  %st(3)
     e6f:	6e                   	outsb  %ds:(%esi),(%dx)
	...
     e78:	00 7c c6 c0          	add    %bh,-0x40(%esi,%eax,8)
     e7c:	c0 c0 c6             	rol    $0xc6,%al
     e7f:	7c 0c                	jl     e8d <_binary_fonts_zap_ext_vga16_psf_start+0xe8d>
     e81:	06                   	push   %es
     e82:	7c 00                	jl     e84 <_binary_fonts_zap_ext_vga16_psf_start+0xe84>
     e84:	00 60 30             	add    %ah,0x30(%eax)
     e87:	18 00                	sbb    %al,(%eax)
     e89:	7c c6                	jl     e51 <_binary_fonts_zap_ext_vga16_psf_start+0xe51>
     e8b:	fe c0                	inc    %al
     e8d:	c0 c6 7c             	rol    $0x7c,%dh
     e90:	00 00                	add    %al,(%eax)
     e92:	00 00                	add    %al,(%eax)
     e94:	00 0c 18             	add    %cl,(%eax,%ebx,1)
     e97:	30 00                	xor    %al,(%eax)
     e99:	7c c6                	jl     e61 <_binary_fonts_zap_ext_vga16_psf_start+0xe61>
     e9b:	fe c0                	inc    %al
     e9d:	c0 c6 7c             	rol    $0x7c,%dh
     ea0:	00 00                	add    %al,(%eax)
     ea2:	00 00                	add    %al,(%eax)
     ea4:	00 10                	add    %dl,(%eax)
     ea6:	38 6c 00 7c          	cmp    %ch,0x7c(%eax,%eax,1)
     eaa:	c6                   	(bad)  
     eab:	fe c0                	inc    %al
     ead:	c0 c6 7c             	rol    $0x7c,%dh
     eb0:	00 00                	add    %al,(%eax)
     eb2:	00 00                	add    %al,(%eax)
     eb4:	00 00                	add    %al,(%eax)
     eb6:	6c                   	insb   (%dx),%es:(%edi)
     eb7:	6c                   	insb   (%dx),%es:(%edi)
     eb8:	00 7c c6 fe          	add    %bh,-0x2(%esi,%eax,8)
     ebc:	c0 c0 c6             	rol    $0xc6,%al
     ebf:	7c 00                	jl     ec1 <_binary_fonts_zap_ext_vga16_psf_start+0xec1>
     ec1:	00 00                	add    %al,(%eax)
     ec3:	00 00                	add    %al,(%eax)
     ec5:	60                   	pusha  
     ec6:	30 18                	xor    %bl,(%eax)
     ec8:	00 38                	add    %bh,(%eax)
     eca:	18 18                	sbb    %bl,(%eax)
     ecc:	18 18                	sbb    %bl,(%eax)
     ece:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
     ed1:	00 00                	add    %al,(%eax)
     ed3:	00 00                	add    %al,(%eax)
     ed5:	0c 18                	or     $0x18,%al
     ed7:	30 00                	xor    %al,(%eax)
     ed9:	38 18                	cmp    %bl,(%eax)
     edb:	18 18                	sbb    %bl,(%eax)
     edd:	18 18                	sbb    %bl,(%eax)
     edf:	3c 00                	cmp    $0x0,%al
     ee1:	00 00                	add    %al,(%eax)
     ee3:	00 00                	add    %al,(%eax)
     ee5:	10 38                	adc    %bh,(%eax)
     ee7:	6c                   	insb   (%dx),%es:(%edi)
     ee8:	00 38                	add    %bh,(%eax)
     eea:	18 18                	sbb    %bl,(%eax)
     eec:	18 18                	sbb    %bl,(%eax)
     eee:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
     ef1:	00 00                	add    %al,(%eax)
     ef3:	00 00                	add    %al,(%eax)
     ef5:	00 6c 6c 00          	add    %ch,0x0(%esp,%ebp,2)
     ef9:	38 18                	cmp    %bl,(%eax)
     efb:	18 18                	sbb    %bl,(%eax)
     efd:	18 18                	sbb    %bl,(%eax)
     eff:	3c 00                	cmp    $0x0,%al
     f01:	00 00                	add    %al,(%eax)
     f03:	00 00                	add    %al,(%eax)
     f05:	00 34 18             	add    %dh,(%eax,%ebx,1)
     f08:	2c 06                	sub    $0x6,%al
     f0a:	3e 66 66 66 66 3c 00 	ds data16 data16 data16 data16 cmp $0x0,%al
     f11:	00 00                	add    %al,(%eax)
     f13:	00 00                	add    %al,(%eax)
     f15:	00 76 dc             	add    %dh,-0x24(%esi)
     f18:	00 dc                	add    %bl,%ah
     f1a:	66 66 66 66 66 66 00 	data16 data16 data16 data16 data16 data16 add %al,(%eax)
     f21:	00 
     f22:	00 00                	add    %al,(%eax)
     f24:	00 60 30             	add    %ah,0x30(%eax)
     f27:	18 00                	sbb    %al,(%eax)
     f29:	7c c6                	jl     ef1 <_binary_fonts_zap_ext_vga16_psf_start+0xef1>
     f2b:	c6 c6 c6             	mov    $0xc6,%dh
     f2e:	c6                   	(bad)  
     f2f:	7c 00                	jl     f31 <_binary_fonts_zap_ext_vga16_psf_start+0xf31>
     f31:	00 00                	add    %al,(%eax)
     f33:	00 00                	add    %al,(%eax)
     f35:	0c 18                	or     $0x18,%al
     f37:	30 00                	xor    %al,(%eax)
     f39:	7c c6                	jl     f01 <_binary_fonts_zap_ext_vga16_psf_start+0xf01>
     f3b:	c6 c6 c6             	mov    $0xc6,%dh
     f3e:	c6                   	(bad)  
     f3f:	7c 00                	jl     f41 <_binary_fonts_zap_ext_vga16_psf_start+0xf41>
     f41:	00 00                	add    %al,(%eax)
     f43:	00 00                	add    %al,(%eax)
     f45:	10 38                	adc    %bh,(%eax)
     f47:	6c                   	insb   (%dx),%es:(%edi)
     f48:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     f4c:	c6 c6 c6             	mov    $0xc6,%dh
     f4f:	7c 00                	jl     f51 <_binary_fonts_zap_ext_vga16_psf_start+0xf51>
     f51:	00 00                	add    %al,(%eax)
     f53:	00 00                	add    %al,(%eax)
     f55:	00 76 dc             	add    %dh,-0x24(%esi)
     f58:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
     f5c:	c6 c6 c6             	mov    $0xc6,%dh
     f5f:	7c 00                	jl     f61 <_binary_fonts_zap_ext_vga16_psf_start+0xf61>
     f61:	00 00                	add    %al,(%eax)
     f63:	00 00                	add    %al,(%eax)
     f65:	00 6c 6c 00          	add    %ch,0x0(%esp,%ebp,2)
     f69:	7c c6                	jl     f31 <_binary_fonts_zap_ext_vga16_psf_start+0xf31>
     f6b:	c6 c6 c6             	mov    $0xc6,%dh
     f6e:	c6                   	(bad)  
     f6f:	7c 00                	jl     f71 <_binary_fonts_zap_ext_vga16_psf_start+0xf71>
     f71:	00 00                	add    %al,(%eax)
     f73:	00 00                	add    %al,(%eax)
     f75:	00 00                	add    %al,(%eax)
     f77:	00 18                	add    %bl,(%eax)
     f79:	18 00                	sbb    %al,(%eax)
     f7b:	7e 00                	jle    f7d <_binary_fonts_zap_ext_vga16_psf_start+0xf7d>
     f7d:	18 18                	sbb    %bl,(%eax)
	...
     f87:	00 00                	add    %al,(%eax)
     f89:	3d 67 6e 7e 76       	cmp    $0x767e6e67,%eax
     f8e:	e6 bc                	out    %al,$0xbc
     f90:	00 00                	add    %al,(%eax)
     f92:	00 00                	add    %al,(%eax)
     f94:	00 60 30             	add    %ah,0x30(%eax)
     f97:	18 00                	sbb    %al,(%eax)
     f99:	cc                   	int3   
     f9a:	cc                   	int3   
     f9b:	cc                   	int3   
     f9c:	cc                   	int3   
     f9d:	cc                   	int3   
     f9e:	cc                   	int3   
     f9f:	76 00                	jbe    fa1 <_binary_fonts_zap_ext_vga16_psf_start+0xfa1>
     fa1:	00 00                	add    %al,(%eax)
     fa3:	00 00                	add    %al,(%eax)
     fa5:	0c 18                	or     $0x18,%al
     fa7:	30 00                	xor    %al,(%eax)
     fa9:	cc                   	int3   
     faa:	cc                   	int3   
     fab:	cc                   	int3   
     fac:	cc                   	int3   
     fad:	cc                   	int3   
     fae:	cc                   	int3   
     faf:	76 00                	jbe    fb1 <_binary_fonts_zap_ext_vga16_psf_start+0xfb1>
     fb1:	00 00                	add    %al,(%eax)
     fb3:	00 00                	add    %al,(%eax)
     fb5:	10 38                	adc    %bh,(%eax)
     fb7:	6c                   	insb   (%dx),%es:(%edi)
     fb8:	00 cc                	add    %cl,%ah
     fba:	cc                   	int3   
     fbb:	cc                   	int3   
     fbc:	cc                   	int3   
     fbd:	cc                   	int3   
     fbe:	cc                   	int3   
     fbf:	76 00                	jbe    fc1 <_binary_fonts_zap_ext_vga16_psf_start+0xfc1>
     fc1:	00 00                	add    %al,(%eax)
     fc3:	00 00                	add    %al,(%eax)
     fc5:	00 6c 6c 00          	add    %ch,0x0(%esp,%ebp,2)
     fc9:	cc                   	int3   
     fca:	cc                   	int3   
     fcb:	cc                   	int3   
     fcc:	cc                   	int3   
     fcd:	cc                   	int3   
     fce:	cc                   	int3   
     fcf:	76 00                	jbe    fd1 <_binary_fonts_zap_ext_vga16_psf_start+0xfd1>
     fd1:	00 00                	add    %al,(%eax)
     fd3:	00 00                	add    %al,(%eax)
     fd5:	0c 18                	or     $0x18,%al
     fd7:	30 00                	xor    %al,(%eax)
     fd9:	c6 c6 c6             	mov    $0xc6,%dh
     fdc:	c6 c6 c6             	mov    $0xc6,%dh
     fdf:	7e 06                	jle    fe7 <_binary_fonts_zap_ext_vga16_psf_start+0xfe7>
     fe1:	0c f8                	or     $0xf8,%al
     fe3:	00 00                	add    %al,(%eax)
     fe5:	00 e0                	add    %ah,%al
     fe7:	60                   	pusha  
     fe8:	60                   	pusha  
     fe9:	7c 66                	jl     1051 <_binary_fonts_zap_ext_vga16_psf_start+0x1051>
     feb:	66 66 66 66 7c 60    	data16 data16 data16 data16 jl 1051 <_binary_fonts_zap_ext_vga16_psf_start+0x1051>
     ff1:	60                   	pusha  
     ff2:	f0 00 00             	lock add %al,(%eax)
     ff5:	00 6c 6c 00          	add    %ch,0x0(%esp,%ebp,2)
     ff9:	c6 c6 c6             	mov    $0xc6,%dh
     ffc:	c6 c6 c6             	mov    $0xc6,%dh
     fff:	7e 06                	jle    1007 <_binary_fonts_zap_ext_vga16_psf_start+0x1007>
    1001:	0c f8                	or     $0xf8,%al
    1003:	00 00                	add    %al,(%eax)
    1005:	06                   	push   %es
    1006:	0c 18                	or     $0x18,%al
    1008:	30 00                	xor    %al,(%eax)
	...
    1012:	00 00                	add    %al,(%eax)
    1014:	00 18                	add    %bl,(%eax)
    1016:	18 18                	sbb    %bl,(%eax)
    1018:	0c 00                	or     $0x0,%al
	...
    1022:	00 00                	add    %al,(%eax)
    1024:	00 18                	add    %bl,(%eax)
    1026:	18 18                	sbb    %bl,(%eax)
    1028:	30 00                	xor    %al,(%eax)
	...
    1032:	00 00                	add    %al,(%eax)
    1034:	00 cc                	add    %cl,%ah
    1036:	66 33 11             	xor    (%ecx),%dx
	...
    1045:	33 66 cc             	xor    -0x34(%esi),%esp
    1048:	88 00                	mov    %al,(%eax)
	...
    1056:	cc                   	int3   
    1057:	cf                   	iret   
    1058:	ed                   	in     (%dx),%eax
    1059:	ff                   	(bad)  
    105a:	fc                   	cld    
    105b:	df cc                	(bad)  
    105d:	cc                   	int3   
    105e:	cc                   	int3   
    105f:	cc                   	int3   
    1060:	00 00                	add    %al,(%eax)
    1062:	00 00                	add    %al,(%eax)
    1064:	00 00                	add    %al,(%eax)
    1066:	7c c6                	jl     102e <_binary_fonts_zap_ext_vga16_psf_start+0x102e>
    1068:	0c fe                	or     $0xfe,%al
    106a:	10 fe                	adc    %bh,%dh
    106c:	60                   	pusha  
    106d:	c0 c6 7c             	rol    $0x7c,%dh
    1070:	00 00                	add    %al,(%eax)
    1072:	00 00                	add    %al,(%eax)
    1074:	00 00                	add    %al,(%eax)
    1076:	fc                   	cld    
    1077:	66 66 66 fc          	data16 data16 data16 cld 
    107b:	60                   	pusha  
    107c:	fc                   	cld    
    107d:	60                   	pusha  
    107e:	60                   	pusha  
    107f:	f0 00 00             	lock add %al,(%eax)
    1082:	00 00                	add    %al,(%eax)
    1084:	00 00                	add    %al,(%eax)
    1086:	fe                   	(bad)  
    1087:	66 62 60 7c          	bound  %sp,0x7c(%eax)
    108b:	66 66 66 66 fc       	data16 data16 data16 data16 cld 
    1090:	00 00                	add    %al,(%eax)
    1092:	00 00                	add    %al,(%eax)
    1094:	00 00                	add    %al,(%eax)
    1096:	fe                   	(bad)  
    1097:	66 62 60 60          	bound  %sp,0x60(%eax)
    109b:	60                   	pusha  
    109c:	60                   	pusha  
    109d:	60                   	pusha  
    109e:	60                   	pusha  
    109f:	f0 00 00             	lock add %al,(%eax)
    10a2:	00 00                	add    %al,(%eax)
    10a4:	00 00                	add    %al,(%eax)
    10a6:	3c 6c                	cmp    $0x6c,%al
    10a8:	6c                   	insb   (%dx),%es:(%edi)
    10a9:	6c                   	insb   (%dx),%es:(%edi)
    10aa:	6c                   	insb   (%dx),%es:(%edi)
    10ab:	6c                   	insb   (%dx),%es:(%edi)
    10ac:	6c                   	insb   (%dx),%es:(%edi)
    10ad:	6c                   	insb   (%dx),%es:(%edi)
    10ae:	6c                   	insb   (%dx),%es:(%edi)
    10af:	fe c6                	inc    %dh
    10b1:	82 00 00             	addb   $0x0,(%eax)
    10b4:	00 00                	add    %al,(%eax)
    10b6:	d6                   	(bad)  
    10b7:	d6                   	(bad)  
    10b8:	d6                   	(bad)  
    10b9:	7c 38                	jl     10f3 <_binary_fonts_zap_ext_vga16_psf_start+0x10f3>
    10bb:	7c d6                	jl     1093 <_binary_fonts_zap_ext_vga16_psf_start+0x1093>
    10bd:	d6                   	(bad)  
    10be:	d6                   	(bad)  
    10bf:	d6                   	(bad)  
    10c0:	00 00                	add    %al,(%eax)
    10c2:	00 00                	add    %al,(%eax)
    10c4:	00 00                	add    %al,(%eax)
    10c6:	7c c6                	jl     108e <_binary_fonts_zap_ext_vga16_psf_start+0x108e>
    10c8:	86 06                	xchg   %al,(%esi)
    10ca:	3c 06                	cmp    $0x6,%al
    10cc:	06                   	push   %es
    10cd:	86 c6                	xchg   %al,%dh
    10cf:	7c 00                	jl     10d1 <_binary_fonts_zap_ext_vga16_psf_start+0x10d1>
    10d1:	00 00                	add    %al,(%eax)
    10d3:	00 00                	add    %al,(%eax)
    10d5:	00 c6                	add    %al,%dh
    10d7:	c6 c6 ce             	mov    $0xce,%dh
    10da:	de fe                	fdivrp %st,%st(6)
    10dc:	f6 e6                	mul    %dh
    10de:	c6 c6 00             	mov    $0x0,%dh
    10e1:	00 00                	add    %al,(%eax)
    10e3:	00 6c 38 c6          	add    %ch,-0x3a(%eax,%edi,1)
    10e7:	c6 c6 ce             	mov    $0xce,%dh
    10ea:	de fe                	fdivrp %st,%st(6)
    10ec:	f6 e6                	mul    %dh
    10ee:	c6 c6 00             	mov    $0x0,%dh
    10f1:	00 00                	add    %al,(%eax)
    10f3:	00 00                	add    %al,(%eax)
    10f5:	00 3e                	add    %bh,(%esi)
    10f7:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 movb $0x0,(%eax)
    10fe:	66 c6 00 00 
    1102:	00 00                	add    %al,(%eax)
    1104:	00 00                	add    %al,(%eax)
    1106:	fe c6                	inc    %dh
    1108:	c6 c6 c6             	mov    $0xc6,%dh
    110b:	c6 c6 c6             	mov    $0xc6,%dh
    110e:	c6 c6 00             	mov    $0x0,%dh
    1111:	00 00                	add    %al,(%eax)
    1113:	00 00                	add    %al,(%eax)
    1115:	00 c6                	add    %al,%dh
    1117:	c6 c6 c6             	mov    $0xc6,%dh
    111a:	c6                   	(bad)  
    111b:	7e 06                	jle    1123 <_binary_fonts_zap_ext_vga16_psf_start+0x1123>
    111d:	06                   	push   %es
    111e:	c6                   	(bad)  
    111f:	7c 00                	jl     1121 <_binary_fonts_zap_ext_vga16_psf_start+0x1121>
    1121:	00 00                	add    %al,(%eax)
    1123:	00 00                	add    %al,(%eax)
    1125:	00 10                	add    %dl,(%eax)
    1127:	7c d6                	jl     10ff <_binary_fonts_zap_ext_vga16_psf_start+0x10ff>
    1129:	d6                   	(bad)  
    112a:	d6                   	(bad)  
    112b:	d6                   	(bad)  
    112c:	d6                   	(bad)  
    112d:	7c 10                	jl     113f <_binary_fonts_zap_ext_vga16_psf_start+0x113f>
    112f:	10 00                	adc    %al,(%eax)
    1131:	00 00                	add    %al,(%eax)
    1133:	00 00                	add    %al,(%eax)
    1135:	00 cc                	add    %cl,%ah
    1137:	cc                   	int3   
    1138:	cc                   	int3   
    1139:	cc                   	int3   
    113a:	cc                   	int3   
    113b:	cc                   	int3   
    113c:	cc                   	int3   
    113d:	cc                   	int3   
    113e:	cc                   	int3   
    113f:	fe 06                	incb   (%esi)
    1141:	02 00                	add    (%eax),%al
    1143:	00 00                	add    %al,(%eax)
    1145:	00 c6                	add    %al,%dh
    1147:	c6 c6 c6             	mov    $0xc6,%dh
    114a:	c6                   	(bad)  
    114b:	7e 06                	jle    1153 <_binary_fonts_zap_ext_vga16_psf_start+0x1153>
    114d:	06                   	push   %es
    114e:	06                   	push   %es
    114f:	06                   	push   %es
    1150:	00 00                	add    %al,(%eax)
    1152:	00 00                	add    %al,(%eax)
    1154:	00 00                	add    %al,(%eax)
    1156:	c6                   	(bad)  
    1157:	d6                   	(bad)  
    1158:	d6                   	(bad)  
    1159:	d6                   	(bad)  
    115a:	d6                   	(bad)  
    115b:	d6                   	(bad)  
    115c:	d6                   	(bad)  
    115d:	d6                   	(bad)  
    115e:	d6                   	(bad)  
    115f:	fe 00                	incb   (%eax)
    1161:	00 00                	add    %al,(%eax)
    1163:	00 00                	add    %al,(%eax)
    1165:	00 c6                	add    %al,%dh
    1167:	d6                   	(bad)  
    1168:	d6                   	(bad)  
    1169:	d6                   	(bad)  
    116a:	d6                   	(bad)  
    116b:	d6                   	(bad)  
    116c:	d6                   	(bad)  
    116d:	d6                   	(bad)  
    116e:	d6                   	(bad)  
    116f:	ff 03                	incl   (%ebx)
    1171:	01 00                	add    %eax,(%eax)
    1173:	00 00                	add    %al,(%eax)
    1175:	00 f8                	add    %bh,%al
    1177:	b0 b0                	mov    $0xb0,%al
    1179:	30 3c 36             	xor    %bh,(%esi,%esi,1)
    117c:	36 36 36 7c 00       	ss ss ss jl 1181 <_binary_fonts_zap_ext_vga16_psf_start+0x1181>
    1181:	00 00                	add    %al,(%eax)
    1183:	00 00                	add    %al,(%eax)
    1185:	00 c3                	add    %al,%bl
    1187:	c3                   	ret    
    1188:	c3                   	ret    
    1189:	c3                   	ret    
    118a:	f3 db db             	repz fcmovnu %st(3),%st
    118d:	db db                	fcmovnu %st(3),%st
    118f:	f3 00 00             	repz add %al,(%eax)
    1192:	00 00                	add    %al,(%eax)
    1194:	00 00                	add    %al,(%eax)
    1196:	f0 60                	lock pusha 
    1198:	60                   	pusha  
    1199:	60                   	pusha  
    119a:	7c 66                	jl     1202 <_binary_fonts_zap_ext_vga16_psf_start+0x1202>
    119c:	66 66 66 fc          	data16 data16 data16 cld 
    11a0:	00 00                	add    %al,(%eax)
    11a2:	00 00                	add    %al,(%eax)
    11a4:	00 00                	add    %al,(%eax)
    11a6:	78 cc                	js     1174 <_binary_fonts_zap_ext_vga16_psf_start+0x1174>
    11a8:	86 06                	xchg   %al,(%esi)
    11aa:	3e 06                	ds push %es
    11ac:	06                   	push   %es
    11ad:	86 cc                	xchg   %cl,%ah
    11af:	78 00                	js     11b1 <_binary_fonts_zap_ext_vga16_psf_start+0x11b1>
    11b1:	00 00                	add    %al,(%eax)
    11b3:	00 00                	add    %al,(%eax)
    11b5:	00 ce                	add    %cl,%dh
    11b7:	db db                	fcmovnu %st(3),%st
    11b9:	db fb                	(bad)  
    11bb:	db db                	fcmovnu %st(3),%st
    11bd:	db db                	fcmovnu %st(3),%st
    11bf:	ce                   	into   
    11c0:	00 00                	add    %al,(%eax)
    11c2:	00 00                	add    %al,(%eax)
    11c4:	00 00                	add    %al,(%eax)
    11c6:	7e cc                	jle    1194 <_binary_fonts_zap_ext_vga16_psf_start+0x1194>
    11c8:	cc                   	int3   
    11c9:	cc                   	int3   
    11ca:	7c 6c                	jl     1238 <_binary_fonts_zap_ext_vga16_psf_start+0x1238>
    11cc:	cc                   	int3   
    11cd:	cc                   	int3   
    11ce:	cc                   	int3   
    11cf:	ce                   	into   
    11d0:	00 00                	add    %al,(%eax)
    11d2:	00 00                	add    %al,(%eax)
    11d4:	00 00                	add    %al,(%eax)
    11d6:	3c 66                	cmp    $0x66,%al
    11d8:	c2 c0 f8             	ret    $0xf8c0
    11db:	c0 c0 c2             	rol    $0xc2,%al
    11de:	66 3c 00             	data16 cmp $0x0,%al
    11e1:	00 00                	add    %al,(%eax)
    11e3:	00 6c 38 00          	add    %ch,0x0(%eax,%edi,1)
    11e7:	c6 c6 c6             	mov    $0xc6,%dh
    11ea:	c6                   	(bad)  
    11eb:	7e 06                	jle    11f3 <_binary_fonts_zap_ext_vga16_psf_start+0x11f3>
    11ed:	06                   	push   %es
    11ee:	c6                   	(bad)  
    11ef:	7c 00                	jl     11f1 <_binary_fonts_zap_ext_vga16_psf_start+0x11f1>
    11f1:	00 00                	add    %al,(%eax)
    11f3:	00 00                	add    %al,(%eax)
    11f5:	00 fe                	add    %bh,%dh
    11f7:	b2 30                	mov    $0x30,%dl
    11f9:	3e 33 33             	xor    %ds:(%ebx),%esi
    11fc:	33 33                	xor    (%ebx),%esi
    11fe:	33 33                	xor    (%ebx),%esi
    1200:	03 06                	add    (%esi),%eax
    1202:	00 00                	add    %al,(%eax)
    1204:	0c 18                	or     $0x18,%al
    1206:	30 00                	xor    %al,(%eax)
    1208:	fe                   	(bad)  
    1209:	66 62 60 60          	bound  %sp,0x60(%eax)
    120d:	60                   	pusha  
    120e:	60                   	pusha  
    120f:	f0 00 00             	lock add %al,(%eax)
    1212:	00 00                	add    %al,(%eax)
    1214:	00 00                	add    %al,(%eax)
    1216:	78 d8                	js     11f0 <_binary_fonts_zap_ext_vga16_psf_start+0x11f0>
    1218:	d8 d8                	fcomp  %st(0)
    121a:	de db                	(bad)  
    121c:	db db                	fcmovnu %st(3),%st
    121e:	db de                	fcmovnu %st(6),%st
    1220:	00 00                	add    %al,(%eax)
    1222:	00 00                	add    %al,(%eax)
    1224:	00 00                	add    %al,(%eax)
    1226:	d8 d8                	fcomp  %st(0)
    1228:	d8 d8                	fcomp  %st(0)
    122a:	fe                   	(bad)  
    122b:	db db                	fcmovnu %st(3),%st
    122d:	db db                	fcmovnu %st(3),%st
    122f:	de 00                	fiadds (%eax)
    1231:	00 00                	add    %al,(%eax)
    1233:	00 00                	add    %al,(%eax)
    1235:	00 fe                	add    %bh,%dh
    1237:	b2 30                	mov    $0x30,%dl
    1239:	3e 33 33             	xor    %ds:(%ebx),%esi
    123c:	33 33                	xor    (%ebx),%esi
    123e:	33 33                	xor    (%ebx),%esi
    1240:	00 00                	add    %al,(%eax)
    1242:	00 00                	add    %al,(%eax)
    1244:	0c 18                	or     $0x18,%al
    1246:	30 00                	xor    %al,(%eax)
    1248:	e6 66                	out    %al,$0x66
    124a:	6c                   	insb   (%dx),%es:(%edi)
    124b:	78 6c                	js     12b9 <_binary_fonts_zap_ext_vga16_psf_start+0x12b9>
    124d:	66 66 e6 00          	data16 data16 out %al,$0x0
    1251:	00 00                	add    %al,(%eax)
    1253:	00 00                	add    %al,(%eax)
    1255:	00 c6                	add    %al,%dh
    1257:	c6 c6 c6             	mov    $0xc6,%dh
    125a:	c6 c6 c6             	mov    $0xc6,%dh
    125d:	c6 c6 fe             	mov    $0xfe,%dh
    1260:	38 10                	cmp    %dl,(%eax)
    1262:	10 00                	adc    %al,(%eax)
    1264:	02 06                	add    (%esi),%al
    1266:	fe                   	(bad)  
    1267:	60                   	pusha  
    1268:	60                   	pusha  
    1269:	60                   	pusha  
    126a:	60                   	pusha  
    126b:	60                   	pusha  
    126c:	60                   	pusha  
    126d:	60                   	pusha  
    126e:	60                   	pusha  
    126f:	f0 00 00             	lock add %al,(%eax)
    1272:	00 00                	add    %al,(%eax)
    1274:	60                   	pusha  
    1275:	30 18                	xor    %bl,(%eax)
    1277:	00 c6                	add    %al,%dh
    1279:	c6                   	(bad)  
    127a:	ce                   	into   
    127b:	de fe                	fdivrp %st,%st(6)
    127d:	f6 e6                	mul    %dh
    127f:	c6 00 00             	movb   $0x0,(%eax)
    1282:	00 00                	add    %al,(%eax)
    1284:	00 00                	add    %al,(%eax)
    1286:	06                   	push   %es
    1287:	7c c0                	jl     1249 <_binary_fonts_zap_ext_vga16_psf_start+0x1249>
    1289:	c0 fc c6             	sar    $0xc6,%ah
    128c:	c6 c6 c6             	mov    $0xc6,%dh
    128f:	7c 00                	jl     1291 <_binary_fonts_zap_ext_vga16_psf_start+0x1291>
	...
    1299:	fc                   	cld    
    129a:	66 66 7c 66          	data16 data16 jl 1304 <_binary_fonts_zap_ext_vga16_psf_start+0x1304>
    129e:	66 fc                	data16 cld 
	...
    12a8:	00 fe                	add    %bh,%dh
    12aa:	66 62 60 60          	bound  %sp,0x60(%eax)
    12ae:	60                   	pusha  
    12af:	f0 00 00             	lock add %al,(%eax)
    12b2:	00 00                	add    %al,(%eax)
    12b4:	00 00                	add    %al,(%eax)
    12b6:	00 00                	add    %al,(%eax)
    12b8:	00 3c 6c             	add    %bh,(%esp,%ebp,2)
    12bb:	6c                   	insb   (%dx),%es:(%edi)
    12bc:	6c                   	insb   (%dx),%es:(%edi)
    12bd:	6c                   	insb   (%dx),%es:(%edi)
    12be:	6c                   	insb   (%dx),%es:(%edi)
    12bf:	fe c6                	inc    %dh
    12c1:	82 00 00             	addb   $0x0,(%eax)
    12c4:	00 00                	add    %al,(%eax)
    12c6:	00 00                	add    %al,(%eax)
    12c8:	00 d6                	add    %dl,%dh
    12ca:	d6                   	(bad)  
    12cb:	d6                   	(bad)  
    12cc:	7c d6                	jl     12a4 <_binary_fonts_zap_ext_vga16_psf_start+0x12a4>
    12ce:	d6                   	(bad)  
    12cf:	d6                   	(bad)  
	...
    12d8:	00 7c c6 06          	add    %bh,0x6(%esi,%eax,8)
    12dc:	3c 06                	cmp    $0x6,%al
    12de:	c6                   	(bad)  
    12df:	7c 00                	jl     12e1 <_binary_fonts_zap_ext_vga16_psf_start+0x12e1>
	...
    12e9:	c6                   	(bad)  
    12ea:	ce                   	into   
    12eb:	de fe                	fdivrp %st,%st(6)
    12ed:	f6 e6                	mul    %dh
    12ef:	c6 00 00             	movb   $0x0,(%eax)
    12f2:	00 00                	add    %al,(%eax)
    12f4:	00 00                	add    %al,(%eax)
    12f6:	6c                   	insb   (%dx),%es:(%edi)
    12f7:	38 00                	cmp    %al,(%eax)
    12f9:	c6                   	(bad)  
    12fa:	ce                   	into   
    12fb:	de fe                	fdivrp %st,%st(6)
    12fd:	f6 e6                	mul    %dh
    12ff:	c6 00 00             	movb   $0x0,(%eax)
    1302:	00 00                	add    %al,(%eax)
    1304:	00 00                	add    %al,(%eax)
    1306:	00 00                	add    %al,(%eax)
    1308:	00 e6                	add    %ah,%dh
    130a:	6c                   	insb   (%dx),%es:(%edi)
    130b:	78 78                	js     1385 <_binary_fonts_zap_ext_vga16_psf_start+0x1385>
    130d:	6c                   	insb   (%dx),%es:(%edi)
    130e:	66 e6 00             	data16 out %al,$0x0
	...
    1319:	3e 66 66 66 66 66 c6 	data16 data16 data16 data16 data16 movb $0x0,%ds:(%eax)
    1320:	00 00 
    1322:	00 00                	add    %al,(%eax)
    1324:	00 00                	add    %al,(%eax)
    1326:	00 00                	add    %al,(%eax)
    1328:	00 c6                	add    %al,%dh
    132a:	ee                   	out    %al,(%dx)
    132b:	fe                   	(bad)  
    132c:	fe                   	(bad)  
    132d:	d6                   	(bad)  
    132e:	c6 c6 00             	mov    $0x0,%dh
	...
    1339:	c6 c6 c6             	mov    $0xc6,%dh
    133c:	fe c6                	inc    %dh
    133e:	c6 c6 00             	mov    $0x0,%dh
	...
    1349:	fe c6                	inc    %dh
    134b:	c6 c6 c6             	mov    $0xc6,%dh
    134e:	c6 c6 00             	mov    $0x0,%dh
	...
    1359:	7e 5a                	jle    13b5 <_binary_fonts_zap_ext_vga16_psf_start+0x13b5>
    135b:	18 18                	sbb    %bl,(%eax)
    135d:	18 18                	sbb    %bl,(%eax)
    135f:	3c 00                	cmp    $0x0,%al
    1361:	00 00                	add    %al,(%eax)
    1363:	00 00                	add    %al,(%eax)
    1365:	00 00                	add    %al,(%eax)
    1367:	00 10                	add    %dl,(%eax)
    1369:	7c d6                	jl     1341 <_binary_fonts_zap_ext_vga16_psf_start+0x1341>
    136b:	d6                   	(bad)  
    136c:	d6                   	(bad)  
    136d:	d6                   	(bad)  
    136e:	d6                   	(bad)  
    136f:	7c 10                	jl     1381 <_binary_fonts_zap_ext_vga16_psf_start+0x1381>
    1371:	10 10                	adc    %dl,(%eax)
    1373:	00 00                	add    %al,(%eax)
    1375:	00 00                	add    %al,(%eax)
    1377:	00 00                	add    %al,(%eax)
    1379:	cc                   	int3   
    137a:	cc                   	int3   
    137b:	cc                   	int3   
    137c:	cc                   	int3   
    137d:	cc                   	int3   
    137e:	cc                   	int3   
    137f:	fe 06                	incb   (%esi)
    1381:	02 00                	add    (%eax),%al
    1383:	00 00                	add    %al,(%eax)
    1385:	00 00                	add    %al,(%eax)
    1387:	00 00                	add    %al,(%eax)
    1389:	c6 c6 c6             	mov    $0xc6,%dh
    138c:	7e 06                	jle    1394 <_binary_fonts_zap_ext_vga16_psf_start+0x1394>
    138e:	06                   	push   %es
    138f:	06                   	push   %es
	...
    1398:	00 c6                	add    %al,%dh
    139a:	d6                   	(bad)  
    139b:	d6                   	(bad)  
    139c:	d6                   	(bad)  
    139d:	d6                   	(bad)  
    139e:	d6                   	(bad)  
    139f:	fe 00                	incb   (%eax)
	...
    13a9:	c6                   	(bad)  
    13aa:	d6                   	(bad)  
    13ab:	d6                   	(bad)  
    13ac:	d6                   	(bad)  
    13ad:	d6                   	(bad)  
    13ae:	d6                   	(bad)  
    13af:	ff 03                	incl   (%ebx)
    13b1:	01 00                	add    %eax,(%eax)
    13b3:	00 00                	add    %al,(%eax)
    13b5:	00 00                	add    %al,(%eax)
    13b7:	00 00                	add    %al,(%eax)
    13b9:	f8                   	clc    
    13ba:	b0 30                	mov    $0x30,%al
    13bc:	3c 36                	cmp    $0x36,%al
    13be:	36 7c 00             	ss jl  13c1 <_binary_fonts_zap_ext_vga16_psf_start+0x13c1>
	...
    13c9:	c3                   	ret    
    13ca:	c3                   	ret    
    13cb:	c3                   	ret    
    13cc:	f3 db db             	repz fcmovnu %st(3),%st
    13cf:	f3 00 00             	repz add %al,(%eax)
    13d2:	00 00                	add    %al,(%eax)
    13d4:	00 00                	add    %al,(%eax)
    13d6:	00 00                	add    %al,(%eax)
    13d8:	00 f0                	add    %dh,%al
    13da:	60                   	pusha  
    13db:	60                   	pusha  
    13dc:	7c 66                	jl     1444 <_binary_fonts_zap_ext_vga16_psf_start+0x1444>
    13de:	66 fc                	data16 cld 
	...
    13e8:	00 7c c6 06          	add    %bh,0x6(%esi,%eax,8)
    13ec:	3e 06                	ds push %es
    13ee:	c6                   	(bad)  
    13ef:	7c 00                	jl     13f1 <_binary_fonts_zap_ext_vga16_psf_start+0x13f1>
	...
    13f9:	ce                   	into   
    13fa:	db db                	fcmovnu %st(3),%st
    13fc:	fb                   	sti    
    13fd:	db db                	fcmovnu %st(3),%st
    13ff:	ce                   	into   
	...
    1408:	00 7e cc             	add    %bh,-0x34(%esi)
    140b:	cc                   	int3   
    140c:	7c 6c                	jl     147a <_binary_fonts_zap_ext_vga16_psf_start+0x147a>
    140e:	cc                   	int3   
    140f:	ce                   	into   
	...
    1418:	00 7c c6 c0          	add    %bh,-0x40(%esi,%eax,8)
    141c:	f8                   	clc    
    141d:	c0 c6 7c             	rol    $0x7c,%dh
    1420:	00 00                	add    %al,(%eax)
    1422:	00 00                	add    %al,(%eax)
    1424:	00 00                	add    %al,(%eax)
    1426:	6c                   	insb   (%dx),%es:(%edi)
    1427:	38 00                	cmp    %al,(%eax)
    1429:	c6 c6 c6             	mov    $0xc6,%dh
    142c:	c6 c6 c6             	mov    $0xc6,%dh
    142f:	7e 06                	jle    1437 <_binary_fonts_zap_ext_vga16_psf_start+0x1437>
    1431:	0c f8                	or     $0xf8,%al
    1433:	00 00                	add    %al,(%eax)
    1435:	00 60 f8             	add    %ah,-0x8(%eax)
    1438:	60                   	pusha  
    1439:	6c                   	insb   (%dx),%es:(%edi)
    143a:	76 66                	jbe    14a2 <_binary_fonts_zap_ext_vga16_psf_start+0x14a2>
    143c:	66 66 66 e6 06       	data16 data16 data16 out %al,$0x6
    1441:	06                   	push   %es
    1442:	1c 00                	sbb    $0x0,%al
    1444:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    1447:	30 00                	xor    %al,(%eax)
    1449:	fe                   	(bad)  
    144a:	66 62 60 60          	bound  %sp,0x60(%eax)
    144e:	60                   	pusha  
    144f:	f0 00 00             	lock add %al,(%eax)
    1452:	00 00                	add    %al,(%eax)
    1454:	00 00                	add    %al,(%eax)
    1456:	00 00                	add    %al,(%eax)
    1458:	00 78 d8             	add    %bh,-0x28(%eax)
    145b:	d8 de                	fcomp  %st(6)
    145d:	db db                	fcmovnu %st(3),%st
    145f:	de 00                	fiadds (%eax)
	...
    1469:	d8 d8                	fcomp  %st(0)
    146b:	d8 fe                	fdivr  %st(6),%st
    146d:	db db                	fcmovnu %st(3),%st
    146f:	de 00                	fiadds (%eax)
    1471:	00 00                	add    %al,(%eax)
    1473:	00 00                	add    %al,(%eax)
    1475:	00 60 f8             	add    %ah,-0x8(%eax)
    1478:	60                   	pusha  
    1479:	6c                   	insb   (%dx),%es:(%edi)
    147a:	76 66                	jbe    14e2 <_binary_fonts_zap_ext_vga16_psf_start+0x14e2>
    147c:	66 66 66 e6 00       	data16 data16 data16 out %al,$0x0
    1481:	00 00                	add    %al,(%eax)
    1483:	00 00                	add    %al,(%eax)
    1485:	0c 18                	or     $0x18,%al
    1487:	30 00                	xor    %al,(%eax)
    1489:	e6 6c                	out    %al,$0x6c
    148b:	78 78                	js     1505 <_binary_fonts_zap_ext_vga16_psf_start+0x1505>
    148d:	6c                   	insb   (%dx),%es:(%edi)
    148e:	66 e6 00             	data16 out %al,$0x0
	...
    1499:	c6 c6 c6             	mov    $0xc6,%dh
    149c:	c6 c6 c6             	mov    $0xc6,%dh
    149f:	fe                   	(bad)  
    14a0:	38 10                	cmp    %dl,(%eax)
    14a2:	10 00                	adc    %al,(%eax)
    14a4:	00 00                	add    %al,(%eax)
    14a6:	00 02                	add    %al,(%edx)
    14a8:	06                   	push   %es
    14a9:	fe                   	(bad)  
    14aa:	60                   	pusha  
    14ab:	60                   	pusha  
    14ac:	60                   	pusha  
    14ad:	60                   	pusha  
    14ae:	60                   	pusha  
    14af:	f0 00 00             	lock add %al,(%eax)
    14b2:	00 00                	add    %al,(%eax)
    14b4:	00 60 30             	add    %ah,0x30(%eax)
    14b7:	18 00                	sbb    %al,(%eax)
    14b9:	c6                   	(bad)  
    14ba:	ce                   	into   
    14bb:	de fe                	fdivrp %st,%st(6)
    14bd:	f6 e6                	mul    %dh
    14bf:	c6 00 00             	movb   $0x0,(%eax)
	...
    14ce:	00 00                	add    %al,(%eax)
    14d0:	30 30                	xor    %dh,(%eax)
    14d2:	3c 00                	cmp    $0x0,%al
    14d4:	60                   	pusha  
    14d5:	c0 00 00             	rolb   $0x0,(%eax)
	...
    14e4:	0c 18                	or     $0x18,%al
    14e6:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
	...
    14f2:	00 00                	add    %al,(%eax)
    14f4:	60                   	pusha  
    14f5:	c0 10 38             	rclb   $0x38,(%eax)
    14f8:	6c                   	insb   (%dx),%es:(%edi)
    14f9:	c6 c6 fe             	mov    $0xfe,%dh
    14fc:	c6 c6 c6             	mov    $0xc6,%dh
    14ff:	c6 00 00             	movb   $0x0,(%eax)
    1502:	00 00                	add    %al,(%eax)
    1504:	60                   	pusha  
    1505:	c0 3f 33             	sarb   $0x33,(%edi)
    1508:	31 34 3c             	xor    %esi,(%esp,%edi,1)
    150b:	34 30                	xor    $0x30,%al
    150d:	31 33                	xor    %esi,(%ebx)
    150f:	3f                   	aas    
    1510:	00 00                	add    %al,(%eax)
    1512:	00 00                	add    %al,(%eax)
    1514:	60                   	pusha  
    1515:	c0 33 33             	shlb   $0x33,(%ebx)
    1518:	33 33                	xor    (%ebx),%esi
    151a:	3f                   	aas    
    151b:	33 33                	xor    (%ebx),%esi
    151d:	33 33                	xor    (%ebx),%esi
    151f:	33 00                	xor    (%eax),%eax
    1521:	00 00                	add    %al,(%eax)
    1523:	00 60 c0             	add    %ah,-0x40(%eax)
    1526:	3c 18                	cmp    $0x18,%al
    1528:	18 18                	sbb    %bl,(%eax)
    152a:	18 18                	sbb    %bl,(%eax)
    152c:	18 18                	sbb    %bl,(%eax)
    152e:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
    1531:	00 00                	add    %al,(%eax)
    1533:	00 60 c0             	add    %ah,-0x40(%eax)
    1536:	3e 63 63 63          	arpl   %sp,%ds:0x63(%ebx)
    153a:	63 63 63             	arpl   %sp,0x63(%ebx)
    153d:	63 63 3e             	arpl   %sp,0x3e(%ebx)
    1540:	00 00                	add    %al,(%eax)
    1542:	00 00                	add    %al,(%eax)
    1544:	60                   	pusha  
    1545:	c0 00 c3             	rolb   $0xc3,(%eax)
    1548:	c3                   	ret    
    1549:	66 3c 18             	data16 cmp $0x18,%al
    154c:	18 18                	sbb    %bl,(%eax)
    154e:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
    1551:	00 00                	add    %al,(%eax)
    1553:	00 60 c0             	add    %ah,-0x40(%eax)
    1556:	3e 63 63 63          	arpl   %sp,%ds:0x63(%ebx)
    155a:	63 63 36             	arpl   %sp,0x36(%ebx)
    155d:	36 36 77 00          	ss ss ja 1561 <_binary_fonts_zap_ext_vga16_psf_start+0x1561>
    1561:	00 00                	add    %al,(%eax)
    1563:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    1566:	00 6c 00 38          	add    %ch,0x38(%eax,%eax,1)
    156a:	18 18                	sbb    %bl,(%eax)
    156c:	18 18                	sbb    %bl,(%eax)
    156e:	18 0e                	sbb    %cl,(%esi)
    1570:	00 00                	add    %al,(%eax)
    1572:	00 00                	add    %al,(%eax)
    1574:	00 00                	add    %al,(%eax)
    1576:	10 10                	adc    %dl,(%eax)
    1578:	38 38                	cmp    %bh,(%eax)
    157a:	6c                   	insb   (%dx),%es:(%edi)
    157b:	6c                   	insb   (%dx),%es:(%edi)
    157c:	c6 c6 c6             	mov    $0xc6,%dh
    157f:	fe 00                	incb   (%eax)
    1581:	00 00                	add    %al,(%eax)
    1583:	00 00                	add    %al,(%eax)
    1585:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
    1589:	c6                   	(bad)  
    158a:	fe c6                	inc    %dh
    158c:	c6 c6 c6             	mov    $0xc6,%dh
    158f:	7c 00                	jl     1591 <_binary_fonts_zap_ext_vga16_psf_start+0x1591>
    1591:	00 00                	add    %al,(%eax)
    1593:	00 00                	add    %al,(%eax)
    1595:	00 10                	add    %dl,(%eax)
    1597:	10 38                	adc    %bh,(%eax)
    1599:	38 6c 6c c6          	cmp    %ch,-0x3a(%esp,%ebp,2)
    159d:	c6 c6 c6             	mov    $0xc6,%dh
    15a0:	00 00                	add    %al,(%eax)
    15a2:	00 00                	add    %al,(%eax)
    15a4:	00 00                	add    %al,(%eax)
    15a6:	fe c6                	inc    %dh
    15a8:	82 00 7c             	addb   $0x7c,(%eax)
    15ab:	7c 00                	jl     15ad <_binary_fonts_zap_ext_vga16_psf_start+0x15ad>
    15ad:	82 c6 fe             	add    $0xfe,%dh
    15b0:	00 00                	add    %al,(%eax)
    15b2:	00 00                	add    %al,(%eax)
    15b4:	00 00                	add    %al,(%eax)
    15b6:	fe c6                	inc    %dh
    15b8:	62 30                	bound  %esi,(%eax)
    15ba:	18 18                	sbb    %bl,(%eax)
    15bc:	30 62 c6             	xor    %ah,-0x3a(%edx)
    15bf:	fe 00                	incb   (%eax)
    15c1:	00 00                	add    %al,(%eax)
    15c3:	00 00                	add    %al,(%eax)
    15c5:	00 10                	add    %dl,(%eax)
    15c7:	92                   	xchg   %eax,%edx
    15c8:	d6                   	(bad)  
    15c9:	d6                   	(bad)  
    15ca:	d6                   	(bad)  
    15cb:	d6                   	(bad)  
    15cc:	d6                   	(bad)  
    15cd:	7c 10                	jl     15df <_binary_fonts_zap_ext_vga16_psf_start+0x15df>
    15cf:	10 00                	adc    %al,(%eax)
    15d1:	00 00                	add    %al,(%eax)
    15d3:	00 00                	add    %al,(%eax)
    15d5:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
    15d9:	c6 c6 c6             	mov    $0xc6,%dh
    15dc:	6c                   	insb   (%dx),%es:(%edi)
    15dd:	6c                   	insb   (%dx),%es:(%edi)
    15de:	6c                   	insb   (%dx),%es:(%edi)
    15df:	ee                   	out    %al,(%dx)
    15e0:	00 00                	add    %al,(%eax)
    15e2:	00 00                	add    %al,(%eax)
    15e4:	00 00                	add    %al,(%eax)
    15e6:	0c 18                	or     $0x18,%al
    15e8:	00 76 cc             	add    %dh,-0x34(%esi)
    15eb:	cc                   	int3   
    15ec:	cc                   	int3   
    15ed:	cc                   	int3   
    15ee:	cc                   	int3   
    15ef:	76 00                	jbe    15f1 <_binary_fonts_zap_ext_vga16_psf_start+0x15f1>
    15f1:	00 00                	add    %al,(%eax)
    15f3:	00 00                	add    %al,(%eax)
    15f5:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    15f8:	00 7c c6 c0          	add    %bh,-0x40(%esi,%eax,8)
    15fc:	78 c0                	js     15be <_binary_fonts_zap_ext_vga16_psf_start+0x15be>
    15fe:	c6                   	(bad)  
    15ff:	7c 00                	jl     1601 <_binary_fonts_zap_ext_vga16_psf_start+0x1601>
    1601:	00 00                	add    %al,(%eax)
    1603:	00 00                	add    %al,(%eax)
    1605:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    1608:	00 dc                	add    %bl,%ah
    160a:	66 66 66 66 66 66 06 	data16 data16 data16 data16 data16 pushw %es
    1611:	06                   	push   %es
    1612:	06                   	push   %es
    1613:	00 00                	add    %al,(%eax)
    1615:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    1618:	00 38                	add    %bh,(%eax)
    161a:	18 18                	sbb    %bl,(%eax)
    161c:	18 18                	sbb    %bl,(%eax)
    161e:	18 0e                	sbb    %cl,(%esi)
    1620:	00 00                	add    %al,(%eax)
    1622:	00 00                	add    %al,(%eax)
    1624:	0c 18                	or     $0x18,%al
    1626:	00 6c 00 cc          	add    %ch,-0x34(%eax,%eax,1)
    162a:	c6 c6 c6             	mov    $0xc6,%dh
    162d:	c6 c6 7c             	mov    $0x7c,%dh
	...
    1638:	00 76 cc             	add    %dh,-0x34(%esi)
    163b:	cc                   	int3   
    163c:	cc                   	int3   
    163d:	cc                   	int3   
    163e:	cc                   	int3   
    163f:	76 00                	jbe    1641 <_binary_fonts_zap_ext_vga16_psf_start+0x1641>
    1641:	00 00                	add    %al,(%eax)
    1643:	00 00                	add    %al,(%eax)
    1645:	00 3c 66             	add    %bh,(%esi,%eiz,2)
    1648:	66 66 6c             	data16 data16 insb (%dx),%es:(%edi)
    164b:	66 66 66 66 6c       	data16 data16 data16 data16 insb (%dx),%es:(%edi)
    1650:	60                   	pusha  
    1651:	60                   	pusha  
    1652:	60                   	pusha  
    1653:	00 00                	add    %al,(%eax)
    1655:	00 00                	add    %al,(%eax)
    1657:	00 00                	add    %al,(%eax)
    1659:	c6                   	(bad)  
    165a:	66 6c                	data16 insb (%dx),%es:(%edi)
    165c:	6c                   	insb   (%dx),%es:(%edi)
    165d:	3c 38                	cmp    $0x38,%al
    165f:	18 18                	sbb    %bl,(%eax)
    1661:	18 18                	sbb    %bl,(%eax)
    1663:	00 00                	add    %al,(%eax)
    1665:	00 3c 66             	add    %bh,(%esi,%eiz,2)
    1668:	30 18                	xor    %bl,(%eax)
    166a:	7c c6                	jl     1632 <_binary_fonts_zap_ext_vga16_psf_start+0x1632>
    166c:	c6 c6 c6             	mov    $0xc6,%dh
    166f:	7c 00                	jl     1671 <_binary_fonts_zap_ext_vga16_psf_start+0x1671>
	...
    1679:	7c c6                	jl     1641 <_binary_fonts_zap_ext_vga16_psf_start+0x1641>
    167b:	c0 78 c0 c6          	sarb   $0xc6,-0x40(%eax)
    167f:	7c 00                	jl     1681 <_binary_fonts_zap_ext_vga16_psf_start+0x1681>
    1681:	00 00                	add    %al,(%eax)
    1683:	00 00                	add    %al,(%eax)
    1685:	00 46 7c             	add    %al,0x7c(%esi)
    1688:	18 30                	sbb    %dh,(%eax)
    168a:	60                   	pusha  
    168b:	60                   	pusha  
    168c:	c0 c0 c0             	rol    $0xc0,%al
    168f:	7c 06                	jl     1697 <_binary_fonts_zap_ext_vga16_psf_start+0x1697>
    1691:	06                   	push   %es
    1692:	1c 00                	sbb    $0x0,%al
    1694:	00 00                	add    %al,(%eax)
    1696:	00 00                	add    %al,(%eax)
    1698:	00 dc                	add    %bl,%ah
    169a:	66 66 66 66 66 66 06 	data16 data16 data16 data16 data16 pushw %es
    16a1:	06                   	push   %es
    16a2:	06                   	push   %es
    16a3:	00 00                	add    %al,(%eax)
    16a5:	00 3c 66             	add    %bh,(%esi,%eiz,2)
    16a8:	66 66 7e 66          	data16 data16 jle 1712 <_binary_fonts_zap_ext_vga16_psf_start+0x1712>
    16ac:	66 66 66 3c 00       	data16 data16 data16 cmp $0x0,%al
	...
    16b9:	38 18                	cmp    %bl,(%eax)
    16bb:	18 18                	sbb    %bl,(%eax)
    16bd:	18 18                	sbb    %bl,(%eax)
    16bf:	0e                   	push   %cs
	...
    16c8:	00 e6                	add    %ah,%dh
    16ca:	6c                   	insb   (%dx),%es:(%edi)
    16cb:	78 78                	js     1745 <_binary_fonts_zap_ext_vga16_psf_start+0x1745>
    16cd:	6c                   	insb   (%dx),%es:(%edi)
    16ce:	66 e6 00             	data16 out %al,$0x0
    16d1:	00 00                	add    %al,(%eax)
    16d3:	00 00                	add    %al,(%eax)
    16d5:	00 e0                	add    %ah,%al
    16d7:	30 30                	xor    %dh,(%eax)
    16d9:	18 38                	sbb    %bh,(%eax)
    16db:	38 6c 66 c6          	cmp    %ch,-0x3a(%esi,%eiz,2)
    16df:	c3                   	ret    
	...
    16e8:	00 c6                	add    %al,%dh
    16ea:	c6                   	(bad)  
    16eb:	66 6c                	data16 insb (%dx),%es:(%edi)
    16ed:	3c 38                	cmp    $0x38,%al
    16ef:	10 00                	adc    %al,(%eax)
    16f1:	00 00                	add    %al,(%eax)
    16f3:	00 00                	add    %al,(%eax)
    16f5:	00 66 3c             	add    %ah,0x3c(%esi)
    16f8:	30 60 3c             	xor    %ah,0x3c(%eax)
    16fb:	60                   	pusha  
    16fc:	c0 c0 c0             	rol    $0xc0,%al
    16ff:	7c 06                	jl     1707 <_binary_fonts_zap_ext_vga16_psf_start+0x1707>
    1701:	06                   	push   %es
    1702:	1c 00                	sbb    $0x0,%al
    1704:	00 00                	add    %al,(%eax)
    1706:	00 00                	add    %al,(%eax)
    1708:	00 3c 66             	add    %bh,(%esi,%eiz,2)
    170b:	66 66 66 66 7c 60    	data16 data16 data16 data16 jl 1771 <_binary_fonts_zap_ext_vga16_psf_start+0x1771>
    1711:	60                   	pusha  
    1712:	60                   	pusha  
    1713:	00 00                	add    %al,(%eax)
    1715:	00 00                	add    %al,(%eax)
    1717:	00 00                	add    %al,(%eax)
    1719:	7c c6                	jl     16e1 <_binary_fonts_zap_ext_vga16_psf_start+0x16e1>
    171b:	c0 c0 c0             	rol    $0xc0,%al
    171e:	7c 06                	jl     1726 <_binary_fonts_zap_ext_vga16_psf_start+0x1726>
    1720:	06                   	push   %es
    1721:	1c 00                	sbb    $0x0,%al
    1723:	00 00                	add    %al,(%eax)
    1725:	00 00                	add    %al,(%eax)
    1727:	00 00                	add    %al,(%eax)
    1729:	7e cc                	jle    16f7 <_binary_fonts_zap_ext_vga16_psf_start+0x16f7>
    172b:	cc                   	int3   
    172c:	cc                   	int3   
    172d:	cc                   	int3   
    172e:	cc                   	int3   
    172f:	78 00                	js     1731 <_binary_fonts_zap_ext_vga16_psf_start+0x1731>
	...
    1739:	7e 18                	jle    1753 <_binary_fonts_zap_ext_vga16_psf_start+0x1753>
    173b:	18 18                	sbb    %bl,(%eax)
    173d:	18 18                	sbb    %bl,(%eax)
    173f:	0e                   	push   %cs
	...
    1748:	00 cc                	add    %cl,%ah
    174a:	c6 c6 c6             	mov    $0xc6,%dh
    174d:	c6 c6 7c             	mov    $0x7c,%dh
	...
    1758:	00 4c d6 d6          	add    %cl,-0x2a(%esi,%edx,8)
    175c:	d6                   	(bad)  
    175d:	d6                   	(bad)  
    175e:	d6                   	(bad)  
    175f:	7c 10                	jl     1771 <_binary_fonts_zap_ext_vga16_psf_start+0x1771>
    1761:	10 10                	adc    %dl,(%eax)
    1763:	00 00                	add    %al,(%eax)
    1765:	00 00                	add    %al,(%eax)
    1767:	00 00                	add    %al,(%eax)
    1769:	c6                   	(bad)  
    176a:	66 6c                	data16 insb (%dx),%es:(%edi)
    176c:	6c                   	insb   (%dx),%es:(%edi)
    176d:	38 38                	cmp    %bh,(%eax)
    176f:	6c                   	insb   (%dx),%es:(%edi)
    1770:	6c                   	insb   (%dx),%es:(%edi)
    1771:	c6 c3 00             	mov    $0x0,%bl
    1774:	00 00                	add    %al,(%eax)
    1776:	00 00                	add    %al,(%eax)
    1778:	00 92 d6 d6 d6 d6    	add    %dl,-0x2929292a(%edx)
    177e:	d6                   	(bad)  
    177f:	7c 10                	jl     1791 <_binary_fonts_zap_ext_vga16_psf_start+0x1791>
    1781:	10 10                	adc    %dl,(%eax)
    1783:	00 00                	add    %al,(%eax)
    1785:	00 00                	add    %al,(%eax)
    1787:	00 00                	add    %al,(%eax)
    1789:	6c                   	insb   (%dx),%es:(%edi)
    178a:	c6                   	(bad)  
    178b:	d6                   	(bad)  
    178c:	d6                   	(bad)  
    178d:	d6                   	(bad)  
    178e:	d6                   	(bad)  
    178f:	6c                   	insb   (%dx),%es:(%edi)
    1790:	00 00                	add    %al,(%eax)
    1792:	00 00                	add    %al,(%eax)
    1794:	00 00                	add    %al,(%eax)
    1796:	66 66 00 38          	data16 data16 add %bh,(%eax)
    179a:	18 18                	sbb    %bl,(%eax)
    179c:	18 18                	sbb    %bl,(%eax)
    179e:	18 0e                	sbb    %cl,(%esi)
    17a0:	00 00                	add    %al,(%eax)
    17a2:	00 00                	add    %al,(%eax)
    17a4:	00 00                	add    %al,(%eax)
    17a6:	6c                   	insb   (%dx),%es:(%edi)
    17a7:	6c                   	insb   (%dx),%es:(%edi)
    17a8:	00 cc                	add    %cl,%ah
    17aa:	c6 c6 c6             	mov    $0xc6,%dh
    17ad:	c6 c6 7c             	mov    $0x7c,%dh
    17b0:	00 00                	add    %al,(%eax)
    17b2:	00 00                	add    %al,(%eax)
    17b4:	00 00                	add    %al,(%eax)
    17b6:	0c 18                	or     $0x18,%al
    17b8:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
    17bc:	c6 c6 c6             	mov    $0xc6,%dh
    17bf:	7c 00                	jl     17c1 <_binary_fonts_zap_ext_vga16_psf_start+0x17c1>
    17c1:	00 00                	add    %al,(%eax)
    17c3:	00 00                	add    %al,(%eax)
    17c5:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    17c8:	00 cc                	add    %cl,%ah
    17ca:	c6 c6 c6             	mov    $0xc6,%dh
    17cd:	c6 c6 7c             	mov    $0x7c,%dh
    17d0:	00 00                	add    %al,(%eax)
    17d2:	00 00                	add    %al,(%eax)
    17d4:	00 00                	add    %al,(%eax)
    17d6:	0c 18                	or     $0x18,%al
    17d8:	00 6c c6 d6          	add    %ch,-0x2a(%esi,%eax,8)
    17dc:	d6                   	(bad)  
    17dd:	d6                   	(bad)  
    17de:	d6                   	(bad)  
    17df:	6c                   	insb   (%dx),%es:(%edi)
    17e0:	00 00                	add    %al,(%eax)
    17e2:	00 00                	add    %al,(%eax)
    17e4:	00 7c 00 10          	add    %bh,0x10(%eax,%eax,1)
    17e8:	38 6c c6 c6          	cmp    %ch,-0x3a(%esi,%eax,8)
    17ec:	fe c6                	inc    %dh
    17ee:	c6 c6 00             	mov    $0x0,%dh
    17f1:	00 00                	add    %al,(%eax)
    17f3:	00 6c 38 00          	add    %ch,0x0(%eax,%edi,1)
    17f7:	10 38                	adc    %bh,(%eax)
    17f9:	6c                   	insb   (%dx),%es:(%edi)
    17fa:	c6 c6 fe             	mov    $0xfe,%dh
    17fd:	c6 c6 c6             	mov    $0xc6,%dh
    1800:	00 00                	add    %al,(%eax)
    1802:	00 00                	add    %al,(%eax)
    1804:	00 00                	add    %al,(%eax)
    1806:	10 38                	adc    %bh,(%eax)
    1808:	6c                   	insb   (%dx),%es:(%edi)
    1809:	c6 c6 fe             	mov    $0xfe,%dh
    180c:	c6 c6 c6             	mov    $0xc6,%dh
    180f:	c6                   	(bad)  
    1810:	0c 18                	or     $0x18,%al
    1812:	0e                   	push   %cs
    1813:	00 18                	add    %bl,(%eax)
    1815:	18 00                	sbb    %al,(%eax)
    1817:	fc                   	cld    
    1818:	66 66 66 7c 66       	data16 data16 data16 jl 1883 <_binary_fonts_zap_ext_vga16_psf_start+0x1883>
    181d:	66 66 fc             	data16 data16 cld 
    1820:	00 00                	add    %al,(%eax)
    1822:	00 00                	add    %al,(%eax)
    1824:	0c 18                	or     $0x18,%al
    1826:	30 00                	xor    %al,(%eax)
    1828:	3c 66                	cmp    $0x66,%al
    182a:	c2 c0 c0             	ret    $0xc0c0
    182d:	c2 66 3c             	ret    $0x3c66
    1830:	00 00                	add    %al,(%eax)
    1832:	00 00                	add    %al,(%eax)
    1834:	10 38                	adc    %bh,(%eax)
    1836:	6c                   	insb   (%dx),%es:(%edi)
    1837:	00 3c 66             	add    %bh,(%esi,%eiz,2)
    183a:	c2 c0 c0             	ret    $0xc0c0
    183d:	c2 66 3c             	ret    $0x3c66
    1840:	00 00                	add    %al,(%eax)
    1842:	00 00                	add    %al,(%eax)
    1844:	18 18                	sbb    %bl,(%eax)
    1846:	00 3c 66             	add    %bh,(%esi,%eiz,2)
    1849:	c2 c0 c0             	ret    $0xc0c0
    184c:	c0 c2 66             	rol    $0x66,%dl
    184f:	3c 00                	cmp    $0x0,%al
    1851:	00 00                	add    %al,(%eax)
    1853:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1857:	3c 66                	cmp    $0x66,%al
    1859:	c2 c0 c0             	ret    $0xc0c0
    185c:	c0 c2 66             	rol    $0x66,%dl
    185f:	3c 00                	cmp    $0x0,%al
    1861:	00 00                	add    %al,(%eax)
    1863:	00 30                	add    %dh,(%eax)
    1865:	30 00                	xor    %al,(%eax)
    1867:	f8                   	clc    
    1868:	6c                   	insb   (%dx),%es:(%edi)
    1869:	66 66 66 66 66 6c    	data16 data16 data16 data16 data16 insb (%dx),%es:(%edi)
    186f:	f8                   	clc    
    1870:	00 00                	add    %al,(%eax)
    1872:	00 00                	add    %al,(%eax)
    1874:	6c                   	insb   (%dx),%es:(%edi)
    1875:	38 10                	cmp    %dl,(%eax)
    1877:	f8                   	clc    
    1878:	6c                   	insb   (%dx),%es:(%edi)
    1879:	66 66 66 66 66 6c    	data16 data16 data16 data16 data16 insb (%dx),%es:(%edi)
    187f:	f8                   	clc    
    1880:	00 00                	add    %al,(%eax)
    1882:	00 00                	add    %al,(%eax)
    1884:	00 7c 00 fe          	add    %bh,-0x2(%eax,%eax,1)
    1888:	66 62 68 78          	bound  %bp,0x78(%eax)
    188c:	68 62 66 fe 00       	push   $0xfe6662
    1891:	00 00                	add    %al,(%eax)
    1893:	00 18                	add    %bl,(%eax)
    1895:	18 00                	sbb    %al,(%eax)
    1897:	fe                   	(bad)  
    1898:	66 62 68 78          	bound  %bp,0x78(%eax)
    189c:	68 62 66 fe 00       	push   $0xfe6662
    18a1:	00 00                	add    %al,(%eax)
    18a3:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    18a7:	fe                   	(bad)  
    18a8:	66 62 68 78          	bound  %bp,0x78(%eax)
    18ac:	68 62 66 fe 00       	push   $0xfe6662
    18b1:	00 00                	add    %al,(%eax)
    18b3:	00 00                	add    %al,(%eax)
    18b5:	00 00                	add    %al,(%eax)
    18b7:	fe                   	(bad)  
    18b8:	66 62 68 78          	bound  %bp,0x78(%eax)
    18bc:	68 62 66 fe 18       	push   $0x18fe6662
    18c1:	30 1c 00             	xor    %bl,(%eax,%eax,1)
    18c4:	18 18                	sbb    %bl,(%eax)
    18c6:	00 fe                	add    %bh,%dh
    18c8:	66 62 68 78          	bound  %bp,0x78(%eax)
    18cc:	68 60 60 f0 00       	push   $0xf06060
    18d1:	00 00                	add    %al,(%eax)
    18d3:	00 10                	add    %dl,(%eax)
    18d5:	38 6c 00 3c          	cmp    %ch,0x3c(%eax,%eax,1)
    18d9:	66 c2 c0 de          	retw   $0xdec0
    18dd:	c6                   	(bad)  
    18de:	66 3a 00             	data16 cmp (%eax),%al
    18e1:	00 00                	add    %al,(%eax)
    18e3:	00 18                	add    %bl,(%eax)
    18e5:	18 00                	sbb    %al,(%eax)
    18e7:	3c 66                	cmp    $0x66,%al
    18e9:	c2 c0 de             	ret    $0xdec0
    18ec:	c6 c6 66             	mov    $0x66,%dh
    18ef:	3a 00                	cmp    (%eax),%al
    18f1:	00 00                	add    %al,(%eax)
    18f3:	00 00                	add    %al,(%eax)
    18f5:	00 3c 66             	add    %bh,(%esi,%eiz,2)
    18f8:	c2 c0 c0             	ret    $0xc0c0
    18fb:	de c6                	faddp  %st,%st(6)
    18fd:	c6                   	(bad)  
    18fe:	66 3a 00             	data16 cmp (%eax),%al
    1901:	18 18                	sbb    %bl,(%eax)
    1903:	30 10                	xor    %dl,(%eax)
    1905:	38 6c 00 c6          	cmp    %ch,-0x3a(%eax,%eax,1)
    1909:	c6 c6 fe             	mov    $0xfe,%dh
    190c:	c6 c6 c6             	mov    $0xc6,%dh
    190f:	c6 00 00             	movb   $0x0,(%eax)
    1912:	00 00                	add    %al,(%eax)
    1914:	00 00                	add    %al,(%eax)
    1916:	66 ff 66 66          	jmpw   *0x66(%esi)
    191a:	7e 66                	jle    1982 <_binary_fonts_zap_ext_vga16_psf_start+0x1982>
    191c:	66 66 66 66 00 00    	data16 data16 data16 data16 add %al,(%eax)
    1922:	00 00                	add    %al,(%eax)
    1924:	00 76 dc             	add    %dh,-0x24(%esi)
    1927:	00 3c 18             	add    %bh,(%eax,%ebx,1)
    192a:	18 18                	sbb    %bl,(%eax)
    192c:	18 18                	sbb    %bl,(%eax)
    192e:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
    1931:	00 00                	add    %al,(%eax)
    1933:	00 00                	add    %al,(%eax)
    1935:	7e 00                	jle    1937 <_binary_fonts_zap_ext_vga16_psf_start+0x1937>
    1937:	3c 18                	cmp    $0x18,%al
    1939:	18 18                	sbb    %bl,(%eax)
    193b:	18 18                	sbb    %bl,(%eax)
    193d:	18 18                	sbb    %bl,(%eax)
    193f:	3c 00                	cmp    $0x0,%al
    1941:	00 00                	add    %al,(%eax)
    1943:	00 00                	add    %al,(%eax)
    1945:	00 00                	add    %al,(%eax)
    1947:	3c 18                	cmp    $0x18,%al
    1949:	18 18                	sbb    %bl,(%eax)
    194b:	18 18                	sbb    %bl,(%eax)
    194d:	18 18                	sbb    %bl,(%eax)
    194f:	3c 18                	cmp    $0x18,%al
    1951:	30 1c 00             	xor    %bl,(%eax,%eax,1)
    1954:	08 1c 36             	or     %bl,(%esi,%esi,1)
    1957:	00 1e                	add    %bl,(%esi)
    1959:	0c 0c                	or     $0xc,%al
    195b:	0c cc                	or     $0xcc,%al
    195d:	cc                   	int3   
    195e:	cc                   	int3   
    195f:	78 00                	js     1961 <_binary_fonts_zap_ext_vga16_psf_start+0x1961>
    1961:	00 00                	add    %al,(%eax)
    1963:	00 00                	add    %al,(%eax)
    1965:	00 e6                	add    %ah,%dh
    1967:	66 66 6c             	data16 data16 insb (%dx),%es:(%edi)
    196a:	78 78                	js     19e4 <_binary_fonts_zap_ext_vga16_psf_start+0x19e4>
    196c:	6c                   	insb   (%dx),%es:(%edi)
    196d:	66 66 e6 00          	data16 data16 out %al,$0x0
    1971:	18 18                	sbb    %bl,(%eax)
    1973:	30 0c 18             	xor    %cl,(%eax,%ebx,1)
    1976:	30 00                	xor    %al,(%eax)
    1978:	f0 60                	lock pusha 
    197a:	60                   	pusha  
    197b:	60                   	pusha  
    197c:	60                   	pusha  
    197d:	62 66 fe             	bound  %esp,-0x2(%esi)
    1980:	00 00                	add    %al,(%eax)
    1982:	00 00                	add    %al,(%eax)
    1984:	36 1c 08             	ss sbb $0x8,%al
    1987:	f0 60                	lock pusha 
    1989:	60                   	pusha  
    198a:	60                   	pusha  
    198b:	60                   	pusha  
    198c:	60                   	pusha  
    198d:	62 66 fe             	bound  %esp,-0x2(%esi)
    1990:	00 00                	add    %al,(%eax)
    1992:	00 00                	add    %al,(%eax)
    1994:	00 00                	add    %al,(%eax)
    1996:	f0 60                	lock pusha 
    1998:	60                   	pusha  
    1999:	60                   	pusha  
    199a:	60                   	pusha  
    199b:	60                   	pusha  
    199c:	60                   	pusha  
    199d:	62 66 fe             	bound  %esp,-0x2(%esi)
    19a0:	00 18                	add    %bl,(%eax)
    19a2:	18 30                	sbb    %dh,(%eax)
    19a4:	00 00                	add    %al,(%eax)
    19a6:	f0 60                	lock pusha 
    19a8:	60                   	pusha  
    19a9:	60                   	pusha  
    19aa:	78 e0                	js     198c <_binary_fonts_zap_ext_vga16_psf_start+0x198c>
    19ac:	60                   	pusha  
    19ad:	62 66 fe             	bound  %esp,-0x2(%esi)
    19b0:	00 00                	add    %al,(%eax)
    19b2:	00 00                	add    %al,(%eax)
    19b4:	18 18                	sbb    %bl,(%eax)
    19b6:	00 c3                	add    %al,%bl
    19b8:	e7 ff                	out    %eax,$0xff
    19ba:	ff                   	(bad)  
    19bb:	db c3                	fcmovnb %st(3),%st
    19bd:	c3                   	ret    
    19be:	c3                   	ret    
    19bf:	c3                   	ret    
    19c0:	00 00                	add    %al,(%eax)
    19c2:	00 00                	add    %al,(%eax)
    19c4:	0c 18                	or     $0x18,%al
    19c6:	30 00                	xor    %al,(%eax)
    19c8:	c6                   	(bad)  
    19c9:	e6 f6                	out    %al,$0xf6
    19cb:	fe                   	(bad)  
    19cc:	de ce                	fmulp  %st,%st(6)
    19ce:	c6 c6 00             	mov    $0x0,%dh
    19d1:	00 00                	add    %al,(%eax)
    19d3:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    19d7:	c6                   	(bad)  
    19d8:	e6 f6                	out    %al,$0xf6
    19da:	fe                   	(bad)  
    19db:	de ce                	fmulp  %st,%st(6)
    19dd:	c6 c6 c6             	mov    $0xc6,%dh
    19e0:	00 00                	add    %al,(%eax)
    19e2:	00 00                	add    %al,(%eax)
    19e4:	00 00                	add    %al,(%eax)
    19e6:	c6                   	(bad)  
    19e7:	e6 f6                	out    %al,$0xf6
    19e9:	fe                   	(bad)  
    19ea:	de ce                	fmulp  %st,%st(6)
    19ec:	c6 c6 c6             	mov    $0xc6,%dh
    19ef:	c6 00 18             	movb   $0x18,(%eax)
    19f2:	18 30                	sbb    %dh,(%eax)
    19f4:	00 00                	add    %al,(%eax)
    19f6:	c6                   	(bad)  
    19f7:	e6 f6                	out    %al,$0xf6
    19f9:	fe                   	(bad)  
    19fa:	de ce                	fmulp  %st,%st(6)
    19fc:	c6 c6 c6             	mov    $0xc6,%dh
    19ff:	c6 06 0c             	movb   $0xc,(%esi)
    1a02:	00 00                	add    %al,(%eax)
    1a04:	00 7c 00 7c          	add    %bh,0x7c(%eax,%eax,1)
    1a08:	c6 c6 c6             	mov    $0xc6,%dh
    1a0b:	c6 c6 c6             	mov    $0xc6,%dh
    1a0e:	c6                   	(bad)  
    1a0f:	7c 00                	jl     1a11 <_binary_fonts_zap_ext_vga16_psf_start+0x1a11>
    1a11:	00 00                	add    %al,(%eax)
    1a13:	00 33                	add    %dh,(%ebx)
    1a15:	66 cc                	data16 int3 
    1a17:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
    1a1b:	c6 c6 c6             	mov    $0xc6,%dh
    1a1e:	c6                   	(bad)  
    1a1f:	7c 00                	jl     1a21 <_binary_fonts_zap_ext_vga16_psf_start+0x1a21>
    1a21:	00 00                	add    %al,(%eax)
    1a23:	00 18                	add    %bl,(%eax)
    1a25:	18 00                	sbb    %al,(%eax)
    1a27:	fc                   	cld    
    1a28:	66 66 66 7c 60       	data16 data16 data16 jl 1a8d <_binary_fonts_zap_ext_vga16_psf_start+0x1a8d>
    1a2d:	60                   	pusha  
    1a2e:	60                   	pusha  
    1a2f:	f0 00 00             	lock add %al,(%eax)
    1a32:	00 00                	add    %al,(%eax)
    1a34:	0c 18                	or     $0x18,%al
    1a36:	30 00                	xor    %al,(%eax)
    1a38:	fc                   	cld    
    1a39:	66 66 7c 6c          	data16 data16 jl 1aa9 <_binary_fonts_zap_ext_vga16_psf_start+0x1aa9>
    1a3d:	66 66 e6 00          	data16 data16 out %al,$0x0
    1a41:	00 00                	add    %al,(%eax)
    1a43:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1a47:	fc                   	cld    
    1a48:	66 66 66 7c 6c       	data16 data16 data16 jl 1ab9 <_binary_fonts_zap_ext_vga16_psf_start+0x1ab9>
    1a4d:	66 66 e6 00          	data16 data16 out %al,$0x0
    1a51:	00 00                	add    %al,(%eax)
    1a53:	00 00                	add    %al,(%eax)
    1a55:	00 fc                	add    %bh,%ah
    1a57:	66 66 66 7c 6c       	data16 data16 data16 jl 1ac8 <_binary_fonts_zap_ext_vga16_psf_start+0x1ac8>
    1a5c:	66 66 66 e6 00       	data16 data16 data16 out %al,$0x0
    1a61:	18 18                	sbb    %bl,(%eax)
    1a63:	30 0c 18             	xor    %cl,(%eax,%ebx,1)
    1a66:	30 00                	xor    %al,(%eax)
    1a68:	7c c6                	jl     1a30 <_binary_fonts_zap_ext_vga16_psf_start+0x1a30>
    1a6a:	c0 78 0c 06          	sarb   $0x6,0xc(%eax)
    1a6e:	c6                   	(bad)  
    1a6f:	7c 00                	jl     1a71 <_binary_fonts_zap_ext_vga16_psf_start+0x1a71>
    1a71:	00 00                	add    %al,(%eax)
    1a73:	00 10                	add    %dl,(%eax)
    1a75:	38 6c 00 7c          	cmp    %ch,0x7c(%eax,%eax,1)
    1a79:	c6 c0 78             	mov    $0x78,%al
    1a7c:	0c 06                	or     $0x6,%al
    1a7e:	c6                   	(bad)  
    1a7f:	7c 00                	jl     1a81 <_binary_fonts_zap_ext_vga16_psf_start+0x1a81>
    1a81:	00 00                	add    %al,(%eax)
    1a83:	00 30                	add    %dh,(%eax)
    1a85:	30 00                	xor    %al,(%eax)
    1a87:	7c c6                	jl     1a4f <_binary_fonts_zap_ext_vga16_psf_start+0x1a4f>
    1a89:	c6                   	(bad)  
    1a8a:	60                   	pusha  
    1a8b:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
    1a8e:	c6                   	(bad)  
    1a8f:	7c 00                	jl     1a91 <_binary_fonts_zap_ext_vga16_psf_start+0x1a91>
    1a91:	00 00                	add    %al,(%eax)
    1a93:	00 00                	add    %al,(%eax)
    1a95:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
    1a99:	60                   	pusha  
    1a9a:	38 0c 06             	cmp    %cl,(%esi,%eax,1)
    1a9d:	c6 c6 7c             	mov    $0x7c,%dh
    1aa0:	00 18                	add    %bl,(%eax)
    1aa2:	18 30                	sbb    %dh,(%eax)
    1aa4:	18 18                	sbb    %bl,(%eax)
    1aa6:	00 ff                	add    %bh,%bh
    1aa8:	db 99 18 18 18 18    	fistpl 0x18181818(%ecx)
    1aae:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
    1ab1:	00 00                	add    %al,(%eax)
    1ab3:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1ab7:	ff                   	(bad)  
    1ab8:	db 99 18 18 18 18    	fistpl 0x18181818(%ecx)
    1abe:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
    1ac1:	00 00                	add    %al,(%eax)
    1ac3:	00 00                	add    %al,(%eax)
    1ac5:	00 ff                	add    %bh,%bh
    1ac7:	db 99 18 18 18 18    	fistpl 0x18181818(%ecx)
    1acd:	18 18                	sbb    %bl,(%eax)
    1acf:	3c 00                	cmp    $0x0,%al
    1ad1:	18 18                	sbb    %bl,(%eax)
    1ad3:	30 00                	xor    %al,(%eax)
    1ad5:	00 ff                	add    %bh,%bh
    1ad7:	db 99 18 18 18 18    	fistpl 0x18181818(%ecx)
    1add:	18 18                	sbb    %bl,(%eax)
    1adf:	3c 18                	cmp    $0x18,%al
    1ae1:	0c 38                	or     $0x38,%al
    1ae3:	00 00                	add    %al,(%eax)
    1ae5:	00 ff                	add    %bh,%bh
    1ae7:	db 99 18 18 7e 18    	fistpl 0x187e1818(%ecx)
    1aed:	18 18                	sbb    %bl,(%eax)
    1aef:	3c 00                	cmp    $0x0,%al
    1af1:	00 00                	add    %al,(%eax)
    1af3:	00 76 dc             	add    %dh,-0x24(%esi)
    1af6:	00 c6                	add    %al,%dh
    1af8:	c6 c6 c6             	mov    $0xc6,%dh
    1afb:	c6 c6 c6             	mov    $0xc6,%dh
    1afe:	c6                   	(bad)  
    1aff:	7c 00                	jl     1b01 <_binary_fonts_zap_ext_vga16_psf_start+0x1b01>
    1b01:	00 00                	add    %al,(%eax)
    1b03:	00 00                	add    %al,(%eax)
    1b05:	7c 00                	jl     1b07 <_binary_fonts_zap_ext_vga16_psf_start+0x1b07>
    1b07:	c6 c6 c6             	mov    $0xc6,%dh
    1b0a:	c6 c6 c6             	mov    $0xc6,%dh
    1b0d:	c6 c6 7c             	mov    $0x7c,%dh
    1b10:	00 00                	add    %al,(%eax)
    1b12:	00 00                	add    %al,(%eax)
    1b14:	6c                   	insb   (%dx),%es:(%edi)
    1b15:	38 00                	cmp    %al,(%eax)
    1b17:	c6 c6 c6             	mov    $0xc6,%dh
    1b1a:	c6 c6 c6             	mov    $0xc6,%dh
    1b1d:	c6 c6 7c             	mov    $0x7c,%dh
    1b20:	00 00                	add    %al,(%eax)
    1b22:	00 00                	add    %al,(%eax)
    1b24:	38 6c 38 c6          	cmp    %ch,-0x3a(%eax,%edi,1)
    1b28:	c6 c6 c6             	mov    $0xc6,%dh
    1b2b:	c6 c6 c6             	mov    $0xc6,%dh
    1b2e:	c6                   	(bad)  
    1b2f:	7c 00                	jl     1b31 <_binary_fonts_zap_ext_vga16_psf_start+0x1b31>
    1b31:	00 00                	add    %al,(%eax)
    1b33:	00 33                	add    %dh,(%ebx)
    1b35:	66 cc                	data16 int3 
    1b37:	00 c6                	add    %al,%dh
    1b39:	c6 c6 c6             	mov    $0xc6,%dh
    1b3c:	c6 c6 c6             	mov    $0xc6,%dh
    1b3f:	7c 00                	jl     1b41 <_binary_fonts_zap_ext_vga16_psf_start+0x1b41>
    1b41:	00 00                	add    %al,(%eax)
    1b43:	00 00                	add    %al,(%eax)
    1b45:	00 c6                	add    %al,%dh
    1b47:	c6 c6 c6             	mov    $0xc6,%dh
    1b4a:	c6 c6 c6             	mov    $0xc6,%dh
    1b4d:	c6 c6 7c             	mov    $0x7c,%dh
    1b50:	30 60 38             	xor    %ah,0x38(%eax)
    1b53:	00 30                	add    %dh,(%eax)
    1b55:	18 0c 00             	sbb    %cl,(%eax,%eax,1)
    1b58:	c3                   	ret    
    1b59:	c3                   	ret    
    1b5a:	c3                   	ret    
    1b5b:	db db                	fcmovnu %st(3),%st
    1b5d:	ff 66 66             	jmp    *0x66(%esi)
    1b60:	00 00                	add    %al,(%eax)
    1b62:	00 00                	add    %al,(%eax)
    1b64:	0c 18                	or     $0x18,%al
    1b66:	30 00                	xor    %al,(%eax)
    1b68:	c3                   	ret    
    1b69:	c3                   	ret    
    1b6a:	c3                   	ret    
    1b6b:	db db                	fcmovnu %st(3),%st
    1b6d:	ff 66 66             	jmp    *0x66(%esi)
    1b70:	00 00                	add    %al,(%eax)
    1b72:	00 00                	add    %al,(%eax)
    1b74:	10 38                	adc    %bh,(%eax)
    1b76:	6c                   	insb   (%dx),%es:(%edi)
    1b77:	00 c3                	add    %al,%bl
    1b79:	c3                   	ret    
    1b7a:	c3                   	ret    
    1b7b:	db db                	fcmovnu %st(3),%st
    1b7d:	ff 66 66             	jmp    *0x66(%esi)
    1b80:	00 00                	add    %al,(%eax)
    1b82:	00 00                	add    %al,(%eax)
    1b84:	00 66 66             	add    %ah,0x66(%esi)
    1b87:	00 c3                	add    %al,%bl
    1b89:	c3                   	ret    
    1b8a:	c3                   	ret    
    1b8b:	db db                	fcmovnu %st(3),%st
    1b8d:	ff 66 66             	jmp    *0x66(%esi)
    1b90:	00 00                	add    %al,(%eax)
    1b92:	00 00                	add    %al,(%eax)
    1b94:	30 18                	xor    %bl,(%eax)
    1b96:	0c 00                	or     $0x0,%al
    1b98:	c3                   	ret    
    1b99:	c3                   	ret    
    1b9a:	66 3c 18             	data16 cmp $0x18,%al
    1b9d:	18 18                	sbb    %bl,(%eax)
    1b9f:	3c 00                	cmp    $0x0,%al
    1ba1:	00 00                	add    %al,(%eax)
    1ba3:	00 10                	add    %dl,(%eax)
    1ba5:	38 6c 00 c3          	cmp    %ch,-0x3d(%eax,%eax,1)
    1ba9:	c3                   	ret    
    1baa:	66 3c 18             	data16 cmp $0x18,%al
    1bad:	18 18                	sbb    %bl,(%eax)
    1baf:	3c 00                	cmp    $0x0,%al
    1bb1:	00 00                	add    %al,(%eax)
    1bb3:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    1bb6:	30 00                	xor    %al,(%eax)
    1bb8:	ff c6                	inc    %esi
    1bba:	8c 18                	mov    %ds,(%eax)
    1bbc:	30 61 c3             	xor    %ah,-0x3d(%ecx)
    1bbf:	ff 00                	incl   (%eax)
    1bc1:	00 00                	add    %al,(%eax)
    1bc3:	00 18                	add    %bl,(%eax)
    1bc5:	18 00                	sbb    %al,(%eax)
    1bc7:	ff c3                	inc    %ebx
    1bc9:	86 0c 18             	xchg   %cl,(%eax,%ebx,1)
    1bcc:	30 61 c3             	xor    %ah,-0x3d(%ecx)
    1bcf:	ff 00                	incl   (%eax)
    1bd1:	00 00                	add    %al,(%eax)
    1bd3:	00 00                	add    %al,(%eax)
    1bd5:	00 00                	add    %al,(%eax)
    1bd7:	7c 00                	jl     1bd9 <_binary_fonts_zap_ext_vga16_psf_start+0x1bd9>
    1bd9:	78 0c                	js     1be7 <_binary_fonts_zap_ext_vga16_psf_start+0x1be7>
    1bdb:	7c cc                	jl     1ba9 <_binary_fonts_zap_ext_vga16_psf_start+0x1ba9>
    1bdd:	cc                   	int3   
    1bde:	cc                   	int3   
    1bdf:	76 00                	jbe    1be1 <_binary_fonts_zap_ext_vga16_psf_start+0x1be1>
    1be1:	00 00                	add    %al,(%eax)
    1be3:	00 00                	add    %al,(%eax)
    1be5:	00 6c 38 00          	add    %ch,0x0(%eax,%edi,1)
    1be9:	78 0c                	js     1bf7 <_binary_fonts_zap_ext_vga16_psf_start+0x1bf7>
    1beb:	7c cc                	jl     1bb9 <_binary_fonts_zap_ext_vga16_psf_start+0x1bb9>
    1bed:	cc                   	int3   
    1bee:	cc                   	int3   
    1bef:	76 00                	jbe    1bf1 <_binary_fonts_zap_ext_vga16_psf_start+0x1bf1>
	...
    1bf9:	78 0c                	js     1c07 <_binary_fonts_zap_ext_vga16_psf_start+0x1c07>
    1bfb:	7c cc                	jl     1bc9 <_binary_fonts_zap_ext_vga16_psf_start+0x1bc9>
    1bfd:	cc                   	int3   
    1bfe:	cc                   	int3   
    1bff:	76 0c                	jbe    1c0d <_binary_fonts_zap_ext_vga16_psf_start+0x1c0d>
    1c01:	18 0e                	sbb    %cl,(%esi)
    1c03:	00 00                	add    %al,(%eax)
    1c05:	0c ec                	or     $0xec,%al
    1c07:	60                   	pusha  
    1c08:	60                   	pusha  
    1c09:	78 6c                	js     1c77 <_binary_fonts_zap_ext_vga16_psf_start+0x1c77>
    1c0b:	66 66 66 66 7c 00    	data16 data16 data16 data16 jl 1c11 <_binary_fonts_zap_ext_vga16_psf_start+0x1c11>
    1c11:	00 00                	add    %al,(%eax)
    1c13:	00 00                	add    %al,(%eax)
    1c15:	0c 18                	or     $0x18,%al
    1c17:	30 00                	xor    %al,(%eax)
    1c19:	7c c6                	jl     1be1 <_binary_fonts_zap_ext_vga16_psf_start+0x1be1>
    1c1b:	c0 c0 c0             	rol    $0xc0,%al
    1c1e:	c6                   	(bad)  
    1c1f:	7c 00                	jl     1c21 <_binary_fonts_zap_ext_vga16_psf_start+0x1c21>
    1c21:	00 00                	add    %al,(%eax)
    1c23:	00 00                	add    %al,(%eax)
    1c25:	10 38                	adc    %bh,(%eax)
    1c27:	6c                   	insb   (%dx),%es:(%edi)
    1c28:	00 7c c6 c0          	add    %bh,-0x40(%esi,%eax,8)
    1c2c:	c0 c0 c6             	rol    $0xc6,%al
    1c2f:	7c 00                	jl     1c31 <_binary_fonts_zap_ext_vga16_psf_start+0x1c31>
    1c31:	00 00                	add    %al,(%eax)
    1c33:	00 00                	add    %al,(%eax)
    1c35:	00 30                	add    %dh,(%eax)
    1c37:	30 00                	xor    %al,(%eax)
    1c39:	7c c6                	jl     1c01 <_binary_fonts_zap_ext_vga16_psf_start+0x1c01>
    1c3b:	c0 c0 c0             	rol    $0xc0,%al
    1c3e:	c6                   	(bad)  
    1c3f:	7c 00                	jl     1c41 <_binary_fonts_zap_ext_vga16_psf_start+0x1c41>
    1c41:	00 00                	add    %al,(%eax)
    1c43:	00 00                	add    %al,(%eax)
    1c45:	6c                   	insb   (%dx),%es:(%edi)
    1c46:	38 10                	cmp    %dl,(%eax)
    1c48:	00 7c c6 c0          	add    %bh,-0x40(%esi,%eax,8)
    1c4c:	c0 c0 c6             	rol    $0xc6,%al
    1c4f:	7c 00                	jl     1c51 <_binary_fonts_zap_ext_vga16_psf_start+0x1c51>
    1c51:	00 00                	add    %al,(%eax)
    1c53:	00 60 60             	add    %ah,0x60(%eax)
    1c56:	0c 0c                	or     $0xc,%al
    1c58:	0c 3c                	or     $0x3c,%al
    1c5a:	6c                   	insb   (%dx),%es:(%edi)
    1c5b:	cc                   	int3   
    1c5c:	cc                   	int3   
    1c5d:	cc                   	int3   
    1c5e:	cc                   	int3   
    1c5f:	76 00                	jbe    1c61 <_binary_fonts_zap_ext_vga16_psf_start+0x1c61>
    1c61:	00 00                	add    %al,(%eax)
    1c63:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1c67:	0c 0c                	or     $0xc,%al
    1c69:	3c 6c                	cmp    $0x6c,%al
    1c6b:	cc                   	int3   
    1c6c:	cc                   	int3   
    1c6d:	cc                   	int3   
    1c6e:	cc                   	int3   
    1c6f:	76 00                	jbe    1c71 <_binary_fonts_zap_ext_vga16_psf_start+0x1c71>
    1c71:	00 00                	add    %al,(%eax)
    1c73:	00 00                	add    %al,(%eax)
    1c75:	00 0c 3e             	add    %cl,(%esi,%edi,1)
    1c78:	0c 3c                	or     $0x3c,%al
    1c7a:	6c                   	insb   (%dx),%es:(%edi)
    1c7b:	cc                   	int3   
    1c7c:	cc                   	int3   
    1c7d:	cc                   	int3   
    1c7e:	cc                   	int3   
    1c7f:	76 00                	jbe    1c81 <_binary_fonts_zap_ext_vga16_psf_start+0x1c81>
    1c81:	00 00                	add    %al,(%eax)
    1c83:	00 00                	add    %al,(%eax)
    1c85:	00 00                	add    %al,(%eax)
    1c87:	7c 00                	jl     1c89 <_binary_fonts_zap_ext_vga16_psf_start+0x1c89>
    1c89:	7c c6                	jl     1c51 <_binary_fonts_zap_ext_vga16_psf_start+0x1c51>
    1c8b:	fe c0                	inc    %al
    1c8d:	c0 c6 7c             	rol    $0x7c,%dh
    1c90:	00 00                	add    %al,(%eax)
    1c92:	00 00                	add    %al,(%eax)
    1c94:	00 00                	add    %al,(%eax)
    1c96:	30 30                	xor    %dh,(%eax)
    1c98:	00 7c c6 fe          	add    %bh,-0x2(%esi,%eax,8)
    1c9c:	c0 c0 c6             	rol    $0xc6,%al
    1c9f:	7c 00                	jl     1ca1 <_binary_fonts_zap_ext_vga16_psf_start+0x1ca1>
    1ca1:	00 00                	add    %al,(%eax)
    1ca3:	00 00                	add    %al,(%eax)
    1ca5:	6c                   	insb   (%dx),%es:(%edi)
    1ca6:	38 10                	cmp    %dl,(%eax)
    1ca8:	00 7c c6 fe          	add    %bh,-0x2(%esi,%eax,8)
    1cac:	c0 c0 c6             	rol    $0xc6,%al
    1caf:	7c 00                	jl     1cb1 <_binary_fonts_zap_ext_vga16_psf_start+0x1cb1>
	...
    1cb9:	7c c6                	jl     1c81 <_binary_fonts_zap_ext_vga16_psf_start+0x1c81>
    1cbb:	fe c0                	inc    %al
    1cbd:	c0 c6 7c             	rol    $0x7c,%dh
    1cc0:	30 60 38             	xor    %ah,0x38(%eax)
    1cc3:	00 30                	add    %dh,(%eax)
    1cc5:	30 00                	xor    %al,(%eax)
    1cc7:	38 6c 64 f0          	cmp    %ch,-0x10(%esp,%eiz,2)
    1ccb:	60                   	pusha  
    1ccc:	60                   	pusha  
    1ccd:	60                   	pusha  
    1cce:	60                   	pusha  
    1ccf:	f0 00 00             	lock add %al,(%eax)
    1cd2:	00 00                	add    %al,(%eax)
    1cd4:	00 10                	add    %dl,(%eax)
    1cd6:	38 6c 00 76          	cmp    %ch,0x76(%eax,%eax,1)
    1cda:	cc                   	int3   
    1cdb:	cc                   	int3   
    1cdc:	cc                   	int3   
    1cdd:	cc                   	int3   
    1cde:	cc                   	int3   
    1cdf:	7c 0c                	jl     1ced <_binary_fonts_zap_ext_vga16_psf_start+0x1ced>
    1ce1:	cc                   	int3   
    1ce2:	78 00                	js     1ce4 <_binary_fonts_zap_ext_vga16_psf_start+0x1ce4>
    1ce4:	00 00                	add    %al,(%eax)
    1ce6:	30 30                	xor    %dh,(%eax)
    1ce8:	00 76 cc             	add    %dh,-0x34(%esi)
    1ceb:	cc                   	int3   
    1cec:	cc                   	int3   
    1ced:	cc                   	int3   
    1cee:	cc                   	int3   
    1cef:	7c 0c                	jl     1cfd <_binary_fonts_zap_ext_vga16_psf_start+0x1cfd>
    1cf1:	cc                   	int3   
    1cf2:	78 00                	js     1cf4 <_binary_fonts_zap_ext_vga16_psf_start+0x1cf4>
    1cf4:	00 18                	add    %bl,(%eax)
    1cf6:	30 30                	xor    %dh,(%eax)
    1cf8:	00 76 cc             	add    %dh,-0x34(%esi)
    1cfb:	cc                   	int3   
    1cfc:	cc                   	int3   
    1cfd:	cc                   	int3   
    1cfe:	cc                   	int3   
    1cff:	7c 0c                	jl     1d0d <_binary_fonts_zap_ext_vga16_psf_start+0x1d0d>
    1d01:	cc                   	int3   
    1d02:	78 00                	js     1d04 <_binary_fonts_zap_ext_vga16_psf_start+0x1d04>
    1d04:	08 1c 36             	or     %bl,(%esi,%esi,1)
    1d07:	e0 60                	loopne 1d69 <_binary_fonts_zap_ext_vga16_psf_start+0x1d69>
    1d09:	6c                   	insb   (%dx),%es:(%edi)
    1d0a:	76 66                	jbe    1d72 <_binary_fonts_zap_ext_vga16_psf_start+0x1d72>
    1d0c:	66 66 66 e6 00       	data16 data16 data16 out %al,$0x0
    1d11:	00 00                	add    %al,(%eax)
    1d13:	00 00                	add    %al,(%eax)
    1d15:	00 76 dc             	add    %dh,-0x24(%esi)
    1d18:	00 38                	add    %bh,(%eax)
    1d1a:	18 18                	sbb    %bl,(%eax)
    1d1c:	18 18                	sbb    %bl,(%eax)
    1d1e:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
    1d21:	00 00                	add    %al,(%eax)
    1d23:	00 00                	add    %al,(%eax)
    1d25:	00 00                	add    %al,(%eax)
    1d27:	7e 00                	jle    1d29 <_binary_fonts_zap_ext_vga16_psf_start+0x1d29>
    1d29:	38 18                	cmp    %bl,(%eax)
    1d2b:	18 18                	sbb    %bl,(%eax)
    1d2d:	18 18                	sbb    %bl,(%eax)
    1d2f:	3c 00                	cmp    $0x0,%al
    1d31:	00 00                	add    %al,(%eax)
    1d33:	00 00                	add    %al,(%eax)
    1d35:	00 18                	add    %bl,(%eax)
    1d37:	18 00                	sbb    %al,(%eax)
    1d39:	38 18                	cmp    %bl,(%eax)
    1d3b:	18 18                	sbb    %bl,(%eax)
    1d3d:	18 18                	sbb    %bl,(%eax)
    1d3f:	3c 18                	cmp    $0x18,%al
    1d41:	30 1c 00             	xor    %bl,(%eax,%eax,1)
    1d44:	00 04 0e             	add    %al,(%esi,%ecx,1)
    1d47:	1b 00                	sbb    (%eax),%eax
    1d49:	0e                   	push   %cs
    1d4a:	06                   	push   %es
    1d4b:	06                   	push   %es
    1d4c:	06                   	push   %es
    1d4d:	06                   	push   %es
    1d4e:	06                   	push   %es
    1d4f:	06                   	push   %es
    1d50:	66 66 3c 00          	data16 data16 cmp $0x0,%al
    1d54:	00 00                	add    %al,(%eax)
    1d56:	e0 60                	loopne 1db8 <_binary_fonts_zap_ext_vga16_psf_start+0x1db8>
    1d58:	60                   	pusha  
    1d59:	66 6c                	data16 insb (%dx),%es:(%edi)
    1d5b:	78 78                	js     1dd5 <_binary_fonts_zap_ext_vga16_psf_start+0x1dd5>
    1d5d:	6c                   	insb   (%dx),%es:(%edi)
    1d5e:	66 e6 00             	data16 out %al,$0x0
    1d61:	18 18                	sbb    %bl,(%eax)
    1d63:	30 0c 18             	xor    %cl,(%eax,%ebx,1)
    1d66:	00 38                	add    %bh,(%eax)
    1d68:	18 18                	sbb    %bl,(%eax)
    1d6a:	18 18                	sbb    %bl,(%eax)
    1d6c:	18 18                	sbb    %bl,(%eax)
    1d6e:	18 3c 00             	sbb    %bh,(%eax,%eax,1)
    1d71:	00 00                	add    %al,(%eax)
    1d73:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1d77:	38 18                	cmp    %bl,(%eax)
    1d79:	18 18                	sbb    %bl,(%eax)
    1d7b:	18 18                	sbb    %bl,(%eax)
    1d7d:	18 18                	sbb    %bl,(%eax)
    1d7f:	3c 00                	cmp    $0x0,%al
    1d81:	00 00                	add    %al,(%eax)
    1d83:	00 00                	add    %al,(%eax)
    1d85:	00 38                	add    %bh,(%eax)
    1d87:	18 18                	sbb    %bl,(%eax)
    1d89:	18 18                	sbb    %bl,(%eax)
    1d8b:	18 18                	sbb    %bl,(%eax)
    1d8d:	18 18                	sbb    %bl,(%eax)
    1d8f:	3c 00                	cmp    $0x0,%al
    1d91:	18 18                	sbb    %bl,(%eax)
    1d93:	30 00                	xor    %al,(%eax)
    1d95:	00 38                	add    %bh,(%eax)
    1d97:	18 18                	sbb    %bl,(%eax)
    1d99:	18 1e                	sbb    %bl,(%esi)
    1d9b:	78 18                	js     1db5 <_binary_fonts_zap_ext_vga16_psf_start+0x1db5>
    1d9d:	18 18                	sbb    %bl,(%eax)
    1d9f:	3c 00                	cmp    $0x0,%al
    1da1:	00 00                	add    %al,(%eax)
    1da3:	00 00                	add    %al,(%eax)
    1da5:	00 18                	add    %bl,(%eax)
    1da7:	18 00                	sbb    %al,(%eax)
    1da9:	e6 ff                	out    %al,$0xff
    1dab:	db db                	fcmovnu %st(3),%st
    1dad:	db db                	fcmovnu %st(3),%st
    1daf:	db 00                	fildl  (%eax)
    1db1:	00 00                	add    %al,(%eax)
    1db3:	00 00                	add    %al,(%eax)
    1db5:	0c 18                	or     $0x18,%al
    1db7:	30 00                	xor    %al,(%eax)
    1db9:	dc 66 66             	fsubl  0x66(%esi)
    1dbc:	66 66 66 66 00 00    	data16 data16 data16 data16 add %al,(%eax)
    1dc2:	00 00                	add    %al,(%eax)
    1dc4:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1dc8:	00 dc                	add    %bl,%ah
    1dca:	66 66 66 66 66 66 00 	data16 data16 data16 data16 data16 data16 add %al,(%eax)
    1dd1:	00 
    1dd2:	00 00                	add    %al,(%eax)
    1dd4:	00 00                	add    %al,(%eax)
    1dd6:	00 00                	add    %al,(%eax)
    1dd8:	00 dc                	add    %bl,%ah
    1dda:	66 66 66 66 66 66 00 	data16 data16 data16 data16 data16 data16 add %bl,(%eax)
    1de1:	18 
    1de2:	18 30                	sbb    %dh,(%eax)
    1de4:	00 00                	add    %al,(%eax)
    1de6:	00 00                	add    %al,(%eax)
    1de8:	00 dc                	add    %bl,%ah
    1dea:	66 66 66 66 66 66 06 	data16 data16 data16 data16 data16 pushw %es
    1df1:	06                   	push   %es
    1df2:	1c 00                	sbb    $0x0,%al
    1df4:	00 00                	add    %al,(%eax)
    1df6:	00 7c 00 7c          	add    %bh,0x7c(%eax,%eax,1)
    1dfa:	c6 c6 c6             	mov    $0xc6,%dh
    1dfd:	c6 c6 7c             	mov    $0x7c,%dh
    1e00:	00 00                	add    %al,(%eax)
    1e02:	00 00                	add    %al,(%eax)
    1e04:	00 33                	add    %dh,(%ebx)
    1e06:	66 cc                	data16 int3 
    1e08:	00 7c c6 c6          	add    %bh,-0x3a(%esi,%eax,8)
    1e0c:	c6 c6 c6             	mov    $0xc6,%dh
    1e0f:	7c 00                	jl     1e11 <_binary_fonts_zap_ext_vga16_psf_start+0x1e11>
    1e11:	00 00                	add    %al,(%eax)
    1e13:	00 00                	add    %al,(%eax)
    1e15:	00 18                	add    %bl,(%eax)
    1e17:	18 00                	sbb    %al,(%eax)
    1e19:	dc 66 66             	fsubl  0x66(%esi)
    1e1c:	66 66 66 7c 60       	data16 data16 data16 jl 1e81 <_binary_fonts_zap_ext_vga16_psf_start+0x1e81>
    1e21:	60                   	pusha  
    1e22:	f0 00 00             	lock add %al,(%eax)
    1e25:	0c 18                	or     $0x18,%al
    1e27:	30 00                	xor    %al,(%eax)
    1e29:	dc 76 66             	fdivl  0x66(%esi)
    1e2c:	60                   	pusha  
    1e2d:	60                   	pusha  
    1e2e:	60                   	pusha  
    1e2f:	f0 00 00             	lock add %al,(%eax)
    1e32:	00 00                	add    %al,(%eax)
    1e34:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1e38:	00 dc                	add    %bl,%ah
    1e3a:	76 66                	jbe    1ea2 <_binary_fonts_zap_ext_vga16_psf_start+0x1ea2>
    1e3c:	60                   	pusha  
    1e3d:	60                   	pusha  
    1e3e:	60                   	pusha  
    1e3f:	f0 00 00             	lock add %al,(%eax)
    1e42:	00 00                	add    %al,(%eax)
    1e44:	00 00                	add    %al,(%eax)
    1e46:	00 00                	add    %al,(%eax)
    1e48:	00 dc                	add    %bl,%ah
    1e4a:	76 66                	jbe    1eb2 <_binary_fonts_zap_ext_vga16_psf_start+0x1eb2>
    1e4c:	60                   	pusha  
    1e4d:	60                   	pusha  
    1e4e:	60                   	pusha  
    1e4f:	f0 00 18             	lock add %bl,(%eax)
    1e52:	18 30                	sbb    %dh,(%eax)
    1e54:	00 0c 18             	add    %cl,(%eax,%ebx,1)
    1e57:	30 00                	xor    %al,(%eax)
    1e59:	7c c6                	jl     1e21 <_binary_fonts_zap_ext_vga16_psf_start+0x1e21>
    1e5b:	60                   	pusha  
    1e5c:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
    1e5f:	7c 00                	jl     1e61 <_binary_fonts_zap_ext_vga16_psf_start+0x1e61>
    1e61:	00 00                	add    %al,(%eax)
    1e63:	00 00                	add    %al,(%eax)
    1e65:	10 38                	adc    %bh,(%eax)
    1e67:	6c                   	insb   (%dx),%es:(%edi)
    1e68:	00 7c c6 60          	add    %bh,0x60(%esi,%eax,8)
    1e6c:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
    1e6f:	7c 00                	jl     1e71 <_binary_fonts_zap_ext_vga16_psf_start+0x1e71>
    1e71:	00 00                	add    %al,(%eax)
    1e73:	00 00                	add    %al,(%eax)
    1e75:	00 30                	add    %dh,(%eax)
    1e77:	30 00                	xor    %al,(%eax)
    1e79:	7c c6                	jl     1e41 <_binary_fonts_zap_ext_vga16_psf_start+0x1e41>
    1e7b:	60                   	pusha  
    1e7c:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
    1e7f:	7c 00                	jl     1e81 <_binary_fonts_zap_ext_vga16_psf_start+0x1e81>
	...
    1e89:	7c c6                	jl     1e51 <_binary_fonts_zap_ext_vga16_psf_start+0x1e51>
    1e8b:	60                   	pusha  
    1e8c:	38 0c c6             	cmp    %cl,(%esi,%eax,8)
    1e8f:	7c 00                	jl     1e91 <_binary_fonts_zap_ext_vga16_psf_start+0x1e91>
    1e91:	18 18                	sbb    %bl,(%eax)
    1e93:	30 00                	xor    %al,(%eax)
    1e95:	06                   	push   %es
    1e96:	16                   	push   %ss
    1e97:	30 30                	xor    %dh,(%eax)
    1e99:	fc                   	cld    
    1e9a:	30 30                	xor    %dh,(%eax)
    1e9c:	30 30                	xor    %dh,(%eax)
    1e9e:	36 1c 00             	ss sbb $0x0,%al
    1ea1:	00 00                	add    %al,(%eax)
    1ea3:	00 6c 38 10          	add    %ch,0x10(%eax,%edi,1)
    1ea7:	10 30                	adc    %dh,(%eax)
    1ea9:	fc                   	cld    
    1eaa:	30 30                	xor    %dh,(%eax)
    1eac:	30 30                	xor    %dh,(%eax)
    1eae:	36 1c 00             	ss sbb $0x0,%al
    1eb1:	00 00                	add    %al,(%eax)
    1eb3:	00 00                	add    %al,(%eax)
    1eb5:	00 10                	add    %dl,(%eax)
    1eb7:	30 30                	xor    %dh,(%eax)
    1eb9:	fc                   	cld    
    1eba:	30 30                	xor    %dh,(%eax)
    1ebc:	30 30                	xor    %dh,(%eax)
    1ebe:	36 1c 00             	ss sbb $0x0,%al
    1ec1:	18 18                	sbb    %bl,(%eax)
    1ec3:	30 00                	xor    %al,(%eax)
    1ec5:	00 10                	add    %dl,(%eax)
    1ec7:	30 30                	xor    %dh,(%eax)
    1ec9:	fc                   	cld    
    1eca:	30 30                	xor    %dh,(%eax)
    1ecc:	30 30                	xor    %dh,(%eax)
    1ece:	36 1c 18             	ss sbb $0x18,%al
    1ed1:	0c 38                	or     $0x38,%al
    1ed3:	00 00                	add    %al,(%eax)
    1ed5:	00 10                	add    %dl,(%eax)
    1ed7:	30 30                	xor    %dh,(%eax)
    1ed9:	fe                   	(bad)  
    1eda:	30 fc                	xor    %bh,%ah
    1edc:	30 30                	xor    %dh,(%eax)
    1ede:	36 1c 00             	ss sbb $0x0,%al
    1ee1:	00 00                	add    %al,(%eax)
    1ee3:	00 00                	add    %al,(%eax)
    1ee5:	00 76 dc             	add    %dh,-0x24(%esi)
    1ee8:	00 cc                	add    %cl,%ah
    1eea:	cc                   	int3   
    1eeb:	cc                   	int3   
    1eec:	cc                   	int3   
    1eed:	cc                   	int3   
    1eee:	cc                   	int3   
    1eef:	76 00                	jbe    1ef1 <_binary_fonts_zap_ext_vga16_psf_start+0x1ef1>
    1ef1:	00 00                	add    %al,(%eax)
    1ef3:	00 00                	add    %al,(%eax)
    1ef5:	00 00                	add    %al,(%eax)
    1ef7:	7c 00                	jl     1ef9 <_binary_fonts_zap_ext_vga16_psf_start+0x1ef9>
    1ef9:	cc                   	int3   
    1efa:	cc                   	int3   
    1efb:	cc                   	int3   
    1efc:	cc                   	int3   
    1efd:	cc                   	int3   
    1efe:	cc                   	int3   
    1eff:	76 00                	jbe    1f01 <_binary_fonts_zap_ext_vga16_psf_start+0x1f01>
    1f01:	00 00                	add    %al,(%eax)
    1f03:	00 00                	add    %al,(%eax)
    1f05:	00 6c 38 00          	add    %ch,0x0(%eax,%edi,1)
    1f09:	cc                   	int3   
    1f0a:	cc                   	int3   
    1f0b:	cc                   	int3   
    1f0c:	cc                   	int3   
    1f0d:	cc                   	int3   
    1f0e:	cc                   	int3   
    1f0f:	76 00                	jbe    1f11 <_binary_fonts_zap_ext_vga16_psf_start+0x1f11>
    1f11:	00 00                	add    %al,(%eax)
    1f13:	00 00                	add    %al,(%eax)
    1f15:	38 6c 38 00          	cmp    %ch,0x0(%eax,%edi,1)
    1f19:	cc                   	int3   
    1f1a:	cc                   	int3   
    1f1b:	cc                   	int3   
    1f1c:	cc                   	int3   
    1f1d:	cc                   	int3   
    1f1e:	cc                   	int3   
    1f1f:	76 00                	jbe    1f21 <_binary_fonts_zap_ext_vga16_psf_start+0x1f21>
    1f21:	00 00                	add    %al,(%eax)
    1f23:	00 00                	add    %al,(%eax)
    1f25:	33 66 cc             	xor    -0x34(%esi),%esp
    1f28:	00 cc                	add    %cl,%ah
    1f2a:	cc                   	int3   
    1f2b:	cc                   	int3   
    1f2c:	cc                   	int3   
    1f2d:	cc                   	int3   
    1f2e:	cc                   	int3   
    1f2f:	76 00                	jbe    1f31 <_binary_fonts_zap_ext_vga16_psf_start+0x1f31>
	...
    1f39:	cc                   	int3   
    1f3a:	cc                   	int3   
    1f3b:	cc                   	int3   
    1f3c:	cc                   	int3   
    1f3d:	cc                   	int3   
    1f3e:	cc                   	int3   
    1f3f:	76 30                	jbe    1f71 <_binary_fonts_zap_ext_vga16_psf_start+0x1f71>
    1f41:	60                   	pusha  
    1f42:	38 00                	cmp    %al,(%eax)
    1f44:	00 30                	add    %dh,(%eax)
    1f46:	18 0c 00             	sbb    %cl,(%eax,%eax,1)
    1f49:	c3                   	ret    
    1f4a:	c3                   	ret    
    1f4b:	c3                   	ret    
    1f4c:	db db                	fcmovnu %st(3),%st
    1f4e:	ff 66 00             	jmp    *0x0(%esi)
    1f51:	00 00                	add    %al,(%eax)
    1f53:	00 00                	add    %al,(%eax)
    1f55:	0c 18                	or     $0x18,%al
    1f57:	30 00                	xor    %al,(%eax)
    1f59:	c3                   	ret    
    1f5a:	c3                   	ret    
    1f5b:	c3                   	ret    
    1f5c:	db db                	fcmovnu %st(3),%st
    1f5e:	ff 66 00             	jmp    *0x0(%esi)
    1f61:	00 00                	add    %al,(%eax)
    1f63:	00 00                	add    %al,(%eax)
    1f65:	10 38                	adc    %bh,(%eax)
    1f67:	6c                   	insb   (%dx),%es:(%edi)
    1f68:	00 c3                	add    %al,%bl
    1f6a:	c3                   	ret    
    1f6b:	c3                   	ret    
    1f6c:	db db                	fcmovnu %st(3),%st
    1f6e:	ff 66 00             	jmp    *0x0(%esi)
    1f71:	00 00                	add    %al,(%eax)
    1f73:	00 00                	add    %al,(%eax)
    1f75:	00 66 66             	add    %ah,0x66(%esi)
    1f78:	00 c3                	add    %al,%bl
    1f7a:	c3                   	ret    
    1f7b:	c3                   	ret    
    1f7c:	db db                	fcmovnu %st(3),%st
    1f7e:	ff 66 00             	jmp    *0x0(%esi)
    1f81:	00 00                	add    %al,(%eax)
    1f83:	00 00                	add    %al,(%eax)
    1f85:	30 18                	xor    %bl,(%eax)
    1f87:	0c 00                	or     $0x0,%al
    1f89:	c6 c6 c6             	mov    $0xc6,%dh
    1f8c:	c6 c6 c6             	mov    $0xc6,%dh
    1f8f:	7e 06                	jle    1f97 <_binary_fonts_zap_ext_vga16_psf_start+0x1f97>
    1f91:	0c f8                	or     $0xf8,%al
    1f93:	00 00                	add    %al,(%eax)
    1f95:	10 38                	adc    %bh,(%eax)
    1f97:	6c                   	insb   (%dx),%es:(%edi)
    1f98:	00 c6                	add    %al,%dh
    1f9a:	c6 c6 c6             	mov    $0xc6,%dh
    1f9d:	c6 c6 7e             	mov    $0x7e,%dh
    1fa0:	06                   	push   %es
    1fa1:	0c f8                	or     $0xf8,%al
    1fa3:	00 00                	add    %al,(%eax)
    1fa5:	0c 18                	or     $0x18,%al
    1fa7:	30 00                	xor    %al,(%eax)
    1fa9:	fe cc                	dec    %ah
    1fab:	18 30                	sbb    %dh,(%eax)
    1fad:	60                   	pusha  
    1fae:	c6                   	(bad)  
    1faf:	fe 00                	incb   (%eax)
    1fb1:	00 00                	add    %al,(%eax)
    1fb3:	00 00                	add    %al,(%eax)
    1fb5:	00 18                	add    %bl,(%eax)
    1fb7:	18 00                	sbb    %al,(%eax)
    1fb9:	fe cc                	dec    %ah
    1fbb:	18 30                	sbb    %dh,(%eax)
    1fbd:	60                   	pusha  
    1fbe:	c6                   	(bad)  
    1fbf:	fe 00                	incb   (%eax)
    1fc1:	00 00                	add    %al,(%eax)
    1fc3:	00 00                	add    %al,(%eax)
    1fc5:	00 6c 38 00          	add    %ch,0x0(%eax,%edi,1)
	...
    1fd5:	00 18                	add    %bl,(%eax)
    1fd7:	18 00                	sbb    %al,(%eax)
	...
    1fe5:	6c                   	insb   (%dx),%es:(%edi)
    1fe6:	38 10                	cmp    %dl,(%eax)
	...
    2000:	18 30                	sbb    %dh,(%eax)
    2002:	1c 00                	sbb    $0x0,%al
    2004:	fd                   	std    
    2005:	ff                   	(bad)  
    2006:	ff                   	(bad)  
    2007:	ff c0                	inc    %eax
    2009:	03 ff                	add    %edi,%edi
    200b:	ff 60 22             	jmp    *0x22(%eax)
    200e:	ff                   	(bad)  
    200f:	ff 64 22 ff          	jmp    *-0x1(%edx,%eiz,1)
    2013:	ff 65 22             	jmp    *0x22(%ebp)
    2016:	ff                   	(bad)  
    2017:	ff a0 25 ac 25 ae    	jmp    *-0x51da53db(%eax)
    201d:	25 fc 25 fe 25       	and    $0x25fe25fc,%eax
    2022:	1b 2b                	sbb    (%ebx),%ebp
    2024:	0e                   	push   %cs
    2025:	22 ff                	and    %bh,%bh
    2027:	ff c6                	inc    %esi
    2029:	25 66 26 25 2b       	and    $0x2b252666,%eax
    202e:	27                   	daa    
    202f:	2b ff                	sub    %edi,%edi
    2031:	ff                   	(bad)  
    2032:	bc 00 ff ff bd       	mov    $0xbdffff00,%esp
    2037:	00 ff                	add    %bh,%bh
    2039:	ff                   	(bad)  
    203a:	be 00 ff ff a6       	mov    $0xa6ffff00,%esi
    203f:	00 ff                	add    %bh,%bh
    2041:	ff a8 00 ff ff b8    	ljmp   *-0x47000100(%eax)
    2047:	00 ff                	add    %bh,%bh
    2049:	ff 92 01 ff ff 20    	call   *0x20ffff01(%edx)
    204f:	20 ff                	and    %bh,%bh
    2051:	ff 21                	jmp    *(%ecx)
    2053:	20 ff                	and    %bh,%bh
    2055:	ff 30                	pushl  (%eax)
    2057:	20 ff                	and    %bh,%bh
    2059:	ff 22                	jmp    *(%edx)
    205b:	21 ff                	and    %edi,%edi
    205d:	ff 26                	jmp    *(%esi)
    205f:	20 ff                	and    %bh,%bh
    2061:	ff                   	(bad)  
    2062:	39 20                	cmp    %esp,(%eax)
    2064:	ff                   	(bad)  
    2065:	ff                   	(bad)  
    2066:	3a 20                	cmp    (%eax),%ah
    2068:	ff                   	(bad)  
    2069:	ff 1c 20             	lcall  *(%eax,%eiz,1)
    206c:	1f                   	pop    %ds
    206d:	20 ff                	and    %bh,%bh
    206f:	ff 1d 20 ee 02 ff    	lcall  *0xff02ee20
    2075:	ff 1e                	lcall  *(%esi)
    2077:	20 ff                	and    %bh,%bh
    2079:	ff 42 2e             	incl   0x2e(%edx)
    207c:	ff                   	(bad)  
    207d:	ff 41 2e             	incl   0x2e(%ecx)
    2080:	ce                   	into   
    2081:	02 ff                	add    %bh,%bh
    2083:	ff 1e                	lcall  *(%esi)
    2085:	01 ff                	add    %edi,%edi
    2087:	ff 1f                	lcall  *(%edi)
    2089:	01 ff                	add    %edi,%edi
    208b:	ff 30                	pushl  (%eax)
    208d:	01 ff                	add    %edi,%edi
    208f:	ff 31                	pushl  (%ecx)
    2091:	01 ff                	add    %edi,%edi
    2093:	ff 5e 01             	lcall  *0x1(%esi)
    2096:	ff                   	(bad)  
    2097:	ff 5f 01             	lcall  *0x1(%edi)
    209a:	ff                   	(bad)  
    209b:	ff 20                	jmp    *(%eax)
    209d:	00 a0 00 00 20 01    	add    %ah,0x1200000(%eax)
    20a3:	20 02                	and    %al,(%edx)
    20a5:	20 03                	and    %al,(%ebx)
    20a7:	20 04 20             	and    %al,(%eax,%eiz,1)
    20aa:	05 20 06 20 07       	add    $0x7200620,%eax
    20af:	20 08                	and    %cl,(%eax)
    20b1:	20 09                	and    %cl,(%ecx)
    20b3:	20 0a                	and    %cl,(%edx)
    20b5:	20 2f                	and    %ch,(%edi)
    20b7:	20 5f 20             	and    %bl,0x20(%edi)
    20ba:	ff                   	(bad)  
    20bb:	ff 21                	jmp    *(%ecx)
    20bd:	00 ff                	add    %bh,%bh
    20bf:	ff 22                	jmp    *(%edx)
    20c1:	00 ff                	add    %bh,%bh
    20c3:	ff 23                	jmp    *(%ebx)
    20c5:	00 ff                	add    %bh,%bh
    20c7:	ff 24 00             	jmp    *(%eax,%eax,1)
    20ca:	ff                   	(bad)  
    20cb:	ff 25 00 ff ff 26    	jmp    *0x26ffff00
    20d1:	00 ff                	add    %bh,%bh
    20d3:	ff 27                	jmp    *(%edi)
    20d5:	00 bc 02 ff ff 28 00 	add    %bh,0x28ffff(%edx,%eax,1)
    20dc:	ff                   	(bad)  
    20dd:	ff 29                	ljmp   *(%ecx)
    20df:	00 ff                	add    %bh,%bh
    20e1:	ff 2a                	ljmp   *(%edx)
    20e3:	00 4e 20             	add    %cl,0x20(%esi)
    20e6:	17                   	pop    %ss
    20e7:	22 ff                	and    %bh,%bh
    20e9:	ff 2b                	ljmp   *(%ebx)
    20eb:	00 ff                	add    %bh,%bh
    20ed:	ff 2c 00             	ljmp   *(%eax,%eax,1)
    20f0:	cf                   	iret   
    20f1:	02 75 03             	add    0x3(%ebp),%dh
    20f4:	1a 20                	sbb    (%eax),%ah
    20f6:	ff                   	(bad)  
    20f7:	ff 2d 00 ad 00 10    	ljmp   *0x1000ad00
    20fd:	20 11                	and    %dl,(%ecx)
    20ff:	20 12                	and    %dl,(%edx)
    2101:	20 13                	and    %dl,(%ebx)
    2103:	20 43 20             	and    %al,0x20(%ebx)
    2106:	12 22                	adc    (%edx),%ah
    2108:	ff                   	(bad)  
    2109:	ff 2e                	ljmp   *(%esi)
    210b:	00 24 20             	add    %ah,(%eax,%eiz,1)
    210e:	ff                   	(bad)  
    210f:	ff 2f                	ljmp   *(%edi)
    2111:	00 44 20 15          	add    %al,0x15(%eax,%eiz,1)
    2115:	22 ff                	and    %bh,%bh
    2117:	ff 30                	pushl  (%eax)
    2119:	00 ff                	add    %bh,%bh
    211b:	ff 31                	pushl  (%ecx)
    211d:	00 ff                	add    %bh,%bh
    211f:	ff 32                	pushl  (%edx)
    2121:	00 ff                	add    %bh,%bh
    2123:	ff 33                	pushl  (%ebx)
    2125:	00 ff                	add    %bh,%bh
    2127:	ff 34 00             	pushl  (%eax,%eax,1)
    212a:	ff                   	(bad)  
    212b:	ff 35 00 ff ff 36    	pushl  0x36ffff00
    2131:	00 ff                	add    %bh,%bh
    2133:	ff 37                	pushl  (%edi)
    2135:	00 ff                	add    %bh,%bh
    2137:	ff                   	(bad)  
    2138:	38 00                	cmp    %al,(%eax)
    213a:	ff                   	(bad)  
    213b:	ff                   	(bad)  
    213c:	39 00                	cmp    %eax,(%eax)
    213e:	ff                   	(bad)  
    213f:	ff                   	(bad)  
    2140:	3a 00                	cmp    (%eax),%al
    2142:	36 22 ff             	ss and %bh,%bh
    2145:	ff                   	(bad)  
    2146:	3b 00                	cmp    (%eax),%eax
    2148:	ff                   	(bad)  
    2149:	ff                   	(bad)  
    214a:	3c 00                	cmp    $0x0,%al
    214c:	ff                   	(bad)  
    214d:	ff                   	(bad)  
    214e:	3d 00 40 2e ff       	cmp    $0xff2e4000,%eax
    2153:	ff                   	(bad)  
    2154:	3e 00 ff             	ds add %bh,%bh
    2157:	ff                   	(bad)  
    2158:	3f                   	aas    
    2159:	00 ff                	add    %bh,%bh
    215b:	ff 40 00             	incl   0x0(%eax)
    215e:	ff                   	(bad)  
    215f:	ff 41 00             	incl   0x0(%ecx)
    2162:	10 04 91             	adc    %al,(%ecx,%edx,4)
    2165:	03 ff                	add    %edi,%edi
    2167:	ff 42 00             	incl   0x0(%edx)
    216a:	12 04 92             	adc    (%edx,%edx,4),%al
    216d:	03 ff                	add    %edi,%edi
    216f:	ff 43 00             	incl   0x0(%ebx)
    2172:	21 04 f9             	and    %eax,(%ecx,%edi,8)
    2175:	03 ff                	add    %edi,%edi
    2177:	ff 44 00 ff          	incl   -0x1(%eax,%eax,1)
    217b:	ff 45 00             	incl   0x0(%ebp)
    217e:	15 04 95 03 ff       	adc    $0xff039504,%eax
    2183:	ff 46 00             	incl   0x0(%esi)
    2186:	ff                   	(bad)  
    2187:	ff 47 00             	incl   0x0(%edi)
    218a:	ff                   	(bad)  
    218b:	ff 48 00             	decl   0x0(%eax)
    218e:	1d 04 97 03 ff       	sbb    $0xff039704,%eax
    2193:	ff 49 00             	decl   0x0(%ecx)
    2196:	06                   	push   %es
    2197:	04 c0                	add    $0xc0,%al
    2199:	04 cf                	add    $0xcf,%al
    219b:	04 99                	add    $0x99,%al
    219d:	03 ff                	add    %edi,%edi
    219f:	ff 4a 00             	decl   0x0(%edx)
    21a2:	08 04 7f             	or     %al,(%edi,%edi,2)
    21a5:	03 ff                	add    %edi,%edi
    21a7:	ff 4b 00             	decl   0x0(%ebx)
    21aa:	1a 04 9a             	sbb    (%edx,%ebx,4),%al
    21ad:	03 2a                	add    (%edx),%ebp
    21af:	21 ff                	and    %edi,%edi
    21b1:	ff 4c 00 ff          	decl   -0x1(%eax,%eax,1)
    21b5:	ff 4d 00             	decl   0x0(%ebp)
    21b8:	1c 04                	sbb    $0x4,%al
    21ba:	9c                   	pushf  
    21bb:	03 fa                	add    %edx,%edi
    21bd:	03 ff                	add    %edi,%edi
    21bf:	ff 4e 00             	decl   0x0(%esi)
    21c2:	9d                   	popf   
    21c3:	03 ff                	add    %edi,%edi
    21c5:	ff 4f 00             	decl   0x0(%edi)
    21c8:	1e                   	push   %ds
    21c9:	04 9f                	add    $0x9f,%al
    21cb:	03 ff                	add    %edi,%edi
    21cd:	ff 50 00             	call   *0x0(%eax)
    21d0:	20 04 a1             	and    %al,(%ecx,%eiz,4)
    21d3:	03 ff                	add    %edi,%edi
    21d5:	ff 51 00             	call   *0x0(%ecx)
    21d8:	1a 05 ff ff 52 00    	sbb    0x52ffff,%al
    21de:	ff                   	(bad)  
    21df:	ff 53 00             	call   *0x0(%ebx)
    21e2:	05 04 ff ff 54       	add    $0x54ffff04,%eax
    21e7:	00 22                	add    %ah,(%edx)
    21e9:	04 a4                	add    $0xa4,%al
    21eb:	03 ff                	add    %edi,%edi
    21ed:	ff 55 00             	call   *0x0(%ebp)
    21f0:	ff                   	(bad)  
    21f1:	ff 56 00             	call   *0x0(%esi)
    21f4:	ff                   	(bad)  
    21f5:	ff 57 00             	call   *0x0(%edi)
    21f8:	1c 05                	sbb    $0x5,%al
    21fa:	ff                   	(bad)  
    21fb:	ff 58 00             	lcall  *0x0(%eax)
    21fe:	25 04 a7 03 ff       	and    $0xff03a704,%eax
    2203:	ff 59 00             	lcall  *0x0(%ecx)
    2206:	ae                   	scas   %es:(%edi),%al
    2207:	04 a5                	add    $0xa5,%al
    2209:	03 ff                	add    %edi,%edi
    220b:	ff 5a 00             	lcall  *0x0(%edx)
    220e:	96                   	xchg   %eax,%esi
    220f:	03 ff                	add    %edi,%edi
    2211:	ff 5b 00             	lcall  *0x0(%ebx)
    2214:	ff                   	(bad)  
    2215:	ff 5c 00 f5          	lcall  *-0xb(%eax,%eax,1)
    2219:	29 ff                	sub    %edi,%edi
    221b:	ff 5d 00             	lcall  *0x0(%ebp)
    221e:	ff                   	(bad)  
    221f:	ff 5e 00             	lcall  *0x0(%esi)
    2222:	c4 02                	les    (%edx),%eax
    2224:	c6 02 03             	movb   $0x3,(%edx)
    2227:	23 ff                	and    %edi,%edi
    2229:	ff 5f 00             	lcall  *0x0(%edi)
    222c:	ff                   	(bad)  
    222d:	ff 60 00             	jmp    *0x0(%eax)
    2230:	cb                   	lret   
    2231:	02 ef                	add    %bh,%ch
    2233:	1f                   	pop    %ds
    2234:	35 20 ff ff 61       	xor    $0x61ffff20,%eax
    2239:	00 30                	add    %dh,(%eax)
    223b:	04 ff                	add    $0xff,%al
    223d:	ff 62 00             	jmp    *0x0(%edx)
    2240:	ff                   	(bad)  
    2241:	ff 63 00             	jmp    *0x0(%ebx)
    2244:	41                   	inc    %ecx
    2245:	04 f2                	add    $0xf2,%al
    2247:	03 ff                	add    %edi,%edi
    2249:	ff 64 00 ff          	jmp    *-0x1(%eax,%eax,1)
    224d:	ff 65 00             	jmp    *0x0(%ebp)
    2250:	35 04 ff ff 66       	xor    $0x66ffff04,%eax
    2255:	00 ff                	add    %bh,%bh
    2257:	ff 67 00             	jmp    *0x0(%edi)
    225a:	ff                   	(bad)  
    225b:	ff 68 00             	ljmp   *0x0(%eax)
    225e:	ff                   	(bad)  
    225f:	ff 69 00             	ljmp   *0x0(%ecx)
    2262:	56                   	push   %esi
    2263:	04 ff                	add    $0xff,%al
    2265:	ff 6a 00             	ljmp   *0x0(%edx)
    2268:	58                   	pop    %eax
    2269:	04 f3                	add    $0xf3,%al
    226b:	03 ff                	add    %edi,%edi
    226d:	ff 6b 00             	ljmp   *0x0(%ebx)
    2270:	ff                   	(bad)  
    2271:	ff 6c 00 ff          	ljmp   *-0x1(%eax,%eax,1)
    2275:	ff 6d 00             	ljmp   *0x0(%ebp)
    2278:	ff                   	(bad)  
    2279:	ff 6e 00             	ljmp   *0x0(%esi)
    227c:	ff                   	(bad)  
    227d:	ff 6f 00             	ljmp   *0x0(%edi)
    2280:	3e 04 bf             	ds add $0xbf,%al
    2283:	03 ff                	add    %edi,%edi
    2285:	ff 70 00             	pushl  0x0(%eax)
    2288:	40                   	inc    %eax
    2289:	04 ff                	add    $0xff,%al
    228b:	ff 71 00             	pushl  0x0(%ecx)
    228e:	1b 05 ff ff 72 00    	sbb    0x72ffff,%eax
    2294:	ff                   	(bad)  
    2295:	ff 73 00             	pushl  0x0(%ebx)
    2298:	55                   	push   %ebp
    2299:	04 ff                	add    $0xff,%al
    229b:	ff 74 00 ff          	pushl  -0x1(%eax,%eax,1)
    229f:	ff 75 00             	pushl  0x0(%ebp)
    22a2:	ff                   	(bad)  
    22a3:	ff 76 00             	pushl  0x0(%esi)
    22a6:	ff                   	(bad)  
    22a7:	ff 77 00             	pushl  0x0(%edi)
    22aa:	1d 05 ff ff 78       	sbb    $0x78ffff05,%eax
    22af:	00 45 04             	add    %al,0x4(%ebp)
    22b2:	ff                   	(bad)  
    22b3:	ff                   	(bad)  
    22b4:	79 00                	jns    22b6 <_binary_fonts_zap_ext_vga16_psf_start+0x22b6>
    22b6:	43                   	inc    %ebx
    22b7:	04 ff                	add    $0xff,%al
    22b9:	ff                   	(bad)  
    22ba:	7a 00                	jp     22bc <_binary_fonts_zap_ext_vga16_psf_start+0x22bc>
    22bc:	ff                   	(bad)  
    22bd:	ff                   	(bad)  
    22be:	7b 00                	jnp    22c0 <_binary_fonts_zap_ext_vga16_psf_start+0x22c0>
    22c0:	ff                   	(bad)  
    22c1:	ff                   	(bad)  
    22c2:	7c 00                	jl     22c4 <_binary_fonts_zap_ext_vga16_psf_start+0x22c4>
    22c4:	23 22                	and    (%edx),%esp
    22c6:	ff                   	(bad)  
    22c7:	ff                   	(bad)  
    22c8:	7d 00                	jge    22ca <_binary_fonts_zap_ext_vga16_psf_start+0x22ca>
    22ca:	ff                   	(bad)  
    22cb:	ff                   	(bad)  
    22cc:	7e 00                	jle    22ce <_binary_fonts_zap_ext_vga16_psf_start+0x22ce>
    22ce:	dc 02                	faddl  (%edx)
    22d0:	c0 1f ff             	rcrb   $0xff,(%edi)
    22d3:	ff 22                	jmp    *(%edx)
    22d5:	20 19                	and    %bl,(%ecx)
    22d7:	22 cf                	and    %bh,%cl
    22d9:	25 ff ff c0 00       	and    $0xc0ffff,%eax
    22de:	ff                   	(bad)  
    22df:	ff c1                	inc    %ecx
    22e1:	00 ff                	add    %bh,%bh
    22e3:	ff c2                	inc    %edx
    22e5:	00 ff                	add    %bh,%bh
    22e7:	ff c3                	inc    %ebx
    22e9:	00 ff                	add    %bh,%bh
    22eb:	ff c4                	inc    %esp
    22ed:	00 d2                	add    %dl,%dl
    22ef:	04 ff                	add    $0xff,%al
    22f1:	ff c5                	inc    %ebp
    22f3:	00 2b                	add    %ch,(%ebx)
    22f5:	21 ff                	and    %edi,%edi
    22f7:	ff c6                	inc    %esi
    22f9:	00 d4                	add    %dl,%ah
    22fb:	04 ff                	add    $0xff,%al
    22fd:	ff c7                	inc    %edi
    22ff:	00 ff                	add    %bh,%bh
    2301:	ff c8                	dec    %eax
    2303:	00 00                	add    %al,(%eax)
    2305:	04 ff                	add    $0xff,%al
    2307:	ff c9                	dec    %ecx
    2309:	00 ff                	add    %bh,%bh
    230b:	ff ca                	dec    %edx
    230d:	00 ff                	add    %bh,%bh
    230f:	ff cb                	dec    %ebx
    2311:	00 01                	add    %al,(%ecx)
    2313:	04 ff                	add    $0xff,%al
    2315:	ff cc                	dec    %esp
    2317:	00 ff                	add    %bh,%bh
    2319:	ff cd                	dec    %ebp
    231b:	00 ff                	add    %bh,%bh
    231d:	ff ce                	dec    %esi
    231f:	00 ff                	add    %bh,%bh
    2321:	ff cf                	dec    %edi
    2323:	00 07                	add    %al,(%edi)
    2325:	04 aa                	add    $0xaa,%al
    2327:	03 ff                	add    %edi,%edi
    2329:	ff d0                	call   *%eax
    232b:	00 10                	add    %dl,(%eax)
    232d:	01 ff                	add    %edi,%edi
    232f:	ff d1                	call   *%ecx
    2331:	00 ff                	add    %bh,%bh
    2333:	ff d2                	call   *%edx
    2335:	00 ff                	add    %bh,%bh
    2337:	ff d3                	call   *%ebx
    2339:	00 ff                	add    %bh,%bh
    233b:	ff d4                	call   *%esp
    233d:	00 ff                	add    %bh,%bh
    233f:	ff d5                	call   *%ebp
    2341:	00 ff                	add    %bh,%bh
    2343:	ff d6                	call   *%esi
    2345:	00 e6                	add    %ah,%dh
    2347:	04 ff                	add    $0xff,%al
    2349:	ff d7                	call   *%edi
    234b:	00 ff                	add    %bh,%bh
    234d:	ff                   	(bad)  
    234e:	d8 00                	fadds  (%eax)
    2350:	ff                   	(bad)  
    2351:	ff                   	(bad)  
    2352:	d9 00                	flds   (%eax)
    2354:	ff                   	(bad)  
    2355:	ff                   	(bad)  
    2356:	da 00                	fiaddl (%eax)
    2358:	ff                   	(bad)  
    2359:	ff                   	(bad)  
    235a:	db 00                	fildl  (%eax)
    235c:	ff                   	(bad)  
    235d:	ff                   	(bad)  
    235e:	dc 00                	faddl  (%eax)
    2360:	ff                   	(bad)  
    2361:	ff                   	(bad)  
    2362:	dd 00                	fldl   (%eax)
    2364:	ff                   	(bad)  
    2365:	ff                   	(bad)  
    2366:	de 00                	fiadds (%eax)
    2368:	f7 03 ff ff df 00    	testl  $0xdfffff,(%ebx)
    236e:	ff                   	(bad)  
    236f:	ff 92 25 ff ff a1    	call   *-0x5e0000db(%edx)
    2375:	00 ff                	add    %bh,%bh
    2377:	ff a2 00 ff ff a3    	jmp    *-0x5c000100(%edx)
    237d:	00 ff                	add    %bh,%bh
    237f:	ff ac 20 ff ff a5 00 	ljmp   *0xa5ffff(%eax,%eiz,1)
    2386:	ff                   	(bad)  
    2387:	ff 60 01             	jmp    *0x1(%eax)
    238a:	ff                   	(bad)  
    238b:	ff a7 00 ff ff 61    	jmp    *0x61ffff00(%edi)
    2391:	01 ff                	add    %edi,%edi
    2393:	ff a9 00 ff ff aa    	ljmp   *-0x55000100(%ecx)
    2399:	00 ff                	add    %bh,%bh
    239b:	ff ab 00 ff ff ac    	ljmp   *-0x53000100(%ebx)
    23a1:	00 ff                	add    %bh,%bh
    23a3:	ff a4 00 ff ff ae 00 	jmp    *0xaeffff(%eax,%eax,1)
    23aa:	ff                   	(bad)  
    23ab:	ff af 00 c9 02 ff    	ljmp   *-0xfd3700(%edi)
    23b1:	ff b0 00 da 02 ff    	pushl  -0xfd2600(%eax)
    23b7:	ff b1 00 ff ff b2    	pushl  -0x4d000100(%ecx)
    23bd:	00 ff                	add    %bh,%bh
    23bf:	ff b3 00 ff ff 7d    	pushl  0x7dffff00(%ebx)
    23c5:	01 ff                	add    %edi,%edi
    23c7:	ff b5 00 bc 03 ff    	pushl  -0xfc4400(%ebp)
    23cd:	ff b6 00 ff ff b7    	pushl  -0x48000100(%esi)
    23d3:	00 87 03 27 20 c5    	add    %al,-0x3adfd8fd(%edi)
    23d9:	22 31                	and    (%ecx),%dh
    23db:	2e ff                	cs (bad) 
    23dd:	ff                   	(bad)  
    23de:	7e 01                	jle    23e1 <_binary_fonts_zap_ext_vga16_psf_start+0x23e1>
    23e0:	ff                   	(bad)  
    23e1:	ff                   	(bad)  
    23e2:	b9 00 ff ff ba       	mov    $0xbaffff00,%ecx
    23e7:	00 ff                	add    %bh,%bh
    23e9:	ff                   	(bad)  
    23ea:	bb 00 ff ff 52       	mov    $0x52ffff00,%ebx
    23ef:	01 ff                	add    %edi,%edi
    23f1:	ff 53 01             	call   *0x1(%ebx)
    23f4:	ff                   	(bad)  
    23f5:	ff                   	(bad)  
    23f6:	78 01                	js     23f9 <_binary_fonts_zap_ext_vga16_psf_start+0x23f9>
    23f8:	ab                   	stos   %eax,%es:(%edi)
    23f9:	03 ff                	add    %edi,%edi
    23fb:	ff                   	(bad)  
    23fc:	bf 00 ff ff 00       	mov    $0xffff00,%edi
    2401:	25 14 20 15 20       	and    $0x20152014,%eax
    2406:	af                   	scas   %es:(%edi),%eax
    2407:	23 ff                	and    %edi,%edi
    2409:	ff 02                	incl   (%edx)
    240b:	25 ff ff 0c 25       	and    $0x250cffff,%eax
    2410:	6d                   	insl   (%dx),%es:(%edi)
    2411:	25 ff ff 10 25       	and    $0x2510ffff,%eax
    2416:	6e                   	outsb  %ds:(%esi),(%dx)
    2417:	25 ff ff 14 25       	and    $0x2514ffff,%eax
    241c:	70 25                	jo     2443 <_binary_fonts_zap_ext_vga16_psf_start+0x2443>
    241e:	ff                   	(bad)  
    241f:	ff 18                	lcall  *(%eax)
    2421:	25 6f 25 ff ff       	and    $0xffff256f,%eax
    2426:	1c 25                	sbb    $0x25,%al
    2428:	ff                   	(bad)  
    2429:	ff 24 25 ff ff 2c 25 	jmp    *0x252cffff(,%eiz,1)
    2430:	ff                   	(bad)  
    2431:	ff 34 25 ff ff 3c 25 	pushl  0x253cffff(,%eiz,1)
    2438:	ff                   	(bad)  
    2439:	ff 91 25 ff ff ba    	call   *-0x450000db(%ecx)
    243f:	23 3e                	and    (%esi),%edi
    2441:	20 ff                	and    %bh,%bh
    2443:	ff                   	(bad)  
    2444:	bb 23 ff ff bc       	mov    $0xbcffff23,%ebx
    2449:	23 ff                	and    %edi,%edi
    244b:	ff                   	(bad)  
    244c:	bd 23 ff ff 50       	mov    $0x50ffff23,%ebp
    2451:	25 01 25 ff ff       	and    $0xffff2501,%eax
    2456:	51                   	push   %ecx
    2457:	25 03 25 ff ff       	and    $0xffff2503,%eax
    245c:	54                   	push   %esp
    245d:	25 0f 25 ff ff       	and    $0xffff250f,%eax
    2462:	57                   	push   %edi
    2463:	25 13 25 ff ff       	and    $0xffff2513,%eax
    2468:	5a                   	pop    %edx
    2469:	25 17 25 ff ff       	and    $0xffff2517,%eax
    246e:	5d                   	pop    %ebp
    246f:	25 1b 25 ff ff       	and    $0xffff251b,%eax
    2474:	60                   	pusha  
    2475:	25 23 25 ff ff       	and    $0xffff2523,%eax
    247a:	63 25 2b 25 ff ff    	arpl   %sp,0xffff252b
    2480:	66 25 33 25          	and    $0x2533,%ax
    2484:	ff                   	(bad)  
    2485:	ff 69 25             	ljmp   *0x25(%ecx)
    2488:	3b 25 ff ff 6c 25    	cmp    0x256cffff,%esp
    248e:	4b                   	dec    %ebx
    248f:	25 ff ff 88 25       	and    $0x2588ffff,%eax
    2494:	ff                   	(bad)  
    2495:	ff 91 21 ff ff 93    	call   *-0x6c0000df(%ecx)
    249b:	21 ff                	and    %edi,%edi
    249d:	ff 90 21 ff ff 92    	call   *-0x6d0000df(%eax)
    24a3:	21 ff                	and    %edi,%edi
    24a5:	ff e0                	jmp    *%eax
    24a7:	00 ff                	add    %bh,%bh
    24a9:	ff e1                	jmp    *%ecx
    24ab:	00 ff                	add    %bh,%bh
    24ad:	ff e2                	jmp    *%edx
    24af:	00 ff                	add    %bh,%bh
    24b1:	ff e3                	jmp    *%ebx
    24b3:	00 ff                	add    %bh,%bh
    24b5:	ff e4                	jmp    *%esp
    24b7:	00 d3                	add    %dl,%bl
    24b9:	04 ff                	add    $0xff,%al
    24bb:	ff e5                	jmp    *%ebp
    24bd:	00 ff                	add    %bh,%bh
    24bf:	ff e6                	jmp    *%esi
    24c1:	00 d5                	add    %dl,%ch
    24c3:	04 ff                	add    $0xff,%al
    24c5:	ff e7                	jmp    *%edi
    24c7:	00 ff                	add    %bh,%bh
    24c9:	ff                   	(bad)  
    24ca:	e8 00 50 04 ff       	call   ff0474cf <_binary_fonts_zap_ext_vga16_psf_end+0xff044b45>
    24cf:	ff                   	(bad)  
    24d0:	e9 00 ff ff ea       	jmp    eb0023d5 <_binary_fonts_zap_ext_vga16_psf_end+0xeafffa4b>
    24d5:	00 ff                	add    %bh,%bh
    24d7:	ff                   	(bad)  
    24d8:	eb 00                	jmp    24da <_binary_fonts_zap_ext_vga16_psf_start+0x24da>
    24da:	51                   	push   %ecx
    24db:	04 ff                	add    $0xff,%al
    24dd:	ff                   	(bad)  
    24de:	ec                   	in     (%dx),%al
    24df:	00 ff                	add    %bh,%bh
    24e1:	ff                   	(bad)  
    24e2:	ed                   	in     (%dx),%eax
    24e3:	00 ff                	add    %bh,%bh
    24e5:	ff                   	(bad)  
    24e6:	ee                   	out    %al,(%dx)
    24e7:	00 ff                	add    %bh,%bh
    24e9:	ff                   	(bad)  
    24ea:	ef                   	out    %eax,(%dx)
    24eb:	00 57 04             	add    %dl,0x4(%edi)
    24ee:	ff                   	(bad)  
    24ef:	ff f0                	push   %eax
    24f1:	00 ff                	add    %bh,%bh
    24f3:	ff f1                	push   %ecx
    24f5:	00 ff                	add    %bh,%bh
    24f7:	ff f2                	push   %edx
    24f9:	00 ff                	add    %bh,%bh
    24fb:	ff f3                	push   %ebx
    24fd:	00 ff                	add    %bh,%bh
    24ff:	ff f4                	push   %esp
    2501:	00 ff                	add    %bh,%bh
    2503:	ff f5                	push   %ebp
    2505:	00 ff                	add    %bh,%bh
    2507:	ff f6                	push   %esi
    2509:	00 e7                	add    %ah,%bh
    250b:	04 ff                	add    $0xff,%al
    250d:	ff f7                	push   %edi
    250f:	00 ff                	add    %bh,%bh
    2511:	ff                   	(bad)  
    2512:	f8                   	clc    
    2513:	00 ff                	add    %bh,%bh
    2515:	ff                   	(bad)  
    2516:	f9                   	stc    
    2517:	00 ff                	add    %bh,%bh
    2519:	ff                   	(bad)  
    251a:	fa                   	cli    
    251b:	00 ff                	add    %bh,%bh
    251d:	ff                   	(bad)  
    251e:	fb                   	sti    
    251f:	00 ff                	add    %bh,%bh
    2521:	ff                   	(bad)  
    2522:	fc                   	cld    
    2523:	00 ff                	add    %bh,%bh
    2525:	ff                   	(bad)  
    2526:	fd                   	std    
    2527:	00 ff                	add    %bh,%bh
    2529:	ff                   	(bad)  
    252a:	fe 00                	incb   (%eax)
    252c:	f8                   	clc    
    252d:	03 ff                	add    %edi,%edi
    252f:	ff                   	(bad)  
    2530:	ff 00                	incl   (%eax)
    2532:	ff                   	(bad)  
    2533:	ff b4 00 b9 02 ca 02 	pushl  0x2ca02b9(%eax,%eax,1)
    253a:	74 03                	je     253f <_binary_fonts_zap_ext_vga16_psf_start+0x253f>
    253c:	fd                   	std    
    253d:	1f                   	pop    %ds
    253e:	32 20                	xor    (%eax),%ah
    2540:	ff                   	(bad)  
    2541:	ff                   	(bad)  
    2542:	bb 02 bd 02 fe       	mov    $0xfe02bd02,%ebx
    2547:	1f                   	pop    %ds
    2548:	18 20                	sbb    %ah,(%eax)
    254a:	1b 20                	sbb    (%eax),%esp
    254c:	ff                   	(bad)  
    254d:	ff 19                	lcall  *(%ecx)
    254f:	20 bd 1f bf 1f ff    	and    %bh,-0xe040e1(%ebp)
    2555:	ff 36                	pushl  (%esi)
    2557:	20 ff                	and    %bh,%bh
    2559:	ff 33                	pushl  (%ebx)
    255b:	20 ba 02 dd 02 ff    	and    %bh,-0xfd22fe(%edx)
    2561:	ff 16                	call   *(%esi)
    2563:	21 ff                	and    %edi,%edi
    2565:	ff b4 20 ff ff bd 20 	pushl  0x20bdffff(%eax,%eiz,1)
    256c:	ff                   	(bad)  
    256d:	ff 11                	call   *(%ecx)
    256f:	04 82                	add    $0x82,%al
    2571:	01 ff                	add    %edi,%edi
    2573:	ff 13                	call   *(%ebx)
    2575:	04 93                	add    $0x93,%al
    2577:	03 ff                	add    %edi,%edi
    2579:	ff 14 04             	call   *(%esp,%eax,1)
    257c:	ff                   	(bad)  
    257d:	ff 16                	call   *(%esi)
    257f:	04 ff                	add    $0xff,%al
    2581:	ff 17                	call   *(%edi)
    2583:	04 ff                	add    $0xff,%al
    2585:	ff 18                	lcall  *(%eax)
    2587:	04 76                	add    $0x76,%al
    2589:	03 ff                	add    %edi,%edi
    258b:	ff 19                	lcall  *(%ecx)
    258d:	04 ff                	add    $0xff,%al
    258f:	ff 1b                	lcall  *(%ebx)
    2591:	04 ff                	add    $0xff,%al
    2593:	ff 1f                	lcall  *(%edi)
    2595:	04 a0                	add    $0xa0,%al
    2597:	03 0f                	add    (%edi),%ecx
    2599:	22 ff                	and    %bh,%bh
    259b:	ff 23                	jmp    *(%ebx)
    259d:	04 ff                	add    $0xff,%al
    259f:	ff 24 04             	jmp    *(%esp,%eax,1)
    25a2:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    25a3:	03 ff                	add    %edi,%edi
    25a5:	ff 26                	jmp    *(%esi)
    25a7:	04 ff                	add    $0xff,%al
    25a9:	ff 27                	jmp    *(%edi)
    25ab:	04 ff                	add    $0xff,%al
    25ad:	ff 28                	ljmp   *(%eax)
    25af:	04 ff                	add    $0xff,%al
    25b1:	ff 29                	ljmp   *(%ecx)
    25b3:	04 ff                	add    $0xff,%al
    25b5:	ff 2a                	ljmp   *(%edx)
    25b7:	04 ff                	add    $0xff,%al
    25b9:	ff 2b                	ljmp   *(%ebx)
    25bb:	04 ff                	add    $0xff,%al
    25bd:	ff 2c 04             	ljmp   *(%esp,%eax,1)
    25c0:	ff                   	(bad)  
    25c1:	ff 2d 04 ff ff 2e    	ljmp   *0x2effff04
    25c7:	04 ff                	add    $0xff,%al
    25c9:	ff 2f                	ljmp   *(%edi)
    25cb:	04 ff                	add    $0xff,%al
    25cd:	ff 04 04             	incl   (%esp,%eax,1)
    25d0:	ff                   	(bad)  
    25d1:	ff 0e                	decl   (%esi)
    25d3:	04 ff                	add    $0xff,%al
    25d5:	ff 02                	incl   (%edx)
    25d7:	04 ff                	add    $0xff,%al
    25d9:	ff 03                	incl   (%ebx)
    25db:	04 ff                	add    $0xff,%al
    25dd:	ff 09                	decl   (%ecx)
    25df:	04 ff                	add    $0xff,%al
    25e1:	ff 0a                	decl   (%edx)
    25e3:	04 ff                	add    $0xff,%al
    25e5:	ff 0b                	decl   (%ebx)
    25e7:	04 ff                	add    $0xff,%al
    25e9:	ff 0c 04             	decl   (%esp,%eax,1)
    25ec:	30 1e                	xor    %bl,(%esi)
    25ee:	ff                   	(bad)  
    25ef:	ff 0f                	decl   (%edi)
    25f1:	04 ff                	add    $0xff,%al
    25f3:	ff 90 04 ff ff 0d    	call   *0xdffff04(%eax)
    25f9:	04 ff                	add    $0xff,%al
    25fb:	ff 31                	pushl  (%ecx)
    25fd:	04 ff                	add    $0xff,%al
    25ff:	ff 32                	pushl  (%edx)
    2601:	04 ff                	add    $0xff,%al
    2603:	ff 33                	pushl  (%ebx)
    2605:	04 ff                	add    $0xff,%al
    2607:	ff 34 04             	pushl  (%esp,%eax,1)
    260a:	ff                   	(bad)  
    260b:	ff 36                	pushl  (%esi)
    260d:	04 ff                	add    $0xff,%al
    260f:	ff 37                	pushl  (%edi)
    2611:	04 ff                	add    $0xff,%al
    2613:	ff                   	(bad)  
    2614:	38 04 77             	cmp    %al,(%edi,%esi,2)
    2617:	03 ff                	add    %edi,%edi
    2619:	ff                   	(bad)  
    261a:	39 04 ff             	cmp    %eax,(%edi,%edi,8)
    261d:	ff                   	(bad)  
    261e:	3a 04 ff             	cmp    (%edi,%edi,8),%al
    2621:	ff                   	(bad)  
    2622:	3b 04 ff             	cmp    (%edi,%edi,8),%eax
    2625:	ff                   	(bad)  
    2626:	3c 04                	cmp    $0x4,%al
    2628:	ff                   	(bad)  
    2629:	ff                   	(bad)  
    262a:	3d 04 ff ff 3f       	cmp    $0x3fffff04,%eax
    262f:	04 ff                	add    $0xff,%al
    2631:	ff 42 04             	incl   0x4(%edx)
    2634:	ff                   	(bad)  
    2635:	ff 44 04 d5          	incl   -0x2b(%esp,%eax,1)
    2639:	03 78 02             	add    0x2(%eax),%edi
    263c:	ff                   	(bad)  
    263d:	ff 46 04             	incl   0x4(%esi)
    2640:	ff                   	(bad)  
    2641:	ff 47 04             	incl   0x4(%edi)
    2644:	ff                   	(bad)  
    2645:	ff 48 04             	decl   0x4(%eax)
    2648:	ff                   	(bad)  
    2649:	ff 49 04             	decl   0x4(%ecx)
    264c:	ff                   	(bad)  
    264d:	ff 4a 04             	decl   0x4(%edx)
    2650:	ff                   	(bad)  
    2651:	ff 4b 04             	decl   0x4(%ebx)
    2654:	ff                   	(bad)  
    2655:	ff 4c 04 ff          	decl   -0x1(%esp,%eax,1)
    2659:	ff 4d 04             	decl   0x4(%ebp)
    265c:	f6 03 ff             	testb  $0xff,(%ebx)
    265f:	ff 4e 04             	decl   0x4(%esi)
    2662:	ff                   	(bad)  
    2663:	ff 4f 04             	decl   0x4(%edi)
    2666:	ff                   	(bad)  
    2667:	ff 54 04 f5          	call   *-0xb(%esp,%eax,1)
    266b:	03 ff                	add    %edi,%edi
    266d:	ff 5e 04             	lcall  *0x4(%esi)
    2670:	ff                   	(bad)  
    2671:	ff 52 04             	call   *0x4(%edx)
    2674:	ff                   	(bad)  
    2675:	ff 53 04             	call   *0x4(%ebx)
    2678:	ff                   	(bad)  
    2679:	ff 59 04             	lcall  *0x4(%ecx)
    267c:	ff                   	(bad)  
    267d:	ff 5a 04             	lcall  *0x4(%edx)
    2680:	ff                   	(bad)  
    2681:	ff 5b 04             	lcall  *0x4(%ebx)
    2684:	27                   	daa    
    2685:	01 ff                	add    %edi,%edi
    2687:	ff 5c 04 ff          	lcall  *-0x1(%esp,%eax,1)
    268b:	ff 5f 04             	lcall  *0x4(%edi)
    268e:	ff                   	(bad)  
    268f:	ff 91 04 ff ff 5d    	call   *0x5dffff04(%ecx)
    2695:	04 ff                	add    $0xff,%al
    2697:	ff                   	(bad)  
    2698:	7a 03                	jp     269d <_binary_fonts_zap_ext_vga16_psf_start+0x269d>
    269a:	be 1f ff ff 84       	mov    $0x84ffff1f,%esi
    269f:	03 ff                	add    %edi,%edi
    26a1:	ff 85 03 ff ff 86    	incl   -0x790000fd(%ebp)
    26a7:	03 ff                	add    %edi,%edi
    26a9:	ff 88 03 ff ff 89    	decl   -0x760000fd(%eax)
    26af:	03 ff                	add    %edi,%edi
    26b1:	ff 8a 03 ff ff 8c    	decl   -0x730000fd(%edx)
    26b7:	03 ff                	add    %edi,%edi
    26b9:	ff 8e 03 ff ff 8f    	decl   -0x700000fd(%esi)
    26bf:	03 ff                	add    %edi,%edi
    26c1:	ff 90 03 ff ff 94    	call   *-0x6b0000fd(%eax)
    26c7:	03 06                	add    (%esi),%eax
    26c9:	22 ff                	and    %bh,%bh
    26cb:	ff 98 03 9f 01 f4    	lcall  *-0xbfe60fd(%eax)
    26d1:	03 72 04             	add    0x4(%edx),%esi
    26d4:	e8 04 ff ff 9b       	call   9c0025dd <_binary_fonts_zap_ext_vga16_psf_end+0x9bfffc53>
    26d9:	03 45 02             	add    0x2(%ebp),%eax
    26dc:	ff                   	(bad)  
    26dd:	ff 9e 03 ff ff a3    	lcall  *-0x5c0000fd(%esi)
    26e3:	03 a9 01 11 22 ff    	add    -0xddeeff(%ecx),%ebp
    26e9:	ff a8 03 ff ff a9    	ljmp   *-0x560000fd(%eax)
    26ef:	03 26                	add    (%esi),%esp
    26f1:	21 ff                	and    %edi,%edi
    26f3:	ff ac 03 ff ff ad 03 	ljmp   *0x3adffff(%ebx,%eax,1)
    26fa:	ff                   	(bad)  
    26fb:	ff ae 03 ff ff af    	ljmp   *-0x500000fd(%esi)
    2701:	03 ff                	add    %edi,%edi
    2703:	ff b0 03 ff ff b1    	pushl  -0x4e0000fd(%eax)
    2709:	03 ff                	add    %edi,%edi
    270b:	ff b2 03 ff ff b3    	pushl  -0x4c0000fd(%edx)
    2711:	03 ff                	add    %edi,%edi
    2713:	ff b4 03 9f 1e ff ff 	pushl  -0xe161(%ebx,%eax,1)
    271a:	b5 03                	mov    $0x3,%ch
    271c:	5b                   	pop    %ebx
    271d:	02 ff                	add    %bh,%bh
    271f:	ff b6 03 ff ff b7    	pushl  -0x480000fd(%esi)
    2725:	03 9e 01 ff ff b8    	add    -0x470000ff(%esi),%ebx
    272b:	03 ff                	add    %edi,%edi
    272d:	ff                   	(bad)  
    272e:	b9 03 69 02 ff       	mov    $0xff026903,%ecx
    2733:	ff                   	(bad)  
    2734:	ba 03 38 01 ff       	mov    $0xff013803,%edx
    2739:	ff                   	(bad)  
    273a:	bb 03 ff ff bd       	mov    $0xbdffff03,%ebx
    273f:	03 ff                	add    %edi,%edi
    2741:	ff                   	(bad)  
    2742:	be 03 ff ff c1       	mov    $0xc1ffff03,%esi
    2747:	03 ff                	add    %edi,%edi
    2749:	ff c2                	inc    %edx
    274b:	03 ff                	add    %edi,%edi
    274d:	ff c3                	inc    %ebx
    274f:	03 ff                	add    %edi,%edi
    2751:	ff c4                	inc    %esp
    2753:	03 ff                	add    %edi,%edi
    2755:	ff c5                	inc    %ebp
    2757:	03 ff                	add    %edi,%edi
    2759:	ff c6                	inc    %esi
    275b:	03 ff                	add    %edi,%edi
    275d:	ff c7                	inc    %edi
    275f:	03 ff                	add    %edi,%edi
    2761:	ff c8                	dec    %eax
    2763:	03 ff                	add    %edi,%edi
    2765:	ff c9                	dec    %ecx
    2767:	03 ff                	add    %edi,%edi
    2769:	ff ca                	dec    %edx
    276b:	03 ff                	add    %edi,%edi
    276d:	ff cb                	dec    %ebx
    276f:	03 ff                	add    %edi,%edi
    2771:	ff cc                	dec    %esp
    2773:	03 ff                	add    %edi,%edi
    2775:	ff cd                	dec    %ebp
    2777:	03 ff                	add    %edi,%edi
    2779:	ff ce                	dec    %esi
    277b:	03 ff                	add    %edi,%edi
    277d:	ff 00                	incl   (%eax)
    277f:	01 ff                	add    %edi,%edi
    2781:	ff 02                	incl   (%edx)
    2783:	01 d0                	add    %edx,%eax
    2785:	04 ff                	add    $0xff,%al
    2787:	ff 04 01             	incl   (%ecx,%eax,1)
    278a:	ff                   	(bad)  
    278b:	ff 02                	incl   (%edx)
    278d:	1e                   	push   %ds
    278e:	ff                   	(bad)  
    278f:	ff 06                	incl   (%esi)
    2791:	01 ff                	add    %edi,%edi
    2793:	ff 08                	decl   (%eax)
    2795:	01 ff                	add    %edi,%edi
    2797:	ff 0a                	decl   (%edx)
    2799:	01 ff                	add    %edi,%edi
    279b:	ff 0c 01             	decl   (%ecx,%eax,1)
    279e:	ff                   	(bad)  
    279f:	ff 0a                	decl   (%edx)
    27a1:	1e                   	push   %ds
    27a2:	ff                   	(bad)  
    27a3:	ff 0e                	decl   (%esi)
    27a5:	01 ff                	add    %edi,%edi
    27a7:	ff 12                	call   *(%edx)
    27a9:	01 ff                	add    %edi,%edi
    27ab:	ff 16                	call   *(%esi)
    27ad:	01 ff                	add    %edi,%edi
    27af:	ff 1a                	lcall  *(%edx)
    27b1:	01 ff                	add    %edi,%edi
    27b3:	ff 18                	lcall  *(%eax)
    27b5:	01 ff                	add    %edi,%edi
    27b7:	ff 1e                	lcall  *(%esi)
    27b9:	1e                   	push   %ds
    27ba:	ff                   	(bad)  
    27bb:	ff 1c 01             	lcall  *(%ecx,%eax,1)
    27be:	ff                   	(bad)  
    27bf:	ff 20                	jmp    *(%eax)
    27c1:	01 ff                	add    %edi,%edi
    27c3:	ff 22                	jmp    *(%edx)
    27c5:	01 ff                	add    %edi,%edi
    27c7:	ff 24 01             	jmp    *(%ecx,%eax,1)
    27ca:	ff                   	(bad)  
    27cb:	ff 26                	jmp    *(%esi)
    27cd:	01 ff                	add    %edi,%edi
    27cf:	ff 28                	ljmp   *(%eax)
    27d1:	01 ff                	add    %edi,%edi
    27d3:	ff 2a                	ljmp   *(%edx)
    27d5:	01 ff                	add    %edi,%edi
    27d7:	ff 2e                	ljmp   *(%esi)
    27d9:	01 ff                	add    %edi,%edi
    27db:	ff 34 01             	pushl  (%ecx,%eax,1)
    27de:	ff                   	(bad)  
    27df:	ff 36                	pushl  (%esi)
    27e1:	01 ff                	add    %edi,%edi
    27e3:	ff                   	(bad)  
    27e4:	39 01                	cmp    %eax,(%ecx)
    27e6:	ff                   	(bad)  
    27e7:	ff                   	(bad)  
    27e8:	3d 01 ff ff 3b       	cmp    $0x3bffff01,%eax
    27ed:	01 ff                	add    %edi,%edi
    27ef:	ff 41 01             	incl   0x1(%ecx)
    27f2:	ff                   	(bad)  
    27f3:	ff 40 1e             	incl   0x1e(%eax)
    27f6:	ff                   	(bad)  
    27f7:	ff 43 01             	incl   0x1(%ebx)
    27fa:	ff                   	(bad)  
    27fb:	ff 47 01             	incl   0x1(%edi)
    27fe:	ff                   	(bad)  
    27ff:	ff 45 01             	incl   0x1(%ebp)
    2802:	ff                   	(bad)  
    2803:	ff 4a 01             	decl   0x1(%edx)
    2806:	ff                   	(bad)  
    2807:	ff 4c 01 ff          	decl   -0x1(%ecx,%eax,1)
    280b:	ff 50 01             	call   *0x1(%eax)
    280e:	ff                   	(bad)  
    280f:	ff 56 1e             	call   *0x1e(%esi)
    2812:	ff                   	(bad)  
    2813:	ff 54 01 ff          	call   *-0x1(%ecx,%eax,1)
    2817:	ff 58 01             	lcall  *0x1(%eax)
    281a:	ff                   	(bad)  
    281b:	ff 56 01             	call   *0x1(%esi)
    281e:	ff                   	(bad)  
    281f:	ff 5a 01             	lcall  *0x1(%edx)
    2822:	ff                   	(bad)  
    2823:	ff 5c 01 ff          	lcall  *-0x1(%ecx,%eax,1)
    2827:	ff 60 1e             	jmp    *0x1e(%eax)
    282a:	ff                   	(bad)  
    282b:	ff 18                	lcall  *(%eax)
    282d:	02 ff                	add    %bh,%bh
    282f:	ff 6a 1e             	ljmp   *0x1e(%edx)
    2832:	ff                   	(bad)  
    2833:	ff 64 01 ff          	jmp    *-0x1(%ecx,%eax,1)
    2837:	ff 1a                	lcall  *(%edx)
    2839:	02 ff                	add    %bh,%bh
    283b:	ff 62 01             	jmp    *0x1(%edx)
    283e:	ff                   	(bad)  
    283f:	ff 66 01             	jmp    *0x1(%esi)
    2842:	ff                   	(bad)  
    2843:	ff 68 01             	ljmp   *0x1(%eax)
    2846:	ff                   	(bad)  
    2847:	ff 6a 01             	ljmp   *0x1(%edx)
    284a:	ff                   	(bad)  
    284b:	ff 6c 01 ff          	ljmp   *-0x1(%ecx,%eax,1)
    284f:	ff 6e 01             	ljmp   *0x1(%esi)
    2852:	ff                   	(bad)  
    2853:	ff 70 01             	pushl  0x1(%eax)
    2856:	ff                   	(bad)  
    2857:	ff 72 01             	pushl  0x1(%edx)
    285a:	ff                   	(bad)  
    285b:	ff 80 1e ff ff 82    	incl   -0x7d0000e2(%eax)
    2861:	1e                   	push   %ds
    2862:	ff                   	(bad)  
    2863:	ff 74 01 ff          	pushl  -0x1(%ecx,%eax,1)
    2867:	ff 84 1e ff ff f2 1e 	incl   0x1ef2ffff(%esi,%ebx,1)
    286e:	ff                   	(bad)  
    286f:	ff 76 01             	pushl  0x1(%esi)
    2872:	ff                   	(bad)  
    2873:	ff                   	(bad)  
    2874:	79 01                	jns    2877 <_binary_fonts_zap_ext_vga16_psf_start+0x2877>
    2876:	ff                   	(bad)  
    2877:	ff                   	(bad)  
    2878:	7b 01                	jnp    287b <_binary_fonts_zap_ext_vga16_psf_start+0x287b>
    287a:	ff                   	(bad)  
    287b:	ff 01                	incl   (%ecx)
    287d:	01 ff                	add    %edi,%edi
    287f:	ff 03                	incl   (%ebx)
    2881:	01 d1                	add    %edx,%ecx
    2883:	04 ff                	add    $0xff,%al
    2885:	ff 05 01 ff ff 03    	incl   0x3ffff01
    288b:	1e                   	push   %ds
    288c:	ff                   	(bad)  
    288d:	ff 07                	incl   (%edi)
    288f:	01 ff                	add    %edi,%edi
    2891:	ff 09                	decl   (%ecx)
    2893:	01 ff                	add    %edi,%edi
    2895:	ff 0b                	decl   (%ebx)
    2897:	01 ff                	add    %edi,%edi
    2899:	ff 0d 01 ff ff 0b    	decl   0xbffff01
    289f:	1e                   	push   %ds
    28a0:	ff                   	(bad)  
    28a1:	ff 0f                	decl   (%edi)
    28a3:	01 ff                	add    %edi,%edi
    28a5:	ff 11                	call   *(%ecx)
    28a7:	01 ff                	add    %edi,%edi
    28a9:	ff 13                	call   *(%ebx)
    28ab:	01 ff                	add    %edi,%edi
    28ad:	ff 17                	call   *(%edi)
    28af:	01 ff                	add    %edi,%edi
    28b1:	ff 1b                	lcall  *(%ebx)
    28b3:	01 ff                	add    %edi,%edi
    28b5:	ff 19                	lcall  *(%ecx)
    28b7:	01 ff                	add    %edi,%edi
    28b9:	ff 1f                	lcall  *(%edi)
    28bb:	1e                   	push   %ds
    28bc:	ff                   	(bad)  
    28bd:	ff 1d 01 ff ff 21    	lcall  *0x21ffff01
    28c3:	01 ff                	add    %edi,%edi
    28c5:	ff 23                	jmp    *(%ebx)
    28c7:	01 ff                	add    %edi,%edi
    28c9:	ff 25 01 ff ff 29    	jmp    *0x29ffff01
    28cf:	01 ff                	add    %edi,%edi
    28d1:	ff 2b                	ljmp   *(%ebx)
    28d3:	01 ff                	add    %edi,%edi
    28d5:	ff 2f                	ljmp   *(%edi)
    28d7:	01 ff                	add    %edi,%edi
    28d9:	ff 35 01 ff ff 37    	pushl  0x37ffff01
    28df:	01 ff                	add    %edi,%edi
    28e1:	ff                   	(bad)  
    28e2:	3a 01                	cmp    (%ecx),%al
    28e4:	ff                   	(bad)  
    28e5:	ff                   	(bad)  
    28e6:	3e 01 ff             	ds add %edi,%edi
    28e9:	ff                   	(bad)  
    28ea:	3c 01                	cmp    $0x1,%al
    28ec:	ff                   	(bad)  
    28ed:	ff 42 01             	incl   0x1(%edx)
    28f0:	ff                   	(bad)  
    28f1:	ff 41 1e             	incl   0x1e(%ecx)
    28f4:	ff                   	(bad)  
    28f5:	ff 44 01 ff          	incl   -0x1(%ecx,%eax,1)
    28f9:	ff 48 01             	decl   0x1(%eax)
    28fc:	ff                   	(bad)  
    28fd:	ff 46 01             	incl   0x1(%esi)
    2900:	ff                   	(bad)  
    2901:	ff 4b 01             	decl   0x1(%ebx)
    2904:	ff                   	(bad)  
    2905:	ff 4d 01             	decl   0x1(%ebp)
    2908:	ff                   	(bad)  
    2909:	ff 51 01             	call   *0x1(%ecx)
    290c:	ff                   	(bad)  
    290d:	ff 57 1e             	call   *0x1e(%edi)
    2910:	ff                   	(bad)  
    2911:	ff 55 01             	call   *0x1(%ebp)
    2914:	ff                   	(bad)  
    2915:	ff 59 01             	lcall  *0x1(%ecx)
    2918:	ff                   	(bad)  
    2919:	ff 57 01             	call   *0x1(%edi)
    291c:	ff                   	(bad)  
    291d:	ff 5b 01             	lcall  *0x1(%ebx)
    2920:	ff                   	(bad)  
    2921:	ff 5d 01             	lcall  *0x1(%ebp)
    2924:	ff                   	(bad)  
    2925:	ff 61 1e             	jmp    *0x1e(%ecx)
    2928:	ff                   	(bad)  
    2929:	ff 19                	lcall  *(%ecx)
    292b:	02 ff                	add    %bh,%bh
    292d:	ff 6b 1e             	ljmp   *0x1e(%ebx)
    2930:	ff                   	(bad)  
    2931:	ff 65 01             	jmp    *0x1(%ebp)
    2934:	ff                   	(bad)  
    2935:	ff 1b                	lcall  *(%ebx)
    2937:	02 ff                	add    %bh,%bh
    2939:	ff 63 01             	jmp    *0x1(%ebx)
    293c:	ff                   	(bad)  
    293d:	ff 67 01             	jmp    *0x1(%edi)
    2940:	ff                   	(bad)  
    2941:	ff 69 01             	ljmp   *0x1(%ecx)
    2944:	ff                   	(bad)  
    2945:	ff 6b 01             	ljmp   *0x1(%ebx)
    2948:	ff                   	(bad)  
    2949:	ff 6d 01             	ljmp   *0x1(%ebp)
    294c:	ff                   	(bad)  
    294d:	ff 6f 01             	ljmp   *0x1(%edi)
    2950:	ff                   	(bad)  
    2951:	ff 71 01             	pushl  0x1(%ecx)
    2954:	ff                   	(bad)  
    2955:	ff 73 01             	pushl  0x1(%ebx)
    2958:	ff                   	(bad)  
    2959:	ff 81 1e ff ff 83    	incl   -0x7c0000e2(%ecx)
    295f:	1e                   	push   %ds
    2960:	ff                   	(bad)  
    2961:	ff 75 01             	pushl  0x1(%ebp)
    2964:	ff                   	(bad)  
    2965:	ff 85 1e ff ff f3    	incl   -0xc0000e2(%ebp)
    296b:	1e                   	push   %ds
    296c:	ff                   	(bad)  
    296d:	ff 77 01             	pushl  0x1(%edi)
    2970:	ff                   	(bad)  
    2971:	ff                   	(bad)  
    2972:	7a 01                	jp     2975 <_binary_fonts_zap_ext_vga16_psf_start+0x2975>
    2974:	ff                   	(bad)  
    2975:	ff                   	(bad)  
    2976:	7c 01                	jl     2979 <_binary_fonts_zap_ext_vga16_psf_start+0x2979>
    2978:	ff                   	(bad)  
    2979:	ff                   	(bad)  
    297a:	d8 02                	fadds  (%edx)
    297c:	ff                   	(bad)  
    297d:	ff                   	(bad)  
    297e:	d9 02                	flds   (%edx)
    2980:	ff                   	(bad)  
    2981:	ff c7                	inc    %edi
    2983:	02 ff                	add    %bh,%bh
    2985:	ff                   	(bad)  
    2986:	db 02                	fildl  (%edx)
    2988:	ff                   	(bad)  
    2989:	ff                   	.byte 0xff
